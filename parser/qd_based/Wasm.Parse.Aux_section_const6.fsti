module Wasm.Parse.Aux_section_const6

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec.Base
module LS = LowParse.SLow.Base
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes


type aux_section_const6 =
  | C

let string_of_aux_section_const6 = function
  | C -> "c"

inline_for_extraction noextract let aux_section_const6_parser_kind = LP.strong_parser_kind 1 1 None

noextract val aux_section_const6_parser: LP.parser aux_section_const6_parser_kind aux_section_const6

noextract val aux_section_const6_serializer: LP.serializer aux_section_const6_parser

noextract val aux_section_const6_bytesize (x:aux_section_const6) : GTot nat

noextract val aux_section_const6_bytesize_eq (x:aux_section_const6) : Lemma (aux_section_const6_bytesize x == Seq.length (LP.serialize aux_section_const6_serializer x))

val aux_section_const6_parser32: LS.parser32 aux_section_const6_parser

val aux_section_const6_serializer32: LS.serializer32 aux_section_const6_serializer

val aux_section_const6_size32: LS.size32 aux_section_const6_serializer

