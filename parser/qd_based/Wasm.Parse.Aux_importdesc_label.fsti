module Wasm.Parse.Aux_importdesc_label

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec.Base
module LS = LowParse.SLow.Base
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes


type aux_importdesc_label =
  | Func
  | Table
  | Mem
  | Global

let string_of_aux_importdesc_label = function
  | Func -> "func"
  | Table -> "table"
  | Mem -> "mem"
  | Global -> "global"

inline_for_extraction noextract let aux_importdesc_label_parser_kind = LP.strong_parser_kind 1 1 None

noextract val aux_importdesc_label_parser: LP.parser aux_importdesc_label_parser_kind aux_importdesc_label

noextract val aux_importdesc_label_serializer: LP.serializer aux_importdesc_label_parser

noextract val aux_importdesc_label_bytesize (x:aux_importdesc_label) : GTot nat

noextract val aux_importdesc_label_bytesize_eq (x:aux_importdesc_label) : Lemma (aux_importdesc_label_bytesize x == Seq.length (LP.serialize aux_importdesc_label_serializer x))

val aux_importdesc_label_parser32: LS.parser32 aux_importdesc_label_parser

val aux_importdesc_label_serializer32: LS.serializer32 aux_importdesc_label_serializer

val aux_importdesc_label_size32: LS.size32 aux_importdesc_label_serializer

