module Wasm.Parse.Aux_version_1

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec.Base
module LS = LowParse.SLow.Base
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes


type aux_version_1 =
  | Version_1

let string_of_aux_version_1 = function
  | Version_1 -> "version_1"

inline_for_extraction noextract let aux_version_1_parser_kind = LP.strong_parser_kind 1 1 None

noextract val aux_version_1_parser: LP.parser aux_version_1_parser_kind aux_version_1

noextract val aux_version_1_serializer: LP.serializer aux_version_1_parser

noextract val aux_version_1_bytesize (x:aux_version_1) : GTot nat

noextract val aux_version_1_bytesize_eq (x:aux_version_1) : Lemma (aux_version_1_bytesize x == Seq.length (LP.serialize aux_version_1_serializer x))

val aux_version_1_parser32: LS.parser32 aux_version_1_parser

val aux_version_1_serializer32: LS.serializer32 aux_version_1_serializer

val aux_version_1_size32: LS.size32 aux_version_1_serializer

