module Wasm.Parse.Start

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec
module LS = LowParse.SLow
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes

#reset-options "--using_facts_from '* -FStar.Tactics -FStar.Reflection' --z3rlimit 16 --z3cliopt smt.arith.nl=false --max_fuel 2 --max_ifuel 2"

noextract let start_parser = funcidx_parser

noextract let start_serializer = funcidx_serializer

let start_bytesize (x:start) : GTot nat = Seq.length (start_serializer x)

let start_bytesize_eq x = ()

let start_parser32 = funcidx_parser32

let start_serializer32 = funcidx_serializer32

let start_size32 = funcidx_size32

let start_bytesize_eqn x = (funcidx_bytesize_eq (x))

let start_parser_serializer_eq _ = ()

