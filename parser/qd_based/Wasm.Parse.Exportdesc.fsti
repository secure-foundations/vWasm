module Wasm.Parse.Exportdesc

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec.Base
module LS = LowParse.SLow.Base
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes

open Wasm.Parse.Aux_exportdesc_label
open Wasm.Parse.Funcidx
open Wasm.Parse.Tableidx
open Wasm.Parse.Memidx
open Wasm.Parse.Globalidx

type exportdesc =
  | X_func of funcidx
  | X_table of tableidx
  | X_mem of memidx
  | X_global of globalidx

inline_for_extraction let tag_of_exportdesc (x:exportdesc) : aux_exportdesc_label = match x with
  | X_func _ -> Func
  | X_table _ -> Table
  | X_mem _ -> Mem
  | X_global _ -> Global

inline_for_extraction noextract let exportdesc_parser_kind = LP.strong_parser_kind 5 5 None

noextract val exportdesc_parser: LP.parser exportdesc_parser_kind exportdesc

noextract val exportdesc_serializer: LP.serializer exportdesc_parser

noextract val exportdesc_bytesize (x:exportdesc) : GTot nat

noextract val exportdesc_bytesize_eq (x:exportdesc) : Lemma (exportdesc_bytesize x == Seq.length (LP.serialize exportdesc_serializer x))

val exportdesc_parser32: LS.parser32 exportdesc_parser

val exportdesc_serializer32: LS.serializer32 exportdesc_serializer

val exportdesc_size32: LS.size32 exportdesc_serializer

val exportdesc_bytesize_eqn_func (x: funcidx) : Lemma (exportdesc_bytesize (X_func x) == 1 + (funcidx_bytesize (x))) [SMTPat (exportdesc_bytesize (X_func x))]

val exportdesc_bytesize_eqn_table (x: tableidx) : Lemma (exportdesc_bytesize (X_table x) == 1 + (tableidx_bytesize (x))) [SMTPat (exportdesc_bytesize (X_table x))]

val exportdesc_bytesize_eqn_mem (x: memidx) : Lemma (exportdesc_bytesize (X_mem x) == 1 + (memidx_bytesize (x))) [SMTPat (exportdesc_bytesize (X_mem x))]

val exportdesc_bytesize_eqn_global (x: globalidx) : Lemma (exportdesc_bytesize (X_global x) == 1 + (globalidx_bytesize (x))) [SMTPat (exportdesc_bytesize (X_global x))]

