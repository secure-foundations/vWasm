module Wasm.Parse.Expr

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec
module LS = LowParse.SLow
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes

#reset-options "--using_facts_from '* -FStar.Tactics -FStar.Reflection' --z3rlimit 16 --z3cliopt smt.arith.nl=false --max_fuel 2 --max_ifuel 2"

let expr_list_bytesize x = Seq.length (LP.serialize (LP.serialize_list _ instr_serializer) x)

let expr_list_bytesize_nil = LP.serialize_list_nil instr_parser instr_serializer

let expr_list_bytesize_cons x y = LP.serialize_list_cons instr_parser instr_serializer x y; (instr_bytesize_eq (x))

let check_expr_list_bytesize l =
  let x = LS.size32_list instr_size32 () l in
  0ul `U32.lte` x && x `U32.lte` 1048575ul

type expr' = LP.parse_bounded_vldata_strong_t 0 1048575 (LP.serialize_list _ instr_serializer)

inline_for_extraction let synth_expr (x: expr') : Tot expr = x

inline_for_extraction let synth_expr_recip (x: expr) : Tot expr' = x

noextract let expr'_parser : LP.parser _ expr' =
  LP.parse_bounded_vldata_strong 0 1048575 (LP.serialize_list _ instr_serializer)

let expr_parser = expr'_parser `LP.parse_synth` synth_expr 

noextract let expr'_serializer : LP.serializer expr'_parser =
  LP.serialize_bounded_vldata_strong 0 1048575 (LP.serialize_list _ instr_serializer)

let expr_serializer = LP.serialize_synth _ synth_expr expr'_serializer synth_expr_recip ()

let expr_bytesize (x:expr) : GTot nat = Seq.length (expr_serializer x)

let expr_bytesize_eq x = ()

inline_for_extraction noextract let expr'_parser32 : LS.parser32 expr'_parser =
  LS.parse32_bounded_vldata_strong 0 0ul 1048575 1048575ul (LP.serialize_list _ instr_serializer) (LS.parse32_list instr_parser32)

let expr_parser32 = LS.parse32_synth' _ synth_expr expr'_parser32 ()

inline_for_extraction noextract let expr'_serializer32 : LS.serializer32 expr'_serializer =
  LS.serialize32_bounded_vldata_strong 0 1048575 (LS.partial_serialize32_list _ instr_serializer instr_serializer32 ())

let expr_serializer32 = LS.serialize32_synth' _ synth_expr _ expr'_serializer32 synth_expr_recip ()

inline_for_extraction noextract let expr'_size32 : LS.size32 expr'_serializer =
  LS.size32_bounded_vldata_strong 0 1048575 (LS.size32_list instr_size32 ()) 3ul

let expr_size32 = LS.size32_synth' _ synth_expr _ expr'_size32 synth_expr_recip ()

let expr_bytesize_eqn x = LP.serialize_synth_eq expr'_parser synth_expr expr'_serializer synth_expr_recip () x