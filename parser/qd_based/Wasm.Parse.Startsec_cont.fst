module Wasm.Parse.Startsec_cont

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec
module LS = LowParse.SLow
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes

#reset-options "--using_facts_from '* -FStar.Tactics -FStar.Reflection' --z3rlimit 16 --z3cliopt smt.arith.nl=false --max_fuel 2 --max_ifuel 2"

let startsec_cont_parser =
  LP.parse_bounded_vldata 0 16777215 start_parser

let startsec_cont_serializer =
  LP.serialize_bounded_vldata 0 16777215 start_serializer

let startsec_cont_bytesize (x:startsec_cont) : GTot nat = Seq.length (startsec_cont_serializer x)

let startsec_cont_bytesize_eq x = ()

let startsec_cont_parser32 =
  LS.parse32_bounded_vldata 0 0ul 16777215 16777215ul start_parser32

let startsec_cont_serializer32 =
  LS.serialize32_bounded_vldata 0 16777215 start_serializer32

let startsec_cont_size32 =
  LS.size32_bounded_vldata 0 16777215 start_size32 3ul

let startsec_cont_bytesize_eqn x =
  (start_bytesize_eq (x))

