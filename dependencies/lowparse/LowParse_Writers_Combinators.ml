open Prims




let (leaf_reader_of_lp_leaf_reader :
  LowParse_Writers_Parser.parser ->
    (unit ->
       unit -> (Obj.t, Obj.t) LowParse_Slice.slice -> FStar_UInt32.t -> Obj.t)
      -> FStar_UInt8.t LowStar_Buffer.buffer -> FStar_UInt32.t -> Obj.t)
  =
  fun p ->
    fun r ->
      fun b ->
        fun len ->
          r () ()
            (Obj.magic { LowParse_Slice.base = b; LowParse_Slice.len = len })
            (FStar_UInt32.uint_to_t Prims.int_zero)
let (deref :
  LowParse_Writers_Parser.parser ->
    unit ->
      (unit ->
         unit ->
           (Obj.t, Obj.t) LowParse_Slice.slice -> FStar_UInt32.t -> Obj.t)
        ->
        LowParse_Writers_Effect.rptr ->
          (Obj.t, unit, unit, Prims.l_False, unit)
            LowParse_Writers_Effect.read_repr)
  =
  fun p ->
    fun inv ->
      fun r ->
        fun x ->
          LowParse_Writers_Effect.ReadRepr
            ((),
              (LowParse_Writers_Effect.deref_impl p ()
                 (fun b ->
                    fun len ->
                      r () ()
                        (Obj.magic
                           {
                             LowParse_Slice.base = b;
                             LowParse_Slice.len = len
                           }) (FStar_UInt32.uint_to_t Prims.int_zero)) x))
let (leaf_writer_of_lp_leaf_writer :
  LowParse_Writers_Parser.parser ->
    (Obj.t ->
       unit ->
         unit ->
           (Obj.t, Obj.t) LowParse_Slice.slice ->
             FStar_UInt32.t -> FStar_UInt32.t)
      ->
      FStar_UInt8.t LowStar_Buffer.buffer ->
        FStar_UInt32.t ->
          Obj.t -> FStar_UInt32.t FStar_Pervasives_Native.option)
  =
  fun p ->
    fun w ->
      if
        (match match match p with
                     | LowParse_Writers_Parser.Parser (t, p1) -> p1
               with
               | { LowParse_Writers_Parser.kind = kind;
                   LowParse_Writers_Parser.parser = parser;
                   LowParse_Writers_Parser.serializer = serializer;
                   LowParse_Writers_Parser.jumper = jumper;_} -> kind
         with
         | { LowParse_Spec_Base.parser_kind_low = parser_kind_low;
             LowParse_Spec_Base.parser_kind_high = parser_kind_high;
             LowParse_Spec_Base.parser_kind_subkind = parser_kind_subkind;
             LowParse_Spec_Base.parser_kind_metadata = parser_kind_metadata;_}
             -> parser_kind_low)
          > (Prims.parse_int "4294967295")
      then fun b -> fun len -> fun x -> FStar_Pervasives_Native.None
      else
        (fun b ->
           fun len ->
             fun x ->
               if
                 FStar_UInt32.lt len
                   (FStar_UInt32.uint_to_t
                      (match match match p with
                                   | LowParse_Writers_Parser.Parser (t, p1)
                                       -> p1
                             with
                             | { LowParse_Writers_Parser.kind = kind;
                                 LowParse_Writers_Parser.parser = parser;
                                 LowParse_Writers_Parser.serializer =
                                   serializer;
                                 LowParse_Writers_Parser.jumper = jumper;_}
                                 -> kind
                       with
                       | {
                           LowParse_Spec_Base.parser_kind_low =
                             parser_kind_low;
                           LowParse_Spec_Base.parser_kind_high =
                             parser_kind_high;
                           LowParse_Spec_Base.parser_kind_subkind =
                             parser_kind_subkind;
                           LowParse_Spec_Base.parser_kind_metadata =
                             parser_kind_metadata;_}
                           -> parser_kind_low))
               then FStar_Pervasives_Native.None
               else
                 (let uu___2 =
                    w x () ()
                      (Obj.magic
                         { LowParse_Slice.base = b; LowParse_Slice.len = len
                         }) (FStar_UInt32.uint_to_t Prims.int_zero) in
                  FStar_Pervasives_Native.Some uu___2))
let (start :
  LowParse_Writers_Parser.parser ->
    (Obj.t ->
       unit ->
         unit ->
           (Obj.t, Obj.t) LowParse_Slice.slice ->
             FStar_UInt32.t -> FStar_UInt32.t)
      ->
      unit ->
        Obj.t ->
          (unit, unit, unit, unit, unit, Prims.l_False, unit)
            LowParse_Writers_Effect.repr)
  =
  fun p ->
    fun w ->
      fun l ->
        fun x ->
          LowParse_Writers_Effect.Repr
            ((),
              (LowParse_Writers_Effect.elem_writer_impl p
                 (if
                    (match match match p with
                                 | LowParse_Writers_Parser.Parser (t, p1) ->
                                     p1
                           with
                           | { LowParse_Writers_Parser.kind = kind;
                               LowParse_Writers_Parser.parser = parser;
                               LowParse_Writers_Parser.serializer =
                                 serializer;
                               LowParse_Writers_Parser.jumper = jumper;_} ->
                               kind
                     with
                     | {
                         LowParse_Spec_Base.parser_kind_low = parser_kind_low;
                         LowParse_Spec_Base.parser_kind_high =
                           parser_kind_high;
                         LowParse_Spec_Base.parser_kind_subkind =
                           parser_kind_subkind;
                         LowParse_Spec_Base.parser_kind_metadata =
                           parser_kind_metadata;_}
                         -> parser_kind_low)
                      > (Prims.parse_int "4294967295")
                  then
                    fun b ->
                      fun len -> fun x1 -> FStar_Pervasives_Native.None
                  else
                    (fun b ->
                       fun len ->
                         fun x1 ->
                           if
                             FStar_UInt32.lt len
                               (FStar_UInt32.uint_to_t
                                  (match match match p with
                                               | LowParse_Writers_Parser.Parser
                                                   (t, p1) -> p1
                                         with
                                         | {
                                             LowParse_Writers_Parser.kind =
                                               kind;
                                             LowParse_Writers_Parser.parser =
                                               parser;
                                             LowParse_Writers_Parser.serializer
                                               = serializer;
                                             LowParse_Writers_Parser.jumper =
                                               jumper;_}
                                             -> kind
                                   with
                                   | {
                                       LowParse_Spec_Base.parser_kind_low =
                                         parser_kind_low;
                                       LowParse_Spec_Base.parser_kind_high =
                                         parser_kind_high;
                                       LowParse_Spec_Base.parser_kind_subkind
                                         = parser_kind_subkind;
                                       LowParse_Spec_Base.parser_kind_metadata
                                         = parser_kind_metadata;_}
                                       -> parser_kind_low))
                           then FStar_Pervasives_Native.None
                           else
                             (let uu___2 =
                                w x1 () ()
                                  (Obj.magic
                                     {
                                       LowParse_Slice.base = b;
                                       LowParse_Slice.len = len
                                     })
                                  (FStar_UInt32.uint_to_t Prims.int_zero) in
                              FStar_Pervasives_Native.Some uu___2))) () x))
let (append :
  LowParse_Writers_Parser.parser ->
    LowParse_Writers_Parser.parser ->
      (Obj.t ->
         unit ->
           unit ->
             (Obj.t, Obj.t) LowParse_Slice.slice ->
               FStar_UInt32.t -> FStar_UInt32.t)
        ->
        unit ->
          Obj.t ->
            (unit, unit, unit, unit, unit, Prims.l_False, unit)
              LowParse_Writers_Effect.repr)
  =
  fun uu___4 ->
    fun uu___3 ->
      fun uu___2 ->
        fun uu___1 ->
          fun uu___ ->
            (fun fr ->
               fun p ->
                 fun w ->
                   fun l ->
                     fun x ->
                       Obj.magic
                         (LowParse_Writers_Effect.Repr
                            ((),
                              (Obj.magic
                                 (LowParse_Writers_Effect.frame_impl fr () p
                                    () () ()
                                    (fun uu___ ->
                                       LowParse_Writers_Effect.Repr
                                         ((),
                                           (LowParse_Writers_Effect.elem_writer_impl
                                              p
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low)
                                                   >
                                                   (Prims.parse_int "4294967295")
                                               then
                                                 fun b ->
                                                   fun len ->
                                                     fun x1 ->
                                                       FStar_Pervasives_Native.None
                                               else
                                                 (fun b ->
                                                    fun len ->
                                                      fun x1 ->
                                                        if
                                                          FStar_UInt32.lt len
                                                            (FStar_UInt32.uint_to_t
                                                               (match 
                                                                  match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                with
                                                                | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low))
                                                        then
                                                          FStar_Pervasives_Native.None
                                                        else
                                                          (let uu___3 =
                                                             w x1 () ()
                                                               (Obj.magic
                                                                  {
                                                                    LowParse_Slice.base
                                                                    = b;
                                                                    LowParse_Slice.len
                                                                    = len
                                                                  })
                                                               (FStar_UInt32.uint_to_t
                                                                  Prims.int_zero) in
                                                           FStar_Pervasives_Native.Some
                                                             uu___3))) () x))))))))
              uu___4 uu___3 uu___2 uu___1 uu___
type ('p1, 'p2, 'lens, 'g, 'a) access_t =
  unit ->
    LowParse_Writers_Effect.rptr ->
      (LowParse_Writers_Effect.rptr, unit, unit, unit, unit)
        LowParse_Writers_Effect.read_repr
let lp_clens_to_clens :
  't1 't2 .
    ('t1, 't2) LowParse_Low_Base_Spec.clens ->
      ('t1, 't2) LowParse_Writers_Parser.clens
  =
  fun c ->
    {
      LowParse_Writers_Parser.clens_cond = ();
      LowParse_Writers_Parser.clens_get = ()
    }

let (access_impl :
  LowParse_Writers_Parser.parser ->
    LowParse_Writers_Parser.parser ->
      (Obj.t, Obj.t) LowParse_Low_Base_Spec.clens ->
        unit ->
          (unit ->
             unit ->
               (Obj.t, Obj.t) LowParse_Slice.slice ->
                 FStar_UInt32.t -> FStar_UInt32.t)
            ->
            unit ->
              LowParse_Writers_Effect.rptr ->
                (LowParse_Writers_Effect.rptr, unit, unit, Prims.l_False,
                  unit, unit) LowParse_Writers_Effect.read_repr_impl)
  =
  fun p1 ->
    fun p2 ->
      fun lens ->
        fun g ->
          fun a ->
            fun inv ->
              fun x ->
                LowParse_Writers_Effect.access_impl p1 p2
                  (lp_clens_to_clens lens) () () a x
let (access :
  LowParse_Writers_Parser.parser ->
    LowParse_Writers_Parser.parser ->
      (Obj.t, Obj.t) LowParse_Low_Base_Spec.clens ->
        unit ->
          (unit ->
             unit ->
               (Obj.t, Obj.t) LowParse_Slice.slice ->
                 FStar_UInt32.t -> FStar_UInt32.t)
            ->
            unit ->
              LowParse_Writers_Effect.rptr ->
                (LowParse_Writers_Effect.rptr, unit, unit, Prims.l_False,
                  unit) LowParse_Writers_Effect.read_repr)
  =
  fun uu___6 ->
    fun uu___5 ->
      fun uu___4 ->
        fun uu___3 ->
          fun uu___2 ->
            fun uu___1 ->
              fun uu___ ->
                (fun p1 ->
                   fun p2 ->
                     fun lens ->
                       fun g ->
                         fun a ->
                           fun inv ->
                             fun x ->
                               Obj.magic
                                 (LowParse_Writers_Effect.ReadRepr
                                    ((),
                                      (Obj.magic
                                         (LowParse_Writers_Effect.access_impl
                                            p1 p2 (lp_clens_to_clens lens) ()
                                            () a x))))) uu___6 uu___5 uu___4
                  uu___3 uu___2 uu___1 uu___

type ('min, 'max, 'p, 'x) parse_vldata_pred = unit
type ('min, 'max, 'p) parse_vldata_t = Obj.t

let (parse_vldata :
  LowParse_Writers_Parser.parser ->
    FStar_UInt32.t -> FStar_UInt32.t -> LowParse_Writers_Parser.parser)
  =
  fun p ->
    fun min ->
      fun max ->
        LowParse_Writers_Parser.Parser
          ((),
            {
              LowParse_Writers_Parser.kind =
                {
                  LowParse_Spec_Base.parser_kind_low =
                    ((if (FStar_UInt32.v max) < (Prims.of_int (256))
                      then Prims.int_one
                      else
                        if (FStar_UInt32.v max) < (Prims.parse_int "65536")
                        then (Prims.of_int (2))
                        else
                          if
                            (FStar_UInt32.v max) <
                              (Prims.parse_int "16777216")
                          then (Prims.of_int (3))
                          else (Prims.of_int (4)))
                       +
                       (if
                          (match match match p with
                                       | LowParse_Writers_Parser.Parser
                                           (t, p1) -> p1
                                 with
                                 | { LowParse_Writers_Parser.kind = kind;
                                     LowParse_Writers_Parser.parser = parser;
                                     LowParse_Writers_Parser.serializer =
                                       serializer;
                                     LowParse_Writers_Parser.jumper = jumper;_}
                                     -> kind
                           with
                           | {
                               LowParse_Spec_Base.parser_kind_low =
                                 parser_kind_low;
                               LowParse_Spec_Base.parser_kind_high =
                                 parser_kind_high;
                               LowParse_Spec_Base.parser_kind_subkind =
                                 parser_kind_subkind;
                               LowParse_Spec_Base.parser_kind_metadata =
                                 parser_kind_metadata;_}
                               -> parser_kind_low)
                            > (FStar_UInt32.v min)
                        then
                          match match match p with
                                      | LowParse_Writers_Parser.Parser
                                          (t, p1) -> p1
                                with
                                | { LowParse_Writers_Parser.kind = kind;
                                    LowParse_Writers_Parser.parser = parser;
                                    LowParse_Writers_Parser.serializer =
                                      serializer;
                                    LowParse_Writers_Parser.jumper = jumper;_}
                                    -> kind
                          with
                          | {
                              LowParse_Spec_Base.parser_kind_low =
                                parser_kind_low;
                              LowParse_Spec_Base.parser_kind_high =
                                parser_kind_high;
                              LowParse_Spec_Base.parser_kind_subkind =
                                parser_kind_subkind;
                              LowParse_Spec_Base.parser_kind_metadata =
                                parser_kind_metadata;_}
                              -> parser_kind_low
                        else FStar_UInt32.v min));
                  LowParse_Spec_Base.parser_kind_high =
                    (FStar_Pervasives_Native.Some
                       ((if (FStar_UInt32.v max) < (Prims.of_int (256))
                         then Prims.int_one
                         else
                           if
                             (FStar_UInt32.v max) < (Prims.parse_int "65536")
                           then (Prims.of_int (2))
                           else
                             if
                               (FStar_UInt32.v max) <
                                 (Prims.parse_int "16777216")
                             then (Prims.of_int (3))
                             else (Prims.of_int (4)))
                          +
                          (if
                             (match match match match p with
                                                | LowParse_Writers_Parser.Parser
                                                    (t, p1) -> p1
                                          with
                                          | {
                                              LowParse_Writers_Parser.kind =
                                                kind;
                                              LowParse_Writers_Parser.parser
                                                = parser;
                                              LowParse_Writers_Parser.serializer
                                                = serializer;
                                              LowParse_Writers_Parser.jumper
                                                = jumper;_}
                                              -> kind
                                    with
                                    | {
                                        LowParse_Spec_Base.parser_kind_low =
                                          parser_kind_low;
                                        LowParse_Spec_Base.parser_kind_high =
                                          parser_kind_high;
                                        LowParse_Spec_Base.parser_kind_subkind
                                          = parser_kind_subkind;
                                        LowParse_Spec_Base.parser_kind_metadata
                                          = parser_kind_metadata;_}
                                        -> parser_kind_high
                              with
                              | FStar_Pervasives_Native.None ->
                                  FStar_UInt32.v max
                              | FStar_Pervasives_Native.Some kmax ->
                                  if kmax < (FStar_UInt32.v max)
                                  then kmax
                                  else FStar_UInt32.v max)
                               <
                               ((if
                                   (match match match p with
                                                | LowParse_Writers_Parser.Parser
                                                    (t, p1) -> p1
                                          with
                                          | {
                                              LowParse_Writers_Parser.kind =
                                                kind;
                                              LowParse_Writers_Parser.parser
                                                = parser;
                                              LowParse_Writers_Parser.serializer
                                                = serializer;
                                              LowParse_Writers_Parser.jumper
                                                = jumper;_}
                                              -> kind
                                    with
                                    | {
                                        LowParse_Spec_Base.parser_kind_low =
                                          parser_kind_low;
                                        LowParse_Spec_Base.parser_kind_high =
                                          parser_kind_high;
                                        LowParse_Spec_Base.parser_kind_subkind
                                          = parser_kind_subkind;
                                        LowParse_Spec_Base.parser_kind_metadata
                                          = parser_kind_metadata;_}
                                        -> parser_kind_low)
                                     > (FStar_UInt32.v min)
                                 then
                                   match match match p with
                                               | LowParse_Writers_Parser.Parser
                                                   (t, p1) -> p1
                                         with
                                         | {
                                             LowParse_Writers_Parser.kind =
                                               kind;
                                             LowParse_Writers_Parser.parser =
                                               parser;
                                             LowParse_Writers_Parser.serializer
                                               = serializer;
                                             LowParse_Writers_Parser.jumper =
                                               jumper;_}
                                             -> kind
                                   with
                                   | {
                                       LowParse_Spec_Base.parser_kind_low =
                                         parser_kind_low;
                                       LowParse_Spec_Base.parser_kind_high =
                                         parser_kind_high;
                                       LowParse_Spec_Base.parser_kind_subkind
                                         = parser_kind_subkind;
                                       LowParse_Spec_Base.parser_kind_metadata
                                         = parser_kind_metadata;_}
                                       -> parser_kind_low
                                 else FStar_UInt32.v min))
                           then
                             (if
                                (match match match p with
                                             | LowParse_Writers_Parser.Parser
                                                 (t, p1) -> p1
                                       with
                                       | {
                                           LowParse_Writers_Parser.kind =
                                             kind;
                                           LowParse_Writers_Parser.parser =
                                             parser;
                                           LowParse_Writers_Parser.serializer
                                             = serializer;
                                           LowParse_Writers_Parser.jumper =
                                             jumper;_}
                                           -> kind
                                 with
                                 | {
                                     LowParse_Spec_Base.parser_kind_low =
                                       parser_kind_low;
                                     LowParse_Spec_Base.parser_kind_high =
                                       parser_kind_high;
                                     LowParse_Spec_Base.parser_kind_subkind =
                                       parser_kind_subkind;
                                     LowParse_Spec_Base.parser_kind_metadata
                                       = parser_kind_metadata;_}
                                     -> parser_kind_low)
                                  > (FStar_UInt32.v min)
                              then
                                match match match p with
                                            | LowParse_Writers_Parser.Parser
                                                (t, p1) -> p1
                                      with
                                      | {
                                          LowParse_Writers_Parser.kind = kind;
                                          LowParse_Writers_Parser.parser =
                                            parser;
                                          LowParse_Writers_Parser.serializer
                                            = serializer;
                                          LowParse_Writers_Parser.jumper =
                                            jumper;_}
                                          -> kind
                                with
                                | {
                                    LowParse_Spec_Base.parser_kind_low =
                                      parser_kind_low;
                                    LowParse_Spec_Base.parser_kind_high =
                                      parser_kind_high;
                                    LowParse_Spec_Base.parser_kind_subkind =
                                      parser_kind_subkind;
                                    LowParse_Spec_Base.parser_kind_metadata =
                                      parser_kind_metadata;_}
                                    -> parser_kind_low
                              else FStar_UInt32.v min)
                           else
                             (match match match match p with
                                                | LowParse_Writers_Parser.Parser
                                                    (t, p1) -> p1
                                          with
                                          | {
                                              LowParse_Writers_Parser.kind =
                                                kind;
                                              LowParse_Writers_Parser.parser
                                                = parser;
                                              LowParse_Writers_Parser.serializer
                                                = serializer;
                                              LowParse_Writers_Parser.jumper
                                                = jumper;_}
                                              -> kind
                                    with
                                    | {
                                        LowParse_Spec_Base.parser_kind_low =
                                          parser_kind_low;
                                        LowParse_Spec_Base.parser_kind_high =
                                          parser_kind_high;
                                        LowParse_Spec_Base.parser_kind_subkind
                                          = parser_kind_subkind;
                                        LowParse_Spec_Base.parser_kind_metadata
                                          = parser_kind_metadata;_}
                                        -> parser_kind_high
                              with
                              | FStar_Pervasives_Native.None ->
                                  FStar_UInt32.v max
                              | FStar_Pervasives_Native.Some kmax ->
                                  if kmax < (FStar_UInt32.v max)
                                  then kmax
                                  else FStar_UInt32.v max))));
                  LowParse_Spec_Base.parser_kind_subkind =
                    (FStar_Pervasives_Native.Some
                       LowParse_Spec_Base.ParserStrong);
                  LowParse_Spec_Base.parser_kind_metadata =
                    (match match match match p with
                                       | LowParse_Writers_Parser.Parser
                                           (t, p1) -> p1
                                 with
                                 | { LowParse_Writers_Parser.kind = kind;
                                     LowParse_Writers_Parser.parser = parser;
                                     LowParse_Writers_Parser.serializer =
                                       serializer;
                                     LowParse_Writers_Parser.jumper = jumper;_}
                                     -> kind
                           with
                           | {
                               LowParse_Spec_Base.parser_kind_low =
                                 parser_kind_low;
                               LowParse_Spec_Base.parser_kind_high =
                                 parser_kind_high;
                               LowParse_Spec_Base.parser_kind_subkind =
                                 parser_kind_subkind;
                               LowParse_Spec_Base.parser_kind_metadata =
                                 parser_kind_metadata;_}
                               -> parser_kind_metadata
                     with
                     | FStar_Pervasives_Native.Some
                         (LowParse_Spec_Base.ParserKindMetadataFail) ->
                         FStar_Pervasives_Native.Some
                           LowParse_Spec_Base.ParserKindMetadataFail
                     | uu___ -> FStar_Pervasives_Native.None)
                };
              LowParse_Writers_Parser.parser = ();
              LowParse_Writers_Parser.serializer = ();
              LowParse_Writers_Parser.jumper =
                (fun rrel ->
                   fun rel ->
                     fun input ->
                       fun pos ->
                         let h = FStar_HyperStack_ST.get () in
                         let h1 = FStar_HyperStack_ST.get () in
                         let h2 = FStar_HyperStack_ST.get () in
                         let uu___ =
                           let uu___1 =
                             match if
                                     (FStar_UInt32.v max) <
                                       (Prims.of_int (256))
                                   then Prims.int_one
                                   else
                                     if
                                       (FStar_UInt32.v max) <
                                         (Prims.parse_int "65536")
                                     then (Prims.of_int (2))
                                     else
                                       if
                                         (FStar_UInt32.v max) <
                                           (Prims.parse_int "16777216")
                                       then (Prims.of_int (3))
                                       else (Prims.of_int (4))
                             with
                             | uu___2 when uu___2 = Prims.int_one ->
                                 (LowParse_Low_BoundedInt.read_bounded_integer_1
                                    ()) () () input pos
                             | uu___2 when uu___2 = (Prims.of_int (2)) ->
                                 (LowParse_Low_BoundedInt.read_bounded_integer_2
                                    ()) () () input pos
                             | uu___2 when uu___2 = (Prims.of_int (3)) ->
                                 (LowParse_Low_BoundedInt.read_bounded_integer_3
                                    ()) () () input pos
                             | uu___2 when uu___2 = (Prims.of_int (4)) ->
                                 (LowParse_Low_BoundedInt.read_bounded_integer_4
                                    ()) () () input pos in
                           FStar_UInt32.add
                             (FStar_UInt32.uint_to_t
                                (if
                                   (FStar_UInt32.v max) <
                                     (Prims.of_int (256))
                                 then Prims.int_one
                                 else
                                   if
                                     (FStar_UInt32.v max) <
                                       (Prims.parse_int "65536")
                                   then (Prims.of_int (2))
                                   else
                                     if
                                       (FStar_UInt32.v max) <
                                         (Prims.parse_int "16777216")
                                     then (Prims.of_int (3))
                                     else (Prims.of_int (4)))) uu___1 in
                         FStar_UInt32.add pos uu___)
            })
type integer_size = FStar_UInt32.t
let (log256 : FStar_UInt32.t -> FStar_UInt32.t) =
  fun max ->
    if FStar_UInt32.lt max (FStar_UInt32.uint_to_t (Prims.of_int (256)))
    then FStar_UInt32.uint_to_t Prims.int_one
    else
      if
        FStar_UInt32.lt max
          (FStar_UInt32.uint_to_t (Prims.parse_int "65536"))
      then FStar_UInt32.uint_to_t (Prims.of_int (2))
      else
        if
          FStar_UInt32.lt max
            (FStar_UInt32.uint_to_t (Prims.parse_int "16777216"))
        then FStar_UInt32.uint_to_t (Prims.of_int (3))
        else FStar_UInt32.uint_to_t (Prims.of_int (4))



let (parse_bounded_integer :
  FStar_UInt32.t -> LowParse_Writers_Parser.parser) =
  fun sz ->
    LowParse_Writers_Parser.Parser
      ((),
        (Obj.magic
           {
             LowParse_Writers_Parser.kind =
               {
                 LowParse_Spec_Base.parser_kind_low = (FStar_UInt32.v sz);
                 LowParse_Spec_Base.parser_kind_high =
                   (FStar_Pervasives_Native.Some (FStar_UInt32.v sz));
                 LowParse_Spec_Base.parser_kind_subkind =
                   (FStar_Pervasives_Native.Some
                      LowParse_Spec_Base.ParserStrong);
                 LowParse_Spec_Base.parser_kind_metadata =
                   (FStar_Pervasives_Native.Some
                      LowParse_Spec_Base.ParserKindMetadataTotal)
               };
             LowParse_Writers_Parser.parser = ();
             LowParse_Writers_Parser.serializer = ();
             LowParse_Writers_Parser.jumper =
               (fun rrel ->
                  fun rel ->
                    fun input ->
                      fun pos ->
                        let h = FStar_HyperStack_ST.get () in
                        FStar_UInt32.add pos sz)
           }))

let (parse_vldata_intro_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit, unit, unit, Obj.t, Obj.t, Prims.l_False, unit, unit)
            LowParse_Writers_Effect.repr_impl)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun p ->
               fun min ->
                 fun max ->
                   Obj.magic
                     (LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((FStar_UInt32.v
                                            (if
                                               FStar_UInt32.lt max
                                                 (FStar_UInt32.uint_to_t
                                                    (Prims.of_int (256)))
                                             then
                                               FStar_UInt32.uint_to_t
                                                 Prims.int_one
                                             else
                                               if
                                                 FStar_UInt32.lt max
                                                   (FStar_UInt32.uint_to_t
                                                      (Prims.parse_int "65536"))
                                               then
                                                 FStar_UInt32.uint_to_t
                                                   (Prims.of_int (2))
                                               else
                                                 if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.parse_int "16777216"))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (3))
                                                 else
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (4))))
                                           +
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (if
                                           match match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_high
                                           with
                                           | FStar_Pervasives_Native.Some
                                               uu___ -> true
                                           | uu___ -> false
                                         then
                                           FStar_Pervasives_Native.Some
                                             ((FStar_UInt32.v
                                                 (if
                                                    FStar_UInt32.lt max
                                                      (FStar_UInt32.uint_to_t
                                                         (Prims.of_int (256)))
                                                  then
                                                    FStar_UInt32.uint_to_t
                                                      Prims.int_one
                                                  else
                                                    if
                                                      FStar_UInt32.lt max
                                                        (FStar_UInt32.uint_to_t
                                                           (Prims.parse_int "65536"))
                                                    then
                                                      FStar_UInt32.uint_to_t
                                                        (Prims.of_int (2))
                                                    else
                                                      if
                                                        FStar_UInt32.lt max
                                                          (FStar_UInt32.uint_to_t
                                                             (Prims.parse_int "16777216"))
                                                      then
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (3))
                                                      else
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (4))))
                                                +
                                                (match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     y -> y))
                                         else FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_subkind)
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserConsumesAll)
                                         then
                                           FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserConsumesAll
                                         else
                                           if
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_subkind)
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong)
                                           then
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong
                                           else
                                             if
                                               (if
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_high)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       Prims.int_zero)
                                                then
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_subkind)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong)
                                                else false)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong
                                             else
                                               FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (match ((FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserKindMetadataTotal),
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata))
                                         with
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail),
                                            uu___) ->
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal
                                         | (uu___,
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail))
                                             ->
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_metadata)
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal),
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal))
                                             ->
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal
                                         | uu___ ->
                                             FStar_Pervasives_Native.None)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               FStar_UInt32.add pos
                                                 (if
                                                    FStar_UInt32.lt max
                                                      (FStar_UInt32.uint_to_t
                                                         (Prims.of_int (256)))
                                                  then
                                                    FStar_UInt32.uint_to_t
                                                      Prims.int_one
                                                  else
                                                    if
                                                      FStar_UInt32.lt max
                                                        (FStar_UInt32.uint_to_t
                                                           (Prims.parse_int "65536"))
                                                    then
                                                      FStar_UInt32.uint_to_t
                                                        (Prims.of_int (2))
                                                    else
                                                      if
                                                        FStar_UInt32.lt max
                                                          (FStar_UInt32.uint_to_t
                                                             (Prims.parse_int "16777216"))
                                                      then
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (3))
                                                      else
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (4))) in
                                             match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper () () input uu___)
                                })))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             {
                               LowParse_Writers_Parser.kind =
                                 {
                                   LowParse_Spec_Base.parser_kind_low =
                                     ((if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))
                                        +
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low)
                                             > (FStar_UInt32.v min)
                                         then
                                           match match match p with
                                                       | LowParse_Writers_Parser.Parser
                                                           (t, p1) -> p1
                                                 with
                                                 | {
                                                     LowParse_Writers_Parser.kind
                                                       = kind;
                                                     LowParse_Writers_Parser.parser
                                                       = parser;
                                                     LowParse_Writers_Parser.serializer
                                                       = serializer;
                                                     LowParse_Writers_Parser.jumper
                                                       = jumper;_}
                                                     -> kind
                                           with
                                           | {
                                               LowParse_Spec_Base.parser_kind_low
                                                 = parser_kind_low;
                                               LowParse_Spec_Base.parser_kind_high
                                                 = parser_kind_high;
                                               LowParse_Spec_Base.parser_kind_subkind
                                                 = parser_kind_subkind;
                                               LowParse_Spec_Base.parser_kind_metadata
                                                 = parser_kind_metadata;_}
                                               -> parser_kind_low
                                         else FStar_UInt32.v min));
                                   LowParse_Spec_Base.parser_kind_high =
                                     (FStar_Pervasives_Native.Some
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max)
                                                <
                                                ((if
                                                    (match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_low)
                                                      > (FStar_UInt32.v min)
                                                  then
                                                    match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low
                                                  else FStar_UInt32.v min))
                                            then
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low)
                                                   > (FStar_UInt32.v min)
                                               then
                                                 match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_low
                                               else FStar_UInt32.v min)
                                            else
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max))));
                                   LowParse_Spec_Base.parser_kind_subkind =
                                     (FStar_Pervasives_Native.Some
                                        LowParse_Spec_Base.ParserStrong);
                                   LowParse_Spec_Base.parser_kind_metadata =
                                     (match match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_metadata
                                      with
                                      | FStar_Pervasives_Native.Some
                                          (LowParse_Spec_Base.ParserKindMetadataFail)
                                          ->
                                          FStar_Pervasives_Native.Some
                                            LowParse_Spec_Base.ParserKindMetadataFail
                                      | uu___ -> FStar_Pervasives_Native.None)
                                 };
                               LowParse_Writers_Parser.parser = ();
                               LowParse_Writers_Parser.serializer = ();
                               LowParse_Writers_Parser.jumper =
                                 (fun rrel ->
                                    fun rel ->
                                      fun input ->
                                        fun pos ->
                                          let h = FStar_HyperStack_ST.get () in
                                          let h1 = FStar_HyperStack_ST.get () in
                                          let h2 = FStar_HyperStack_ST.get () in
                                          let uu___ =
                                            let uu___1 =
                                              match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                     ()) () () input pos in
                                            FStar_UInt32.add
                                              (FStar_UInt32.uint_to_t
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))))
                                              uu___1 in
                                          FStar_UInt32.add pos uu___)
                             })) () () () () ()
                        (fun b ->
                           fun len ->
                             fun pos ->
                               let h = FStar_HyperStack_ST.get () in
                               let sl =
                                 {
                                   LowParse_Slice.base = b;
                                   LowParse_Slice.len = len
                                 } in
                               let size =
                                 FStar_UInt32.sub pos
                                   (FStar_UInt32.uint_to_t
                                      (if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))) in
                               let uu___ =
                                 (match if
                                          (FStar_UInt32.v max) <
                                            (Prims.of_int (256))
                                        then Prims.int_one
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "65536")
                                          then (Prims.of_int (2))
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "16777216")
                                            then (Prims.of_int (3))
                                            else (Prims.of_int (4))
                                  with
                                  | uu___1 when uu___1 = Prims.int_one ->
                                      (fun x ->
                                         fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos1 ->
                                                 let h0 =
                                                   FStar_HyperStack_ST.get () in
                                                 let len1 =
                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                     () x () ()
                                                     (match input with
                                                      | {
                                                          LowParse_Slice.base
                                                            = base;
                                                          LowParse_Slice.len
                                                            = len2;_}
                                                          -> base) pos1 in
                                                 let h1 =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos1 len1)
                                  | uu___1 when uu___1 = (Prims.of_int (2))
                                      ->
                                      (fun x ->
                                         fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos1 ->
                                                 let h0 =
                                                   FStar_HyperStack_ST.get () in
                                                 let len1 =
                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                     () x () ()
                                                     (match input with
                                                      | {
                                                          LowParse_Slice.base
                                                            = base;
                                                          LowParse_Slice.len
                                                            = len2;_}
                                                          -> base) pos1 in
                                                 let h1 =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos1 len1)
                                  | uu___1 when uu___1 = (Prims.of_int (3))
                                      ->
                                      (fun x ->
                                         fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos1 ->
                                                 let h0 =
                                                   FStar_HyperStack_ST.get () in
                                                 let len1 =
                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                     () x () ()
                                                     (match input with
                                                      | {
                                                          LowParse_Slice.base
                                                            = base;
                                                          LowParse_Slice.len
                                                            = len2;_}
                                                          -> base) pos1 in
                                                 let h1 =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos1 len1)
                                  | uu___1 when uu___1 = (Prims.of_int (4))
                                      ->
                                      (fun x ->
                                         fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos1 ->
                                                 let h0 =
                                                   FStar_HyperStack_ST.get () in
                                                 let len1 =
                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                     () x () ()
                                                     (match input with
                                                      | {
                                                          LowParse_Slice.base
                                                            = base;
                                                          LowParse_Slice.len
                                                            = len2;_}
                                                          -> base) pos1 in
                                                 let h1 =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos1 len1))
                                   size () () (Obj.magic sl)
                                   (FStar_UInt32.uint_to_t Prims.int_zero) in
                               let h1 = FStar_HyperStack_ST.get () in
                               LowParse_Writers_Effect.ICorrect ((), pos))))
            uu___3 uu___2 uu___1 uu___
let (parse_vldata_intro :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit, unit, unit, unit, unit, Prims.l_False, unit)
            LowParse_Writers_Effect.repr)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun p ->
               fun min ->
                 fun max ->
                   Obj.magic
                     (LowParse_Writers_Effect.Repr
                        ((),
                          (Obj.magic
                             (LowParse_Writers_Effect.mk_repr_impl
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                ((FStar_UInt32.v
                                                    (if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.of_int (256)))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         Prims.int_one
                                                     else
                                                       if
                                                         FStar_UInt32.lt max
                                                           (FStar_UInt32.uint_to_t
                                                              (Prims.parse_int "65536"))
                                                       then
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (2))
                                                       else
                                                         if
                                                           FStar_UInt32.lt
                                                             max
                                                             (FStar_UInt32.uint_to_t
                                                                (Prims.parse_int "16777216"))
                                                         then
                                                           FStar_UInt32.uint_to_t
                                                             (Prims.of_int (3))
                                                         else
                                                           FStar_UInt32.uint_to_t
                                                             (Prims.of_int (4))))
                                                   +
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (if
                                                   match match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_high
                                                   with
                                                   | FStar_Pervasives_Native.Some
                                                       uu___ -> true
                                                   | uu___ -> false
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     ((FStar_UInt32.v
                                                         (if
                                                            FStar_UInt32.lt
                                                              max
                                                              (FStar_UInt32.uint_to_t
                                                                 (Prims.of_int (256)))
                                                          then
                                                            FStar_UInt32.uint_to_t
                                                              Prims.int_one
                                                          else
                                                            if
                                                              FStar_UInt32.lt
                                                                max
                                                                (FStar_UInt32.uint_to_t
                                                                   (Prims.parse_int "65536"))
                                                            then
                                                              FStar_UInt32.uint_to_t
                                                                (Prims.of_int (2))
                                                            else
                                                              if
                                                                FStar_UInt32.lt
                                                                  max
                                                                  (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                              then
                                                                FStar_UInt32.uint_to_t
                                                                  (Prims.of_int (3))
                                                              else
                                                                FStar_UInt32.uint_to_t
                                                                  (Prims.of_int (4))))
                                                        +
                                                        (match match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_high
                                                         with
                                                         | FStar_Pervasives_Native.Some
                                                             y -> y))
                                                 else
                                                   FStar_Pervasives_Native.None);
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_subkind)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserConsumesAll)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserConsumesAll
                                                 else
                                                   if
                                                     (match match match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_subkind)
                                                       =
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong)
                                                   then
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong
                                                   else
                                                     if
                                                       (if
                                                          (match match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                           with
                                                           | {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 parser_kind_low;
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 parser_kind_high;
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 parser_kind_subkind;
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 parser_kind_metadata;_}
                                                               ->
                                                               parser_kind_high)
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               Prims.int_zero)
                                                        then
                                                          (match match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                           with
                                                           | {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 parser_kind_low;
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 parser_kind_high;
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 parser_kind_subkind;
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 parser_kind_metadata;_}
                                                               ->
                                                               parser_kind_subkind)
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserStrong)
                                                        else false)
                                                     then
                                                       FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserStrong
                                                     else
                                                       FStar_Pervasives_Native.None);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                (match ((FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserKindMetadataTotal),
                                                         (match match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_metadata))
                                                 with
                                                 | (FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataFail),
                                                    uu___) ->
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserKindMetadataTotal
                                                 | (uu___,
                                                    FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataFail))
                                                     ->
                                                     (match match match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_metadata)
                                                 | (FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                    FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                     ->
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserKindMetadataTotal
                                                 | uu___ ->
                                                     FStar_Pervasives_Native.None)
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let h1 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       FStar_UInt32.add pos
                                                         (if
                                                            FStar_UInt32.lt
                                                              max
                                                              (FStar_UInt32.uint_to_t
                                                                 (Prims.of_int (256)))
                                                          then
                                                            FStar_UInt32.uint_to_t
                                                              Prims.int_one
                                                          else
                                                            if
                                                              FStar_UInt32.lt
                                                                max
                                                                (FStar_UInt32.uint_to_t
                                                                   (Prims.parse_int "65536"))
                                                            then
                                                              FStar_UInt32.uint_to_t
                                                                (Prims.of_int (2))
                                                            else
                                                              if
                                                                FStar_UInt32.lt
                                                                  max
                                                                  (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                              then
                                                                FStar_UInt32.uint_to_t
                                                                  (Prims.of_int (3))
                                                              else
                                                                FStar_UInt32.uint_to_t
                                                                  (Prims.of_int (4))) in
                                                     match match p with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         ->
                                                         jumper () () input
                                                           uu___)
                                        })))
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     {
                                       LowParse_Writers_Parser.kind =
                                         {
                                           LowParse_Spec_Base.parser_kind_low
                                             =
                                             ((if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))
                                                +
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low)
                                                     > (FStar_UInt32.v min)
                                                 then
                                                   match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_low
                                                 else FStar_UInt32.v min));
                                           LowParse_Spec_Base.parser_kind_high
                                             =
                                             (FStar_Pervasives_Native.Some
                                                ((if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.None
                                                           ->
                                                           FStar_UInt32.v max
                                                       | FStar_Pervasives_Native.Some
                                                           kmax ->
                                                           if
                                                             kmax <
                                                               (FStar_UInt32.v
                                                                  max)
                                                           then kmax
                                                           else
                                                             FStar_UInt32.v
                                                               max)
                                                        <
                                                        ((if
                                                            (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_low)
                                                              >
                                                              (FStar_UInt32.v
                                                                 min)
                                                          then
                                                            match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_low
                                                          else
                                                            FStar_UInt32.v
                                                              min))
                                                    then
                                                      (if
                                                         (match match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_low)
                                                           >
                                                           (FStar_UInt32.v
                                                              min)
                                                       then
                                                         match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_low
                                                       else
                                                         FStar_UInt32.v min)
                                                    else
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.None
                                                           ->
                                                           FStar_UInt32.v max
                                                       | FStar_Pervasives_Native.Some
                                                           kmax ->
                                                           if
                                                             kmax <
                                                               (FStar_UInt32.v
                                                                  max)
                                                           then kmax
                                                           else
                                                             FStar_UInt32.v
                                                               max))));
                                           LowParse_Spec_Base.parser_kind_subkind
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserStrong);
                                           LowParse_Spec_Base.parser_kind_metadata
                                             =
                                             (match match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata
                                              with
                                              | FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail)
                                                  ->
                                                  FStar_Pervasives_Native.Some
                                                    LowParse_Spec_Base.ParserKindMetadataFail
                                              | uu___ ->
                                                  FStar_Pervasives_Native.None)
                                         };
                                       LowParse_Writers_Parser.parser = ();
                                       LowParse_Writers_Parser.serializer =
                                         ();
                                       LowParse_Writers_Parser.jumper =
                                         (fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos ->
                                                  let h =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let h1 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let uu___ =
                                                    let uu___1 =
                                                      match if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.of_int (256))
                                                            then
                                                              Prims.int_one
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "65536")
                                                              then
                                                                (Prims.of_int (2))
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                then
                                                                  (Prims.of_int (3))
                                                                else
                                                                  (Prims.of_int (4))
                                                      with
                                                      | uu___2 when
                                                          uu___2 =
                                                            Prims.int_one
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (2))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (3))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (4))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                             ()) () () input
                                                            pos in
                                                    FStar_UInt32.add
                                                      (FStar_UInt32.uint_to_t
                                                         (if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.of_int (256))
                                                          then Prims.int_one
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "65536")
                                                            then
                                                              (Prims.of_int (2))
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "16777216")
                                                              then
                                                                (Prims.of_int (3))
                                                              else
                                                                (Prims.of_int (4))))
                                                      uu___1 in
                                                  FStar_UInt32.add pos uu___)
                                     })) () () () () ()
                                (fun b ->
                                   fun len ->
                                     fun pos ->
                                       let h = FStar_HyperStack_ST.get () in
                                       let sl =
                                         {
                                           LowParse_Slice.base = b;
                                           LowParse_Slice.len = len
                                         } in
                                       let size =
                                         FStar_UInt32.sub pos
                                           (FStar_UInt32.uint_to_t
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))) in
                                       let uu___ =
                                         (match if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4))
                                          with
                                          | uu___1 when
                                              uu___1 = Prims.int_one ->
                                              (fun x ->
                                                 fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos1 ->
                                                         let h0 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let len1 =
                                                           LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                             () x () ()
                                                             (match input
                                                              with
                                                              | {
                                                                  LowParse_Slice.base
                                                                    = base;
                                                                  LowParse_Slice.len
                                                                    = len2;_}
                                                                  -> base)
                                                             pos1 in
                                                         let h1 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add
                                                           pos1 len1)
                                          | uu___1 when
                                              uu___1 = (Prims.of_int (2)) ->
                                              (fun x ->
                                                 fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos1 ->
                                                         let h0 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let len1 =
                                                           LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                             () x () ()
                                                             (match input
                                                              with
                                                              | {
                                                                  LowParse_Slice.base
                                                                    = base;
                                                                  LowParse_Slice.len
                                                                    = len2;_}
                                                                  -> base)
                                                             pos1 in
                                                         let h1 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add
                                                           pos1 len1)
                                          | uu___1 when
                                              uu___1 = (Prims.of_int (3)) ->
                                              (fun x ->
                                                 fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos1 ->
                                                         let h0 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let len1 =
                                                           LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                             () x () ()
                                                             (match input
                                                              with
                                                              | {
                                                                  LowParse_Slice.base
                                                                    = base;
                                                                  LowParse_Slice.len
                                                                    = len2;_}
                                                                  -> base)
                                                             pos1 in
                                                         let h1 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add
                                                           pos1 len1)
                                          | uu___1 when
                                              uu___1 = (Prims.of_int (4)) ->
                                              (fun x ->
                                                 fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos1 ->
                                                         let h0 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let len1 =
                                                           LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                             () x () ()
                                                             (match input
                                                              with
                                                              | {
                                                                  LowParse_Slice.base
                                                                    = base;
                                                                  LowParse_Slice.len
                                                                    = len2;_}
                                                                  -> base)
                                                             pos1 in
                                                         let h1 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add
                                                           pos1 len1)) size
                                           () () (Obj.magic sl)
                                           (FStar_UInt32.uint_to_t
                                              Prims.int_zero) in
                                       let h1 = FStar_HyperStack_ST.get () in
                                       LowParse_Writers_Effect.ICorrect
                                         ((), pos))))))) uu___3 uu___2 uu___1
            uu___
let (write_bounded_integer :
  FStar_UInt32.t ->
    FStar_UInt32.t ->
      unit ->
        unit ->
          (Obj.t, Obj.t) LowParse_Slice.slice ->
            FStar_UInt32.t -> FStar_UInt32.t)
  =
  fun i ->
    fun v ->
      fun rrel ->
        fun rel ->
          fun sl ->
            fun pos ->
              if i = (FStar_UInt32.uint_to_t Prims.int_one)
              then
                let h0 = FStar_HyperStack_ST.get () in
                let len =
                  LowParse_Low_BoundedInt.serialize32_bounded_integer_1 () v
                    () ()
                    (match sl with
                     | { LowParse_Slice.base = base;
                         LowParse_Slice.len = len1;_} -> base) pos in
                let h = FStar_HyperStack_ST.get () in
                FStar_UInt32.add pos len
              else
                if i = (FStar_UInt32.uint_to_t (Prims.of_int (2)))
                then
                  (let h0 = FStar_HyperStack_ST.get () in
                   let len =
                     LowParse_Low_BoundedInt.serialize32_bounded_integer_2 ()
                       v () ()
                       (match sl with
                        | { LowParse_Slice.base = base;
                            LowParse_Slice.len = len1;_} -> base) pos in
                   let h = FStar_HyperStack_ST.get () in
                   FStar_UInt32.add pos len)
                else
                  if i = (FStar_UInt32.uint_to_t (Prims.of_int (3)))
                  then
                    (let h0 = FStar_HyperStack_ST.get () in
                     let len =
                       LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                         () v () ()
                         (match sl with
                          | { LowParse_Slice.base = base;
                              LowParse_Slice.len = len1;_} -> base) pos in
                     let h = FStar_HyperStack_ST.get () in
                     FStar_UInt32.add pos len)
                  else
                    (let h0 = FStar_HyperStack_ST.get () in
                     let len =
                       LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                         () v () ()
                         (match sl with
                          | { LowParse_Slice.base = base;
                              LowParse_Slice.len = len1;_} -> base) pos in
                     let h = FStar_HyperStack_ST.get () in
                     FStar_UInt32.add pos len)
let (parse_vldata_intro_ho :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          unit ->
            unit ->
              unit ->
                (unit ->
                   (unit, unit, unit, unit, unit, unit, unit)
                     LowParse_Writers_Effect.repr)
                  ->
                  (unit, unit, unit, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun pre ->
            fun post ->
              fun post_err ->
                fun f ->
                  LowParse_Writers_Effect.Repr
                    ((),
                      (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                         (Obj.magic ()) () () () (Obj.magic ()) () () () ()
                         () ()
                         (Obj.magic
                            (LowParse_Writers_Effect.lift_read_impl ()
                               (Obj.magic ())
                               (Obj.magic
                                  (LowParse_Writers_Effect.ReadRepr
                                     ((),
                                       (LowParse_Writers_Effect.lift_pure_read_impl
                                          (fun uu___ ->
                                             if
                                               FStar_UInt32.lt max
                                                 (FStar_UInt32.uint_to_t
                                                    (Prims.of_int (256)))
                                             then
                                               FStar_UInt32.uint_to_t
                                                 Prims.int_one
                                             else
                                               if
                                                 FStar_UInt32.lt max
                                                   (FStar_UInt32.uint_to_t
                                                      (Prims.parse_int "65536"))
                                               then
                                                 FStar_UInt32.uint_to_t
                                                   (Prims.of_int (2))
                                               else
                                                 if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.parse_int "16777216"))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (3))
                                                 else
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (4))) ()))))))
                         (fun uu___ ->
                            (fun x ->
                               Obj.magic
                                 (LowParse_Writers_Effect.bind_impl
                                    (Obj.magic ()) (Obj.magic ()) () () ()
                                    (Obj.magic ()) () () () () () ()
                                    (Obj.magic
                                       (LowParse_Writers_Effect.elem_writer_impl
                                          (LowParse_Writers_Parser.Parser
                                             ((),
                                               (Obj.magic
                                                  {
                                                    LowParse_Writers_Parser.kind
                                                      =
                                                      {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          =
                                                          (FStar_UInt32.v x);
                                                        LowParse_Spec_Base.parser_kind_high
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             (FStar_UInt32.v
                                                                x));
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserStrong);
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserKindMetadataTotal)
                                                      };
                                                    LowParse_Writers_Parser.parser
                                                      = ();
                                                    LowParse_Writers_Parser.serializer
                                                      = ();
                                                    LowParse_Writers_Parser.jumper
                                                      =
                                                      (fun rrel ->
                                                         fun rel ->
                                                           fun input ->
                                                             fun pos ->
                                                               let h =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               FStar_UInt32.add
                                                                 pos x)
                                                  })))
                                          (fun uu___2 ->
                                             fun uu___1 ->
                                               fun uu___ ->
                                                 (if
                                                    (FStar_UInt32.v x) >
                                                      (Prims.parse_int "4294967295")
                                                  then
                                                    fun b ->
                                                      fun len ->
                                                        fun x1 ->
                                                          let x1 =
                                                            Obj.magic x1 in
                                                          Obj.magic
                                                            FStar_Pervasives_Native.None
                                                  else
                                                    (fun b ->
                                                       fun len ->
                                                         fun x1 ->
                                                           let x1 =
                                                             Obj.magic x1 in
                                                           if
                                                             FStar_UInt32.lt
                                                               len
                                                               (FStar_UInt32.uint_to_t
                                                                  (FStar_UInt32.v
                                                                    x))
                                                           then
                                                             Obj.magic
                                                               FStar_Pervasives_Native.None
                                                           else
                                                             (let uu___2 =
                                                                if
                                                                  x =
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one)
                                                                then
                                                                  let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                  let len1 =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                  let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                  FStar_UInt32.add
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    len1
                                                                else
                                                                  if
                                                                    x =
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2)))
                                                                  then
                                                                    (
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    len1)
                                                                  else
                                                                    if
                                                                    x =
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3)))
                                                                    then
                                                                    (let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    len1)
                                                                    else
                                                                    (let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    len1) in
                                                              Obj.magic
                                                                (FStar_Pervasives_Native.Some
                                                                   uu___2))))
                                                   uu___2 uu___1 uu___) ()
                                          (Obj.magic
                                             (FStar_UInt32.uint_to_t
                                                Prims.int_zero))))
                                    (fun uu___ ->
                                       (fun x1 ->
                                          Obj.magic
                                            (LowParse_Writers_Effect.bind_impl
                                               (Obj.magic ()) (Obj.magic ())
                                               () () () (Obj.magic ()) () ()
                                               () () () ()
                                               (LowParse_Writers_Effect.frame_impl
                                                  (LowParse_Writers_Parser.Parser
                                                     ((),
                                                       (Obj.magic
                                                          {
                                                            LowParse_Writers_Parser.kind
                                                              =
                                                              {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  (FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))));
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  (FStar_Pervasives_Native.Some
                                                                    (FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))));
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal)
                                                              };
                                                            LowParse_Writers_Parser.parser
                                                              = ();
                                                            LowParse_Writers_Parser.serializer
                                                              = ();
                                                            LowParse_Writers_Parser.jumper
                                                              =
                                                              (fun rrel ->
                                                                 fun rel ->
                                                                   fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                          }))) () p () () ()
                                                  (fun uu___ ->
                                                     (fun uu___ ->
                                                        Obj.magic
                                                          (LowParse_Writers_Effect.Repr
                                                             ((),
                                                               (LowParse_Writers_Effect.recast_writer_impl
                                                                  (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    Prims.int_zero;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal)
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero))
                                                                    }))) p ()
                                                                  () () () f))))
                                                       uu___))
                                               (fun x2 ->
                                                  LowParse_Writers_Effect.mk_repr_impl
                                                    (LowParse_Writers_Parser.Parser
                                                       ((),
                                                         (Obj.magic
                                                            {
                                                              LowParse_Writers_Parser.kind
                                                                =
                                                                {
                                                                  LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    (
                                                                    (FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                    +
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low));
                                                                  LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (
                                                                    if
                                                                    match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    uu___ ->
                                                                    true
                                                                    | 
                                                                    uu___ ->
                                                                    false
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    ((FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                    +
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                                    else
                                                                    FStar_Pervasives_Native.None);
                                                                  LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll
                                                                    else
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                    else
                                                                    if
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero)
                                                                    then
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    else
                                                                    false)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                    else
                                                                    FStar_Pervasives_Native.None);
                                                                  LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    (
                                                                    match 
                                                                    ((FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata))
                                                                    with
                                                                    | 
                                                                    (FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail),
                                                                    uu___) ->
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal
                                                                    | 
                                                                    (uu___,
                                                                    FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail))
                                                                    ->
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata)
                                                                    | 
                                                                    (FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                    FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                                    ->
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal
                                                                    | 
                                                                    uu___ ->
                                                                    FStar_Pervasives_Native.None)
                                                                };
                                                              LowParse_Writers_Parser.parser
                                                                = ();
                                                              LowParse_Writers_Parser.serializer
                                                                = ();
                                                              LowParse_Writers_Parser.jumper
                                                                =
                                                                (fun rrel ->
                                                                   fun rel ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))) in
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    ->
                                                                    jumper ()
                                                                    () input
                                                                    uu___)
                                                            })))
                                                    (LowParse_Writers_Parser.Parser
                                                       ((),
                                                         {
                                                           LowParse_Writers_Parser.kind
                                                             =
                                                             {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                   then
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min));
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 (FStar_Pervasives_Native.Some
                                                                    (
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max))));
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata
                                                                  with
                                                                  | FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail)
                                                                    ->
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataFail
                                                                  | uu___ ->
                                                                    FStar_Pervasives_Native.None)
                                                             };
                                                           LowParse_Writers_Parser.parser
                                                             = ();
                                                           LowParse_Writers_Parser.serializer
                                                             = ();
                                                           LowParse_Writers_Parser.jumper
                                                             =
                                                             (fun rrel ->
                                                                fun rel ->
                                                                  fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                    FStar_UInt32.add
                                                                    pos uu___)
                                                         })) () () () () ()
                                                    (fun b ->
                                                       fun len ->
                                                         fun pos ->
                                                           let h =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let sl =
                                                             {
                                                               LowParse_Slice.base
                                                                 = b;
                                                               LowParse_Slice.len
                                                                 = len
                                                             } in
                                                           let size =
                                                             FStar_UInt32.sub
                                                               pos
                                                               (FStar_UInt32.uint_to_t
                                                                  (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                   then
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))) in
                                                           let uu___ =
                                                             (match if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                              with
                                                              | uu___1 when
                                                                  uu___1 =
                                                                    Prims.int_one
                                                                  ->
                                                                  (fun x3 ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                              | uu___1 when
                                                                  uu___1 =
                                                                    (Prims.of_int (2))
                                                                  ->
                                                                  (fun x3 ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                              | uu___1 when
                                                                  uu___1 =
                                                                    (Prims.of_int (3))
                                                                  ->
                                                                  (fun x3 ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                              | uu___1 when
                                                                  uu___1 =
                                                                    (Prims.of_int (4))
                                                                  ->
                                                                  (fun x3 ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1))
                                                               size () ()
                                                               (Obj.magic sl)
                                                               (FStar_UInt32.uint_to_t
                                                                  Prims.int_zero) in
                                                           let h1 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           LowParse_Writers_Effect.ICorrect
                                                             ((), pos)))))
                                         uu___))) uu___)))
let (parse_vldata_intro_ho' :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit ->
             (unit, unit, unit, unit, unit, unit, unit)
               LowParse_Writers_Effect.repr)
            ->
            (unit, unit, unit, unit, unit, unit, unit)
              LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun f ->
            LowParse_Writers_Effect.Repr
              ((),
                (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                   (Obj.magic ()) () () () (Obj.magic ()) () () () () () ()
                   (Obj.magic
                      (LowParse_Writers_Effect.lift_read_impl ()
                         (Obj.magic ())
                         (Obj.magic
                            (LowParse_Writers_Effect.ReadRepr
                               ((),
                                 (LowParse_Writers_Effect.lift_pure_read_impl
                                    (fun uu___ ->
                                       if
                                         FStar_UInt32.lt max
                                           (FStar_UInt32.uint_to_t
                                              (Prims.of_int (256)))
                                       then
                                         FStar_UInt32.uint_to_t Prims.int_one
                                       else
                                         if
                                           FStar_UInt32.lt max
                                             (FStar_UInt32.uint_to_t
                                                (Prims.parse_int "65536"))
                                         then
                                           FStar_UInt32.uint_to_t
                                             (Prims.of_int (2))
                                         else
                                           if
                                             FStar_UInt32.lt max
                                               (FStar_UInt32.uint_to_t
                                                  (Prims.parse_int "16777216"))
                                           then
                                             FStar_UInt32.uint_to_t
                                               (Prims.of_int (3))
                                           else
                                             FStar_UInt32.uint_to_t
                                               (Prims.of_int (4))) ()))))))
                   (fun uu___ ->
                      (fun x ->
                         Obj.magic
                           (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                              (Obj.magic ()) () () () (Obj.magic ()) () () ()
                              () () ()
                              (Obj.magic
                                 (LowParse_Writers_Effect.elem_writer_impl
                                    (LowParse_Writers_Parser.Parser
                                       ((),
                                         (Obj.magic
                                            {
                                              LowParse_Writers_Parser.kind =
                                                {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = (FStar_UInt32.v x);
                                                  LowParse_Spec_Base.parser_kind_high
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       (FStar_UInt32.v x));
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong);
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserKindMetadataTotal)
                                                };
                                              LowParse_Writers_Parser.parser
                                                = ();
                                              LowParse_Writers_Parser.serializer
                                                = ();
                                              LowParse_Writers_Parser.jumper
                                                =
                                                (fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos ->
                                                         let h =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add pos
                                                           x)
                                            })))
                                    (fun uu___2 ->
                                       fun uu___1 ->
                                         fun uu___ ->
                                           (if
                                              (FStar_UInt32.v x) >
                                                (Prims.parse_int "4294967295")
                                            then
                                              fun b ->
                                                fun len ->
                                                  fun x1 ->
                                                    let x1 = Obj.magic x1 in
                                                    Obj.magic
                                                      FStar_Pervasives_Native.None
                                            else
                                              (fun b ->
                                                 fun len ->
                                                   fun x1 ->
                                                     let x1 = Obj.magic x1 in
                                                     if
                                                       FStar_UInt32.lt len
                                                         (FStar_UInt32.uint_to_t
                                                            (FStar_UInt32.v x))
                                                     then
                                                       Obj.magic
                                                         FStar_Pervasives_Native.None
                                                     else
                                                       (let uu___2 =
                                                          if
                                                            x =
                                                              (FStar_UInt32.uint_to_t
                                                                 Prims.int_one)
                                                          then
                                                            let h0 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let len1 =
                                                              LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                () x1 () ()
                                                                (Obj.magic b)
                                                                (FStar_UInt32.uint_to_t
                                                                   Prims.int_zero) in
                                                            let h =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            FStar_UInt32.add
                                                              (FStar_UInt32.uint_to_t
                                                                 Prims.int_zero)
                                                              len1
                                                          else
                                                            if
                                                              x =
                                                                (FStar_UInt32.uint_to_t
                                                                   (Prims.of_int (2)))
                                                            then
                                                              (let h0 =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               let len1 =
                                                                 LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                   () x1 ()
                                                                   ()
                                                                   (Obj.magic
                                                                    b)
                                                                   (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                               let h =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               FStar_UInt32.add
                                                                 (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                 len1)
                                                            else
                                                              if
                                                                x =
                                                                  (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3)))
                                                              then
                                                                (let h0 =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 let len1 =
                                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 FStar_UInt32.add
                                                                   (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                   len1)
                                                              else
                                                                (let h0 =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 let len1 =
                                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 FStar_UInt32.add
                                                                   (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                   len1) in
                                                        Obj.magic
                                                          (FStar_Pervasives_Native.Some
                                                             uu___2))))
                                             uu___2 uu___1 uu___) ()
                                    (Obj.magic
                                       (FStar_UInt32.uint_to_t Prims.int_zero))))
                              (fun uu___ ->
                                 (fun x1 ->
                                    Obj.magic
                                      (LowParse_Writers_Effect.bind_impl
                                         (Obj.magic ()) (Obj.magic ()) () ()
                                         () (Obj.magic ()) () () () () () ()
                                         (LowParse_Writers_Effect.frame_impl
                                            (LowParse_Writers_Parser.Parser
                                               ((),
                                                 (Obj.magic
                                                    {
                                                      LowParse_Writers_Parser.kind
                                                        =
                                                        {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            =
                                                            (FStar_UInt32.v
                                                               (if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))));
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               (FStar_UInt32.v
                                                                  (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))));
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserStrong);
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserKindMetadataTotal)
                                                        };
                                                      LowParse_Writers_Parser.parser
                                                        = ();
                                                      LowParse_Writers_Parser.serializer
                                                        = ();
                                                      LowParse_Writers_Parser.jumper
                                                        =
                                                        (fun rrel ->
                                                           fun rel ->
                                                             fun input ->
                                                               fun pos ->
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 FStar_UInt32.add
                                                                   pos
                                                                   (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                    }))) () p () () ()
                                            (fun uu___ ->
                                               LowParse_Writers_Effect.Repr
                                                 ((),
                                                   (Obj.magic
                                                      (LowParse_Writers_Effect.recast_writer_impl
                                                         (LowParse_Writers_Parser.Parser
                                                            ((),
                                                              (Obj.magic
                                                                 {
                                                                   LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    Prims.int_zero;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal)
                                                                    };
                                                                   LowParse_Writers_Parser.parser
                                                                    = ();
                                                                   LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                   LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero))
                                                                 }))) p () ()
                                                         () () f)))))
                                         (fun x2 ->
                                            LowParse_Writers_Effect.mk_repr_impl
                                              (LowParse_Writers_Parser.Parser
                                                 ((),
                                                   (Obj.magic
                                                      {
                                                        LowParse_Writers_Parser.kind
                                                          =
                                                          {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              ((FStar_UInt32.v
                                                                  (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                 +
                                                                 (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low));
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              (if
                                                                 match 
                                                                   match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                 with
                                                                 | FStar_Pervasives_Native.Some
                                                                    uu___ ->
                                                                    true
                                                                 | uu___ ->
                                                                    false
                                                               then
                                                                 FStar_Pervasives_Native.Some
                                                                   ((FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                    +
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                               else
                                                                 FStar_Pervasives_Native.None);
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              (if
                                                                 (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                   =
                                                                   (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll)
                                                               then
                                                                 FStar_Pervasives_Native.Some
                                                                   LowParse_Spec_Base.ParserConsumesAll
                                                               else
                                                                 if
                                                                   (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                 then
                                                                   FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                 else
                                                                   if
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero)
                                                                    then
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    else
                                                                    false)
                                                                   then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                   else
                                                                    FStar_Pervasives_Native.None);
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              (match 
                                                                 ((FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                   (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata))
                                                               with
                                                               | (FStar_Pervasives_Native.Some
                                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                                  uu___) ->
                                                                   FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal
                                                               | (uu___,
                                                                  FStar_Pervasives_Native.Some
                                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                                   ->
                                                                   (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata)
                                                               | (FStar_Pervasives_Native.Some
                                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                  FStar_Pervasives_Native.Some
                                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                                   ->
                                                                   FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal
                                                               | uu___ ->
                                                                   FStar_Pervasives_Native.None)
                                                          };
                                                        LowParse_Writers_Parser.parser
                                                          = ();
                                                        LowParse_Writers_Parser.serializer
                                                          = ();
                                                        LowParse_Writers_Parser.jumper
                                                          =
                                                          (fun rrel ->
                                                             fun rel ->
                                                               fun input ->
                                                                 fun pos ->
                                                                   let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                   let uu___
                                                                    =
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))) in
                                                                   match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    ->
                                                                    jumper ()
                                                                    () input
                                                                    uu___)
                                                      })))
                                              (LowParse_Writers_Parser.Parser
                                                 ((),
                                                   {
                                                     LowParse_Writers_Parser.kind
                                                       =
                                                       {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           =
                                                           ((if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4)))
                                                              +
                                                              (if
                                                                 (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                   >
                                                                   (FStar_UInt32.v
                                                                    min)
                                                               then
                                                                 match 
                                                                   match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                               else
                                                                 FStar_UInt32.v
                                                                   min));
                                                         LowParse_Spec_Base.parser_kind_high
                                                           =
                                                           (FStar_Pervasives_Native.Some
                                                              ((if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                then
                                                                  Prims.int_one
                                                                else
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                  then
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                 +
                                                                 (if
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                  then
                                                                    (
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                  else
                                                                    (
                                                                    match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max))));
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           (FStar_Pervasives_Native.Some
                                                              LowParse_Spec_Base.ParserStrong);
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           (match match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata
                                                            with
                                                            | FStar_Pervasives_Native.Some
                                                                (LowParse_Spec_Base.ParserKindMetadataFail)
                                                                ->
                                                                FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserKindMetadataFail
                                                            | uu___ ->
                                                                FStar_Pervasives_Native.None)
                                                       };
                                                     LowParse_Writers_Parser.parser
                                                       = ();
                                                     LowParse_Writers_Parser.serializer
                                                       = ();
                                                     LowParse_Writers_Parser.jumper
                                                       =
                                                       (fun rrel ->
                                                          fun rel ->
                                                            fun input ->
                                                              fun pos ->
                                                                let h =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                let h1 =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                let h2 =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                let uu___ =
                                                                  let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                  FStar_UInt32.add
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                FStar_UInt32.add
                                                                  pos uu___)
                                                   })) () () () () ()
                                              (fun b ->
                                                 fun len ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let sl =
                                                       {
                                                         LowParse_Slice.base
                                                           = b;
                                                         LowParse_Slice.len =
                                                           len
                                                       } in
                                                     let size =
                                                       FStar_UInt32.sub pos
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4)))) in
                                                     let uu___ =
                                                       (match if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.of_int (256))
                                                              then
                                                                Prims.int_one
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                then
                                                                  (Prims.of_int (2))
                                                                else
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                  then
                                                                    (Prims.of_int (3))
                                                                  else
                                                                    (Prims.of_int (4))
                                                        with
                                                        | uu___1 when
                                                            uu___1 =
                                                              Prims.int_one
                                                            ->
                                                            (fun x3 ->
                                                               fun rrel ->
                                                                 fun rel ->
                                                                   fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                        | uu___1 when
                                                            uu___1 =
                                                              (Prims.of_int (2))
                                                            ->
                                                            (fun x3 ->
                                                               fun rrel ->
                                                                 fun rel ->
                                                                   fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                        | uu___1 when
                                                            uu___1 =
                                                              (Prims.of_int (3))
                                                            ->
                                                            (fun x3 ->
                                                               fun rrel ->
                                                                 fun rel ->
                                                                   fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                        | uu___1 when
                                                            uu___1 =
                                                              (Prims.of_int (4))
                                                            ->
                                                            (fun x3 ->
                                                               fun rrel ->
                                                                 fun rel ->
                                                                   fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1))
                                                         size () ()
                                                         (Obj.magic sl)
                                                         (FStar_UInt32.uint_to_t
                                                            Prims.int_zero) in
                                                     let h1 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     LowParse_Writers_Effect.ICorrect
                                                       ((), pos))))) uu___)))
                        uu___)))
let (parse_vldata_intro_frame :
  unit ->
    LowParse_Writers_Parser.parser ->
      LowParse_Writers_Parser.parser ->
        FStar_UInt32.t ->
          FStar_UInt32.t ->
            (unit, unit, unit, unit, unit, Prims.l_False, unit)
              LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun frame ->
      fun p ->
        fun min ->
          fun max ->
            LowParse_Writers_Effect.Repr
              ((),
                (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                   (Obj.magic ()) () () () (Obj.magic ()) () () () () () ()
                   (Obj.magic
                      (LowParse_Writers_Effect.valid_rewrite_impl
                         (LowParse_Writers_Parser.Parser
                            ((),
                              (Obj.magic
                                 {
                                   LowParse_Writers_Parser.kind =
                                     {
                                       LowParse_Spec_Base.parser_kind_low =
                                         (((match match match frame with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low)
                                             +
                                             (FStar_UInt32.v
                                                (if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.of_int (256)))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     Prims.int_one
                                                 else
                                                   if
                                                     FStar_UInt32.lt max
                                                       (FStar_UInt32.uint_to_t
                                                          (Prims.parse_int "65536"))
                                                   then
                                                     FStar_UInt32.uint_to_t
                                                       (Prims.of_int (2))
                                                   else
                                                     if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.parse_int "16777216"))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (3))
                                                     else
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (4)))))
                                            +
                                            (match match match p with
                                                         | LowParse_Writers_Parser.Parser
                                                             (t, p1) -> p1
                                                   with
                                                   | {
                                                       LowParse_Writers_Parser.kind
                                                         = kind;
                                                       LowParse_Writers_Parser.parser
                                                         = parser;
                                                       LowParse_Writers_Parser.serializer
                                                         = serializer;
                                                       LowParse_Writers_Parser.jumper
                                                         = jumper;_}
                                                       -> kind
                                             with
                                             | {
                                                 LowParse_Spec_Base.parser_kind_low
                                                   = parser_kind_low;
                                                 LowParse_Spec_Base.parser_kind_high
                                                   = parser_kind_high;
                                                 LowParse_Spec_Base.parser_kind_subkind
                                                   = parser_kind_subkind;
                                                 LowParse_Spec_Base.parser_kind_metadata
                                                   = parser_kind_metadata;_}
                                                 -> parser_kind_low));
                                       LowParse_Spec_Base.parser_kind_high =
                                         (if
                                            (if
                                               match if
                                                       (if
                                                          match match 
                                                                  match 
                                                                    match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                with
                                                                | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                          with
                                                          | FStar_Pervasives_Native.Some
                                                              uu___ -> true
                                                          | uu___ -> false
                                                        then true
                                                        else false)
                                                     then
                                                       FStar_Pervasives_Native.Some
                                                         ((match match 
                                                                   match 
                                                                    match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                           with
                                                           | FStar_Pervasives_Native.Some
                                                               y -> y)
                                                            +
                                                            (FStar_UInt32.v
                                                               (if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))))
                                                     else
                                                       FStar_Pervasives_Native.None
                                               with
                                               | FStar_Pervasives_Native.Some
                                                   uu___ -> true
                                               | uu___ -> false
                                             then
                                               match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.Some
                                                   uu___ -> true
                                               | uu___ -> false
                                             else false)
                                          then
                                            FStar_Pervasives_Native.Some
                                              ((match if
                                                        (if
                                                           match match 
                                                                   match 
                                                                    match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                           with
                                                           | FStar_Pervasives_Native.Some
                                                               uu___ -> true
                                                           | uu___ -> false
                                                         then true
                                                         else false)
                                                      then
                                                        FStar_Pervasives_Native.Some
                                                          ((match match 
                                                                    match 
                                                                    match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                            with
                                                            | FStar_Pervasives_Native.Some
                                                                y -> y)
                                                             +
                                                             (FStar_UInt32.v
                                                                (if
                                                                   FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                 then
                                                                   FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                 else
                                                                   if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                   else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))))
                                                      else
                                                        FStar_Pervasives_Native.None
                                                with
                                                | FStar_Pervasives_Native.Some
                                                    y -> y)
                                                 +
                                                 (match match match match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_high
                                                  with
                                                  | FStar_Pervasives_Native.Some
                                                      y -> y))
                                          else FStar_Pervasives_Native.None);
                                       LowParse_Spec_Base.parser_kind_subkind
                                         =
                                         (if
                                            (match match match p with
                                                         | LowParse_Writers_Parser.Parser
                                                             (t, p1) -> p1
                                                   with
                                                   | {
                                                       LowParse_Writers_Parser.kind
                                                         = kind;
                                                       LowParse_Writers_Parser.parser
                                                         = parser;
                                                       LowParse_Writers_Parser.serializer
                                                         = serializer;
                                                       LowParse_Writers_Parser.jumper
                                                         = jumper;_}
                                                       -> kind
                                             with
                                             | {
                                                 LowParse_Spec_Base.parser_kind_low
                                                   = parser_kind_low;
                                                 LowParse_Spec_Base.parser_kind_high
                                                   = parser_kind_high;
                                                 LowParse_Spec_Base.parser_kind_subkind
                                                   = parser_kind_subkind;
                                                 LowParse_Spec_Base.parser_kind_metadata
                                                   = parser_kind_metadata;_}
                                                 -> parser_kind_subkind)
                                              =
                                              (FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserConsumesAll)
                                          then
                                            FStar_Pervasives_Native.Some
                                              LowParse_Spec_Base.ParserConsumesAll
                                          else
                                            if
                                              (if
                                                 (if
                                                    (if
                                                       (match match match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_subkind)
                                                         =
                                                         (FStar_Pervasives_Native.Some
                                                            LowParse_Spec_Base.ParserStrong)
                                                     then true
                                                     else false)
                                                  then
                                                    FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong
                                                  else
                                                    if
                                                      (if
                                                         (FStar_Pervasives_Native.Some
                                                            (FStar_UInt32.v
                                                               (if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))))
                                                           =
                                                           (FStar_Pervasives_Native.Some
                                                              Prims.int_zero)
                                                       then true
                                                       else false)
                                                    then
                                                      (match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                    else
                                                      FStar_Pervasives_Native.None)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               then
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_subkind)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               else false)
                                            then
                                              FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserStrong
                                            else
                                              if
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_high)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        Prims.int_zero)
                                                 then
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_subkind)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserStrong)
                                                 else false)
                                              then
                                                (if
                                                   (if
                                                      (match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserStrong)
                                                    then true
                                                    else false)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserStrong
                                                 else
                                                   if
                                                     (if
                                                        (FStar_Pervasives_Native.Some
                                                           (FStar_UInt32.v
                                                              (if
                                                                 FStar_UInt32.lt
                                                                   max
                                                                   (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                               then
                                                                 FStar_UInt32.uint_to_t
                                                                   Prims.int_one
                                                               else
                                                                 if
                                                                   FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                 then
                                                                   FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))))
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             Prims.int_zero)
                                                      then true
                                                      else false)
                                                   then
                                                     (match match match frame
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_subkind)
                                                   else
                                                     FStar_Pervasives_Native.None)
                                              else
                                                FStar_Pervasives_Native.None);
                                       LowParse_Spec_Base.parser_kind_metadata
                                         =
                                         (match ((match ((match match 
                                                                  match frame
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_metadata),
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserKindMetadataTotal))
                                                  with
                                                  | (FStar_Pervasives_Native.Some
                                                     (LowParse_Spec_Base.ParserKindMetadataFail),
                                                     uu___) ->
                                                      (match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_metadata)
                                                  | (uu___,
                                                     FStar_Pervasives_Native.Some
                                                     (LowParse_Spec_Base.ParserKindMetadataFail))
                                                      ->
                                                      FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserKindMetadataTotal
                                                  | (FStar_Pervasives_Native.Some
                                                     (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                     FStar_Pervasives_Native.Some
                                                     (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                      ->
                                                      (match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_metadata)
                                                  | uu___ ->
                                                      FStar_Pervasives_Native.None),
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       ->
                                                       parser_kind_metadata))
                                          with
                                          | (FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataFail),
                                             uu___) ->
                                              (match ((match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_metadata),
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserKindMetadataTotal))
                                               with
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                  uu___1) ->
                                                   (match match match frame
                                                                with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | (uu___1,
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                   ->
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserKindMetadataTotal
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                   ->
                                                   (match match match frame
                                                                with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | uu___1 ->
                                                   FStar_Pervasives_Native.None)
                                          | (uu___,
                                             FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataFail))
                                              ->
                                              (match match match p with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         -> kind
                                               with
                                               | {
                                                   LowParse_Spec_Base.parser_kind_low
                                                     = parser_kind_low;
                                                   LowParse_Spec_Base.parser_kind_high
                                                     = parser_kind_high;
                                                   LowParse_Spec_Base.parser_kind_subkind
                                                     = parser_kind_subkind;
                                                   LowParse_Spec_Base.parser_kind_metadata
                                                     = parser_kind_metadata;_}
                                                   -> parser_kind_metadata)
                                          | (FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataTotal),
                                             FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataTotal))
                                              ->
                                              (match ((match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_metadata),
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserKindMetadataTotal))
                                               with
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                  uu___) ->
                                                   (match match match frame
                                                                with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | (uu___,
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                   ->
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserKindMetadataTotal
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                   ->
                                                   (match match match frame
                                                                with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | uu___ ->
                                                   FStar_Pervasives_Native.None)
                                          | uu___ ->
                                              FStar_Pervasives_Native.None)
                                     };
                                   LowParse_Writers_Parser.parser = ();
                                   LowParse_Writers_Parser.serializer = ();
                                   LowParse_Writers_Parser.jumper =
                                     (fun rrel ->
                                        fun rel ->
                                          fun input ->
                                            fun pos ->
                                              let h =
                                                FStar_HyperStack_ST.get () in
                                              let uu___ =
                                                let h1 =
                                                  FStar_HyperStack_ST.get () in
                                                let uu___1 =
                                                  match match frame with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      ->
                                                      jumper () () input pos in
                                                let h2 =
                                                  FStar_HyperStack_ST.get () in
                                                FStar_UInt32.add uu___1
                                                  (if
                                                     FStar_UInt32.lt max
                                                       (FStar_UInt32.uint_to_t
                                                          (Prims.of_int (256)))
                                                   then
                                                     FStar_UInt32.uint_to_t
                                                       Prims.int_one
                                                   else
                                                     if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.parse_int "65536"))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (2))
                                                     else
                                                       if
                                                         FStar_UInt32.lt max
                                                           (FStar_UInt32.uint_to_t
                                                              (Prims.parse_int "16777216"))
                                                       then
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (3))
                                                       else
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (4))) in
                                              match match p with
                                                    | LowParse_Writers_Parser.Parser
                                                        (t, p1) -> p1
                                              with
                                              | {
                                                  LowParse_Writers_Parser.kind
                                                    = kind;
                                                  LowParse_Writers_Parser.parser
                                                    = parser;
                                                  LowParse_Writers_Parser.serializer
                                                    = serializer;
                                                  LowParse_Writers_Parser.jumper
                                                    = jumper;_}
                                                  -> jumper () () input uu___)
                                 })))
                         (LowParse_Writers_Parser.Parser
                            ((),
                              (Obj.magic
                                 {
                                   LowParse_Writers_Parser.kind =
                                     {
                                       LowParse_Spec_Base.parser_kind_low =
                                         ((match match match frame with
                                                       | LowParse_Writers_Parser.Parser
                                                           (t, p1) -> p1
                                                 with
                                                 | {
                                                     LowParse_Writers_Parser.kind
                                                       = kind;
                                                     LowParse_Writers_Parser.parser
                                                       = parser;
                                                     LowParse_Writers_Parser.serializer
                                                       = serializer;
                                                     LowParse_Writers_Parser.jumper
                                                       = jumper;_}
                                                     -> kind
                                           with
                                           | {
                                               LowParse_Spec_Base.parser_kind_low
                                                 = parser_kind_low;
                                               LowParse_Spec_Base.parser_kind_high
                                                 = parser_kind_high;
                                               LowParse_Spec_Base.parser_kind_subkind
                                                 = parser_kind_subkind;
                                               LowParse_Spec_Base.parser_kind_metadata
                                                 = parser_kind_metadata;_}
                                               -> parser_kind_low)
                                            +
                                            ((FStar_UInt32.v
                                                (if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.of_int (256)))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     Prims.int_one
                                                 else
                                                   if
                                                     FStar_UInt32.lt max
                                                       (FStar_UInt32.uint_to_t
                                                          (Prims.parse_int "65536"))
                                                   then
                                                     FStar_UInt32.uint_to_t
                                                       (Prims.of_int (2))
                                                   else
                                                     if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.parse_int "16777216"))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (3))
                                                     else
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (4))))
                                               +
                                               (match match match p with
                                                            | LowParse_Writers_Parser.Parser
                                                                (t, p1) -> p1
                                                      with
                                                      | {
                                                          LowParse_Writers_Parser.kind
                                                            = kind;
                                                          LowParse_Writers_Parser.parser
                                                            = parser;
                                                          LowParse_Writers_Parser.serializer
                                                            = serializer;
                                                          LowParse_Writers_Parser.jumper
                                                            = jumper;_}
                                                          -> kind
                                                with
                                                | {
                                                    LowParse_Spec_Base.parser_kind_low
                                                      = parser_kind_low;
                                                    LowParse_Spec_Base.parser_kind_high
                                                      = parser_kind_high;
                                                    LowParse_Spec_Base.parser_kind_subkind
                                                      = parser_kind_subkind;
                                                    LowParse_Spec_Base.parser_kind_metadata
                                                      = parser_kind_metadata;_}
                                                    -> parser_kind_low)));
                                       LowParse_Spec_Base.parser_kind_high =
                                         (if
                                            (if
                                               match match match match frame
                                                                 with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.Some
                                                   uu___ -> true
                                               | uu___ -> false
                                             then
                                               match if
                                                       match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.Some
                                                           uu___ -> true
                                                       | uu___ -> false
                                                     then
                                                       FStar_Pervasives_Native.Some
                                                         ((FStar_UInt32.v
                                                             (if
                                                                FStar_UInt32.lt
                                                                  max
                                                                  (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                              then
                                                                FStar_UInt32.uint_to_t
                                                                  Prims.int_one
                                                              else
                                                                if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                  else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                            +
                                                            (match match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                             with
                                                             | FStar_Pervasives_Native.Some
                                                                 y -> y))
                                                     else
                                                       FStar_Pervasives_Native.None
                                               with
                                               | FStar_Pervasives_Native.Some
                                                   uu___ -> true
                                               | uu___ -> false
                                             else false)
                                          then
                                            FStar_Pervasives_Native.Some
                                              ((match match match match frame
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          -> parser_kind_high
                                                with
                                                | FStar_Pervasives_Native.Some
                                                    y -> y)
                                                 +
                                                 (match if
                                                          match match 
                                                                  match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                with
                                                                | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                          with
                                                          | FStar_Pervasives_Native.Some
                                                              uu___ -> true
                                                          | uu___ -> false
                                                        then
                                                          FStar_Pervasives_Native.Some
                                                            ((FStar_UInt32.v
                                                                (if
                                                                   FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                 then
                                                                   FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                 else
                                                                   if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                   else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                               +
                                                               (match 
                                                                  match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                with
                                                                | FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                        else
                                                          FStar_Pervasives_Native.None
                                                  with
                                                  | FStar_Pervasives_Native.Some
                                                      y -> y))
                                          else FStar_Pervasives_Native.None);
                                       LowParse_Spec_Base.parser_kind_subkind
                                         =
                                         (if
                                            (if
                                               (match match match p with
                                                            | LowParse_Writers_Parser.Parser
                                                                (t, p1) -> p1
                                                      with
                                                      | {
                                                          LowParse_Writers_Parser.kind
                                                            = kind;
                                                          LowParse_Writers_Parser.parser
                                                            = parser;
                                                          LowParse_Writers_Parser.serializer
                                                            = serializer;
                                                          LowParse_Writers_Parser.jumper
                                                            = jumper;_}
                                                          -> kind
                                                with
                                                | {
                                                    LowParse_Spec_Base.parser_kind_low
                                                      = parser_kind_low;
                                                    LowParse_Spec_Base.parser_kind_high
                                                      = parser_kind_high;
                                                    LowParse_Spec_Base.parser_kind_subkind
                                                      = parser_kind_subkind;
                                                    LowParse_Spec_Base.parser_kind_metadata
                                                      = parser_kind_metadata;_}
                                                    -> parser_kind_subkind)
                                                 =
                                                 (FStar_Pervasives_Native.Some
                                                    LowParse_Spec_Base.ParserConsumesAll)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserConsumesAll
                                             else
                                               if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_subkind)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               then
                                                 FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserStrong
                                               else
                                                 if
                                                   (if
                                                      (match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           Prims.int_zero)
                                                    then
                                                      (match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserStrong)
                                                    else false)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserStrong
                                                 else
                                                   FStar_Pervasives_Native.None)
                                              =
                                              (FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserConsumesAll)
                                          then
                                            FStar_Pervasives_Native.Some
                                              LowParse_Spec_Base.ParserConsumesAll
                                          else
                                            if
                                              (if
                                                 (match match match frame
                                                              with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_subkind)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               then
                                                 (if
                                                    (match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         ->
                                                         parser_kind_subkind)
                                                      =
                                                      (FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserConsumesAll)
                                                  then
                                                    FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserConsumesAll
                                                  else
                                                    if
                                                      (match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserStrong)
                                                    then
                                                      FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserStrong
                                                    else
                                                      if
                                                        (if
                                                           (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_high)
                                                             =
                                                             (FStar_Pervasives_Native.Some
                                                                Prims.int_zero)
                                                         then
                                                           (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_subkind)
                                                             =
                                                             (FStar_Pervasives_Native.Some
                                                                LowParse_Spec_Base.ParserStrong)
                                                         else false)
                                                      then
                                                        FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong
                                                      else
                                                        FStar_Pervasives_Native.None)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               else false)
                                            then
                                              FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserStrong
                                            else
                                              if
                                                (if
                                                   (if
                                                      match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_high
                                                      with
                                                      | FStar_Pervasives_Native.Some
                                                          uu___2 -> true
                                                      | uu___2 -> false
                                                    then
                                                      FStar_Pervasives_Native.Some
                                                        ((FStar_UInt32.v
                                                            (if
                                                               FStar_UInt32.lt
                                                                 max
                                                                 (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                             then
                                                               FStar_UInt32.uint_to_t
                                                                 Prims.int_one
                                                             else
                                                               if
                                                                 FStar_UInt32.lt
                                                                   max
                                                                   (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                               then
                                                                 FStar_UInt32.uint_to_t
                                                                   (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                 then
                                                                   FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                 else
                                                                   FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                           +
                                                           (match match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                            with
                                                            | FStar_Pervasives_Native.Some
                                                                y -> y))
                                                    else
                                                      FStar_Pervasives_Native.None)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        Prims.int_zero)
                                                 then
                                                   (if
                                                      (match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserConsumesAll)
                                                    then
                                                      FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserConsumesAll
                                                    else
                                                      if
                                                        (match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_subkind)
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserStrong)
                                                      then
                                                        FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong
                                                      else
                                                        if
                                                          (if
                                                             (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                              with
                                                              | {
                                                                  LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                  LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                  LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                  LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                  ->
                                                                  parser_kind_high)
                                                               =
                                                               (FStar_Pervasives_Native.Some
                                                                  Prims.int_zero)
                                                           then
                                                             (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                              with
                                                              | {
                                                                  LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                  LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                  LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                  LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                  ->
                                                                  parser_kind_subkind)
                                                               =
                                                               (FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserStrong)
                                                           else false)
                                                        then
                                                          FStar_Pervasives_Native.Some
                                                            LowParse_Spec_Base.ParserStrong
                                                        else
                                                          FStar_Pervasives_Native.None)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserStrong)
                                                 else false)
                                              then
                                                (match match match frame with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_subkind)
                                              else
                                                FStar_Pervasives_Native.None);
                                       LowParse_Spec_Base.parser_kind_metadata
                                         =
                                         (match ((match match match frame
                                                              with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata),
                                                  (match ((FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserKindMetadataTotal),
                                                           (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_metadata))
                                                   with
                                                   | (FStar_Pervasives_Native.Some
                                                      (LowParse_Spec_Base.ParserKindMetadataFail),
                                                      uu___) ->
                                                       FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserKindMetadataTotal
                                                   | (uu___,
                                                      FStar_Pervasives_Native.Some
                                                      (LowParse_Spec_Base.ParserKindMetadataFail))
                                                       ->
                                                       (match match match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_metadata)
                                                   | (FStar_Pervasives_Native.Some
                                                      (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                      FStar_Pervasives_Native.Some
                                                      (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                       ->
                                                       FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserKindMetadataTotal
                                                   | uu___ ->
                                                       FStar_Pervasives_Native.None))
                                          with
                                          | (FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataFail),
                                             uu___) ->
                                              (match match match frame with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         -> kind
                                               with
                                               | {
                                                   LowParse_Spec_Base.parser_kind_low
                                                     = parser_kind_low;
                                                   LowParse_Spec_Base.parser_kind_high
                                                     = parser_kind_high;
                                                   LowParse_Spec_Base.parser_kind_subkind
                                                     = parser_kind_subkind;
                                                   LowParse_Spec_Base.parser_kind_metadata
                                                     = parser_kind_metadata;_}
                                                   -> parser_kind_metadata)
                                          | (uu___,
                                             FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataFail))
                                              ->
                                              (match ((FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserKindMetadataTotal),
                                                       (match match match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_metadata))
                                               with
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                  uu___1) ->
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserKindMetadataTotal
                                               | (uu___1,
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                   ->
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                   ->
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserKindMetadataTotal
                                               | uu___1 ->
                                                   FStar_Pervasives_Native.None)
                                          | (FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataTotal),
                                             FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataTotal))
                                              ->
                                              (match match match frame with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         -> kind
                                               with
                                               | {
                                                   LowParse_Spec_Base.parser_kind_low
                                                     = parser_kind_low;
                                                   LowParse_Spec_Base.parser_kind_high
                                                     = parser_kind_high;
                                                   LowParse_Spec_Base.parser_kind_subkind
                                                     = parser_kind_subkind;
                                                   LowParse_Spec_Base.parser_kind_metadata
                                                     = parser_kind_metadata;_}
                                                   -> parser_kind_metadata)
                                          | uu___ ->
                                              FStar_Pervasives_Native.None)
                                     };
                                   LowParse_Writers_Parser.parser = ();
                                   LowParse_Writers_Parser.serializer = ();
                                   LowParse_Writers_Parser.jumper =
                                     (fun rrel ->
                                        fun rel ->
                                          fun input ->
                                            fun pos ->
                                              let h =
                                                FStar_HyperStack_ST.get () in
                                              let uu___ =
                                                match match frame with
                                                      | LowParse_Writers_Parser.Parser
                                                          (t, p1) -> p1
                                                with
                                                | {
                                                    LowParse_Writers_Parser.kind
                                                      = kind;
                                                    LowParse_Writers_Parser.parser
                                                      = parser;
                                                    LowParse_Writers_Parser.serializer
                                                      = serializer;
                                                    LowParse_Writers_Parser.jumper
                                                      = jumper;_}
                                                    -> jumper () () input pos in
                                              let h1 =
                                                FStar_HyperStack_ST.get () in
                                              let uu___1 =
                                                let h2 =
                                                  FStar_HyperStack_ST.get () in
                                                FStar_UInt32.add uu___
                                                  (if
                                                     FStar_UInt32.lt max
                                                       (FStar_UInt32.uint_to_t
                                                          (Prims.of_int (256)))
                                                   then
                                                     FStar_UInt32.uint_to_t
                                                       Prims.int_one
                                                   else
                                                     if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.parse_int "65536"))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (2))
                                                     else
                                                       if
                                                         FStar_UInt32.lt max
                                                           (FStar_UInt32.uint_to_t
                                                              (Prims.parse_int "16777216"))
                                                       then
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (3))
                                                       else
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (4))) in
                                              match match p with
                                                    | LowParse_Writers_Parser.Parser
                                                        (t, p1) -> p1
                                              with
                                              | {
                                                  LowParse_Writers_Parser.kind
                                                    = kind;
                                                  LowParse_Writers_Parser.parser
                                                    = parser;
                                                  LowParse_Writers_Parser.serializer
                                                    = serializer;
                                                  LowParse_Writers_Parser.jumper
                                                    = jumper;_}
                                                  ->
                                                  jumper () () input uu___1)
                                 }))) () () () ()))
                   (fun x ->
                      LowParse_Writers_Effect.frame2_impl frame
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((FStar_UInt32.v
                                            (if
                                               FStar_UInt32.lt max
                                                 (FStar_UInt32.uint_to_t
                                                    (Prims.of_int (256)))
                                             then
                                               FStar_UInt32.uint_to_t
                                                 Prims.int_one
                                             else
                                               if
                                                 FStar_UInt32.lt max
                                                   (FStar_UInt32.uint_to_t
                                                      (Prims.parse_int "65536"))
                                               then
                                                 FStar_UInt32.uint_to_t
                                                   (Prims.of_int (2))
                                               else
                                                 if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.parse_int "16777216"))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (3))
                                                 else
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (4))))
                                           +
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (if
                                           match match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_high
                                           with
                                           | FStar_Pervasives_Native.Some
                                               uu___ -> true
                                           | uu___ -> false
                                         then
                                           FStar_Pervasives_Native.Some
                                             ((FStar_UInt32.v
                                                 (if
                                                    FStar_UInt32.lt max
                                                      (FStar_UInt32.uint_to_t
                                                         (Prims.of_int (256)))
                                                  then
                                                    FStar_UInt32.uint_to_t
                                                      Prims.int_one
                                                  else
                                                    if
                                                      FStar_UInt32.lt max
                                                        (FStar_UInt32.uint_to_t
                                                           (Prims.parse_int "65536"))
                                                    then
                                                      FStar_UInt32.uint_to_t
                                                        (Prims.of_int (2))
                                                    else
                                                      if
                                                        FStar_UInt32.lt max
                                                          (FStar_UInt32.uint_to_t
                                                             (Prims.parse_int "16777216"))
                                                      then
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (3))
                                                      else
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (4))))
                                                +
                                                (match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     y -> y))
                                         else FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_subkind)
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserConsumesAll)
                                         then
                                           FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserConsumesAll
                                         else
                                           if
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_subkind)
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong)
                                           then
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong
                                           else
                                             if
                                               (if
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_high)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       Prims.int_zero)
                                                then
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_subkind)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong)
                                                else false)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong
                                             else
                                               FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (match ((FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserKindMetadataTotal),
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata))
                                         with
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail),
                                            uu___) ->
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal
                                         | (uu___,
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail))
                                             ->
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_metadata)
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal),
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal))
                                             ->
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal
                                         | uu___ ->
                                             FStar_Pervasives_Native.None)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               FStar_UInt32.add pos
                                                 (if
                                                    FStar_UInt32.lt max
                                                      (FStar_UInt32.uint_to_t
                                                         (Prims.of_int (256)))
                                                  then
                                                    FStar_UInt32.uint_to_t
                                                      Prims.int_one
                                                  else
                                                    if
                                                      FStar_UInt32.lt max
                                                        (FStar_UInt32.uint_to_t
                                                           (Prims.parse_int "65536"))
                                                    then
                                                      FStar_UInt32.uint_to_t
                                                        (Prims.of_int (2))
                                                    else
                                                      if
                                                        FStar_UInt32.lt max
                                                          (FStar_UInt32.uint_to_t
                                                             (Prims.parse_int "16777216"))
                                                      then
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (3))
                                                      else
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (4))) in
                                             match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper () () input uu___)
                                }))) ()
                        (LowParse_Writers_Parser.Parser
                           ((),
                             {
                               LowParse_Writers_Parser.kind =
                                 {
                                   LowParse_Spec_Base.parser_kind_low =
                                     ((if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))
                                        +
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low)
                                             > (FStar_UInt32.v min)
                                         then
                                           match match match p with
                                                       | LowParse_Writers_Parser.Parser
                                                           (t, p1) -> p1
                                                 with
                                                 | {
                                                     LowParse_Writers_Parser.kind
                                                       = kind;
                                                     LowParse_Writers_Parser.parser
                                                       = parser;
                                                     LowParse_Writers_Parser.serializer
                                                       = serializer;
                                                     LowParse_Writers_Parser.jumper
                                                       = jumper;_}
                                                     -> kind
                                           with
                                           | {
                                               LowParse_Spec_Base.parser_kind_low
                                                 = parser_kind_low;
                                               LowParse_Spec_Base.parser_kind_high
                                                 = parser_kind_high;
                                               LowParse_Spec_Base.parser_kind_subkind
                                                 = parser_kind_subkind;
                                               LowParse_Spec_Base.parser_kind_metadata
                                                 = parser_kind_metadata;_}
                                               -> parser_kind_low
                                         else FStar_UInt32.v min));
                                   LowParse_Spec_Base.parser_kind_high =
                                     (FStar_Pervasives_Native.Some
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max)
                                                <
                                                ((if
                                                    (match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_low)
                                                      > (FStar_UInt32.v min)
                                                  then
                                                    match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low
                                                  else FStar_UInt32.v min))
                                            then
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low)
                                                   > (FStar_UInt32.v min)
                                               then
                                                 match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_low
                                               else FStar_UInt32.v min)
                                            else
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max))));
                                   LowParse_Spec_Base.parser_kind_subkind =
                                     (FStar_Pervasives_Native.Some
                                        LowParse_Spec_Base.ParserStrong);
                                   LowParse_Spec_Base.parser_kind_metadata =
                                     (match match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_metadata
                                      with
                                      | FStar_Pervasives_Native.Some
                                          (LowParse_Spec_Base.ParserKindMetadataFail)
                                          ->
                                          FStar_Pervasives_Native.Some
                                            LowParse_Spec_Base.ParserKindMetadataFail
                                      | uu___ -> FStar_Pervasives_Native.None)
                                 };
                               LowParse_Writers_Parser.parser = ();
                               LowParse_Writers_Parser.serializer = ();
                               LowParse_Writers_Parser.jumper =
                                 (fun rrel ->
                                    fun rel ->
                                      fun input ->
                                        fun pos ->
                                          let h = FStar_HyperStack_ST.get () in
                                          let h1 = FStar_HyperStack_ST.get () in
                                          let h2 = FStar_HyperStack_ST.get () in
                                          let uu___ =
                                            let uu___1 =
                                              match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                     ()) () () input pos in
                                            FStar_UInt32.add
                                              (FStar_UInt32.uint_to_t
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))))
                                              uu___1 in
                                          FStar_UInt32.add pos uu___)
                             })) () () ()
                        (fun uu___ ->
                           (fun uu___ ->
                              Obj.magic
                                (LowParse_Writers_Effect.Repr
                                   ((),
                                     (Obj.magic
                                        (LowParse_Writers_Effect.mk_repr_impl
                                           (LowParse_Writers_Parser.Parser
                                              ((),
                                                (Obj.magic
                                                   {
                                                     LowParse_Writers_Parser.kind
                                                       =
                                                       {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           =
                                                           ((FStar_UInt32.v
                                                               (if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                              +
                                                              (match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_low));
                                                         LowParse_Spec_Base.parser_kind_high
                                                           =
                                                           (if
                                                              match match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                              with
                                                              | FStar_Pervasives_Native.Some
                                                                  uu___1 ->
                                                                  true
                                                              | uu___1 ->
                                                                  false
                                                            then
                                                              FStar_Pervasives_Native.Some
                                                                ((FStar_UInt32.v
                                                                    (
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                   +
                                                                   (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                            else
                                                              FStar_Pervasives_Native.None);
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           (if
                                                              (match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_subkind)
                                                                =
                                                                (FStar_Pervasives_Native.Some
                                                                   LowParse_Spec_Base.ParserConsumesAll)
                                                            then
                                                              FStar_Pervasives_Native.Some
                                                                LowParse_Spec_Base.ParserConsumesAll
                                                            else
                                                              if
                                                                (match 
                                                                   match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                  =
                                                                  (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                              then
                                                                FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserStrong
                                                              else
                                                                if
                                                                  (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero)
                                                                   then
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                   else false)
                                                                then
                                                                  FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                else
                                                                  FStar_Pervasives_Native.None);
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           (match ((FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                    (
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata))
                                                            with
                                                            | (FStar_Pervasives_Native.Some
                                                               (LowParse_Spec_Base.ParserKindMetadataFail),
                                                               uu___1) ->
                                                                FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserKindMetadataTotal
                                                            | (uu___1,
                                                               FStar_Pervasives_Native.Some
                                                               (LowParse_Spec_Base.ParserKindMetadataFail))
                                                                ->
                                                                (match 
                                                                   match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata)
                                                            | (FStar_Pervasives_Native.Some
                                                               (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                               FStar_Pervasives_Native.Some
                                                               (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                                ->
                                                                FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserKindMetadataTotal
                                                            | uu___1 ->
                                                                FStar_Pervasives_Native.None)
                                                       };
                                                     LowParse_Writers_Parser.parser
                                                       = ();
                                                     LowParse_Writers_Parser.serializer
                                                       = ();
                                                     LowParse_Writers_Parser.jumper
                                                       =
                                                       (fun rrel ->
                                                          fun rel ->
                                                            fun input ->
                                                              fun pos ->
                                                                let h =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                let uu___1 =
                                                                  let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                  FStar_UInt32.add
                                                                    pos
                                                                    (
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))) in
                                                                match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    ->
                                                                    jumper ()
                                                                    () input
                                                                    uu___1)
                                                   })))
                                           (LowParse_Writers_Parser.Parser
                                              ((),
                                                {
                                                  LowParse_Writers_Parser.kind
                                                    =
                                                    {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        =
                                                        ((if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.of_int (256))
                                                          then Prims.int_one
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "65536")
                                                            then
                                                              (Prims.of_int (2))
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "16777216")
                                                              then
                                                                (Prims.of_int (3))
                                                              else
                                                                (Prims.of_int (4)))
                                                           +
                                                           (if
                                                              (match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_low)
                                                                >
                                                                (FStar_UInt32.v
                                                                   min)
                                                            then
                                                              match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                              with
                                                              | {
                                                                  LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                  LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                  LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                  LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                  ->
                                                                  parser_kind_low
                                                            else
                                                              FStar_UInt32.v
                                                                min));
                                                      LowParse_Spec_Base.parser_kind_high
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           ((if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4)))
                                                              +
                                                              (if
                                                                 (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                  with
                                                                  | FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                  | FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   ((
                                                                   if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                   then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                   else
                                                                    FStar_UInt32.v
                                                                    min))
                                                               then
                                                                 (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                  then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                  else
                                                                    FStar_UInt32.v
                                                                    min)
                                                               else
                                                                 (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                  with
                                                                  | FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                  | FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max))));
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserStrong);
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        (match match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_metadata
                                                         with
                                                         | FStar_Pervasives_Native.Some
                                                             (LowParse_Spec_Base.ParserKindMetadataFail)
                                                             ->
                                                             FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserKindMetadataFail
                                                         | uu___1 ->
                                                             FStar_Pervasives_Native.None)
                                                    };
                                                  LowParse_Writers_Parser.parser
                                                    = ();
                                                  LowParse_Writers_Parser.serializer
                                                    = ();
                                                  LowParse_Writers_Parser.jumper
                                                    =
                                                    (fun rrel ->
                                                       fun rel ->
                                                         fun input ->
                                                           fun pos ->
                                                             let h =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let h1 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let h2 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let uu___1 =
                                                               let uu___2 =
                                                                 match 
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                   then
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                 with
                                                                 | uu___3
                                                                    when
                                                                    uu___3 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                 | uu___3
                                                                    when
                                                                    uu___3 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                 | uu___3
                                                                    when
                                                                    uu___3 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                 | uu___3
                                                                    when
                                                                    uu___3 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                               FStar_UInt32.add
                                                                 (FStar_UInt32.uint_to_t
                                                                    (
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                 uu___2 in
                                                             FStar_UInt32.add
                                                               pos uu___1)
                                                })) () () () () ()
                                           (fun b ->
                                              fun len ->
                                                fun pos ->
                                                  let h =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let sl =
                                                    {
                                                      LowParse_Slice.base = b;
                                                      LowParse_Slice.len =
                                                        len
                                                    } in
                                                  let size =
                                                    FStar_UInt32.sub pos
                                                      (FStar_UInt32.uint_to_t
                                                         (if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.of_int (256))
                                                          then Prims.int_one
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "65536")
                                                            then
                                                              (Prims.of_int (2))
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "16777216")
                                                              then
                                                                (Prims.of_int (3))
                                                              else
                                                                (Prims.of_int (4)))) in
                                                  let uu___1 =
                                                    (match if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.of_int (256))
                                                           then Prims.int_one
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "65536")
                                                             then
                                                               (Prims.of_int (2))
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "16777216")
                                                               then
                                                                 (Prims.of_int (3))
                                                               else
                                                                 (Prims.of_int (4))
                                                     with
                                                     | uu___2 when
                                                         uu___2 =
                                                           Prims.int_one
                                                         ->
                                                         (fun x1 ->
                                                            fun rrel ->
                                                              fun rel ->
                                                                fun input ->
                                                                  fun pos1 ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x1 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (2))
                                                         ->
                                                         (fun x1 ->
                                                            fun rrel ->
                                                              fun rel ->
                                                                fun input ->
                                                                  fun pos1 ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x1 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (3))
                                                         ->
                                                         (fun x1 ->
                                                            fun rrel ->
                                                              fun rel ->
                                                                fun input ->
                                                                  fun pos1 ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x1 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (4))
                                                         ->
                                                         (fun x1 ->
                                                            fun rrel ->
                                                              fun rel ->
                                                                fun input ->
                                                                  fun pos1 ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x1 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1))
                                                      size () ()
                                                      (Obj.magic sl)
                                                      (FStar_UInt32.uint_to_t
                                                         Prims.int_zero) in
                                                  let h1 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  LowParse_Writers_Effect.ICorrect
                                                    ((), pos))))))) uu___))))

let (parse_vldata_intro_weak_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit, unit, unit, Prims.l_True, Obj.t, Obj.t, unit, unit)
            LowParse_Writers_Effect.repr_impl)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun p ->
               fun min ->
                 fun max ->
                   Obj.magic
                     (LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((FStar_UInt32.v
                                            (if
                                               FStar_UInt32.lt max
                                                 (FStar_UInt32.uint_to_t
                                                    (Prims.of_int (256)))
                                             then
                                               FStar_UInt32.uint_to_t
                                                 Prims.int_one
                                             else
                                               if
                                                 FStar_UInt32.lt max
                                                   (FStar_UInt32.uint_to_t
                                                      (Prims.parse_int "65536"))
                                               then
                                                 FStar_UInt32.uint_to_t
                                                   (Prims.of_int (2))
                                               else
                                                 if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.parse_int "16777216"))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (3))
                                                 else
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (4))))
                                           +
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (if
                                           match match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_high
                                           with
                                           | FStar_Pervasives_Native.Some
                                               uu___ -> true
                                           | uu___ -> false
                                         then
                                           FStar_Pervasives_Native.Some
                                             ((FStar_UInt32.v
                                                 (if
                                                    FStar_UInt32.lt max
                                                      (FStar_UInt32.uint_to_t
                                                         (Prims.of_int (256)))
                                                  then
                                                    FStar_UInt32.uint_to_t
                                                      Prims.int_one
                                                  else
                                                    if
                                                      FStar_UInt32.lt max
                                                        (FStar_UInt32.uint_to_t
                                                           (Prims.parse_int "65536"))
                                                    then
                                                      FStar_UInt32.uint_to_t
                                                        (Prims.of_int (2))
                                                    else
                                                      if
                                                        FStar_UInt32.lt max
                                                          (FStar_UInt32.uint_to_t
                                                             (Prims.parse_int "16777216"))
                                                      then
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (3))
                                                      else
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (4))))
                                                +
                                                (match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     y -> y))
                                         else FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_subkind)
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserConsumesAll)
                                         then
                                           FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserConsumesAll
                                         else
                                           if
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_subkind)
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong)
                                           then
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong
                                           else
                                             if
                                               (if
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_high)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       Prims.int_zero)
                                                then
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_subkind)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong)
                                                else false)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong
                                             else
                                               FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (match ((FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserKindMetadataTotal),
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata))
                                         with
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail),
                                            uu___) ->
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal
                                         | (uu___,
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail))
                                             ->
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_metadata)
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal),
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal))
                                             ->
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal
                                         | uu___ ->
                                             FStar_Pervasives_Native.None)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               FStar_UInt32.add pos
                                                 (if
                                                    FStar_UInt32.lt max
                                                      (FStar_UInt32.uint_to_t
                                                         (Prims.of_int (256)))
                                                  then
                                                    FStar_UInt32.uint_to_t
                                                      Prims.int_one
                                                  else
                                                    if
                                                      FStar_UInt32.lt max
                                                        (FStar_UInt32.uint_to_t
                                                           (Prims.parse_int "65536"))
                                                    then
                                                      FStar_UInt32.uint_to_t
                                                        (Prims.of_int (2))
                                                    else
                                                      if
                                                        FStar_UInt32.lt max
                                                          (FStar_UInt32.uint_to_t
                                                             (Prims.parse_int "16777216"))
                                                      then
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (3))
                                                      else
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (4))) in
                                             match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper () () input uu___)
                                })))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             {
                               LowParse_Writers_Parser.kind =
                                 {
                                   LowParse_Spec_Base.parser_kind_low =
                                     ((if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))
                                        +
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low)
                                             > (FStar_UInt32.v min)
                                         then
                                           match match match p with
                                                       | LowParse_Writers_Parser.Parser
                                                           (t, p1) -> p1
                                                 with
                                                 | {
                                                     LowParse_Writers_Parser.kind
                                                       = kind;
                                                     LowParse_Writers_Parser.parser
                                                       = parser;
                                                     LowParse_Writers_Parser.serializer
                                                       = serializer;
                                                     LowParse_Writers_Parser.jumper
                                                       = jumper;_}
                                                     -> kind
                                           with
                                           | {
                                               LowParse_Spec_Base.parser_kind_low
                                                 = parser_kind_low;
                                               LowParse_Spec_Base.parser_kind_high
                                                 = parser_kind_high;
                                               LowParse_Spec_Base.parser_kind_subkind
                                                 = parser_kind_subkind;
                                               LowParse_Spec_Base.parser_kind_metadata
                                                 = parser_kind_metadata;_}
                                               -> parser_kind_low
                                         else FStar_UInt32.v min));
                                   LowParse_Spec_Base.parser_kind_high =
                                     (FStar_Pervasives_Native.Some
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max)
                                                <
                                                ((if
                                                    (match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_low)
                                                      > (FStar_UInt32.v min)
                                                  then
                                                    match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low
                                                  else FStar_UInt32.v min))
                                            then
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low)
                                                   > (FStar_UInt32.v min)
                                               then
                                                 match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_low
                                               else FStar_UInt32.v min)
                                            else
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max))));
                                   LowParse_Spec_Base.parser_kind_subkind =
                                     (FStar_Pervasives_Native.Some
                                        LowParse_Spec_Base.ParserStrong);
                                   LowParse_Spec_Base.parser_kind_metadata =
                                     (match match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_metadata
                                      with
                                      | FStar_Pervasives_Native.Some
                                          (LowParse_Spec_Base.ParserKindMetadataFail)
                                          ->
                                          FStar_Pervasives_Native.Some
                                            LowParse_Spec_Base.ParserKindMetadataFail
                                      | uu___ -> FStar_Pervasives_Native.None)
                                 };
                               LowParse_Writers_Parser.parser = ();
                               LowParse_Writers_Parser.serializer = ();
                               LowParse_Writers_Parser.jumper =
                                 (fun rrel ->
                                    fun rel ->
                                      fun input ->
                                        fun pos ->
                                          let h = FStar_HyperStack_ST.get () in
                                          let h1 = FStar_HyperStack_ST.get () in
                                          let h2 = FStar_HyperStack_ST.get () in
                                          let uu___ =
                                            let uu___1 =
                                              match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                     ()) () () input pos in
                                            FStar_UInt32.add
                                              (FStar_UInt32.uint_to_t
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))))
                                              uu___1 in
                                          FStar_UInt32.add pos uu___)
                             })) () () () () ()
                        (fun b ->
                           fun len ->
                             fun pos ->
                               let h = FStar_HyperStack_ST.get () in
                               let sl =
                                 {
                                   LowParse_Slice.base = b;
                                   LowParse_Slice.len = len
                                 } in
                               let size =
                                 FStar_UInt32.sub pos
                                   (FStar_UInt32.uint_to_t
                                      (if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))) in
                               if
                                 (FStar_UInt32.lte min size) &&
                                   (FStar_UInt32.lte size max)
                               then
                                 let uu___ =
                                   (match if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4))
                                    with
                                    | uu___1 when uu___1 = Prims.int_one ->
                                        (fun x ->
                                           fun rrel ->
                                             fun rel ->
                                               fun input ->
                                                 fun pos1 ->
                                                   let h0 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let len1 =
                                                     LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                       () x () ()
                                                       (match input with
                                                        | {
                                                            LowParse_Slice.base
                                                              = base;
                                                            LowParse_Slice.len
                                                              = len2;_}
                                                            -> base) pos1 in
                                                   let h1 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   FStar_UInt32.add pos1 len1)
                                    | uu___1 when uu___1 = (Prims.of_int (2))
                                        ->
                                        (fun x ->
                                           fun rrel ->
                                             fun rel ->
                                               fun input ->
                                                 fun pos1 ->
                                                   let h0 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let len1 =
                                                     LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                       () x () ()
                                                       (match input with
                                                        | {
                                                            LowParse_Slice.base
                                                              = base;
                                                            LowParse_Slice.len
                                                              = len2;_}
                                                            -> base) pos1 in
                                                   let h1 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   FStar_UInt32.add pos1 len1)
                                    | uu___1 when uu___1 = (Prims.of_int (3))
                                        ->
                                        (fun x ->
                                           fun rrel ->
                                             fun rel ->
                                               fun input ->
                                                 fun pos1 ->
                                                   let h0 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let len1 =
                                                     LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                       () x () ()
                                                       (match input with
                                                        | {
                                                            LowParse_Slice.base
                                                              = base;
                                                            LowParse_Slice.len
                                                              = len2;_}
                                                            -> base) pos1 in
                                                   let h1 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   FStar_UInt32.add pos1 len1)
                                    | uu___1 when uu___1 = (Prims.of_int (4))
                                        ->
                                        (fun x ->
                                           fun rrel ->
                                             fun rel ->
                                               fun input ->
                                                 fun pos1 ->
                                                   let h0 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let len1 =
                                                     LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                       () x () ()
                                                       (match input with
                                                        | {
                                                            LowParse_Slice.base
                                                              = base;
                                                            LowParse_Slice.len
                                                              = len2;_}
                                                            -> base) pos1 in
                                                   let h1 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   FStar_UInt32.add pos1 len1))
                                     size () () (Obj.magic sl)
                                     (FStar_UInt32.uint_to_t Prims.int_zero) in
                                 let h1 = FStar_HyperStack_ST.get () in
                                 LowParse_Writers_Effect.ICorrect ((), pos)
                               else
                                 LowParse_Writers_Effect.IError
                                   "parse_vldata_intro_weak: out of bounds")))
            uu___3 uu___2 uu___1 uu___
let (parse_vldata_intro_weak :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit, unit, unit, unit, unit, unit, unit)
            LowParse_Writers_Effect.repr)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun p ->
               fun min ->
                 fun max ->
                   Obj.magic
                     (LowParse_Writers_Effect.Repr
                        ((),
                          (Obj.magic
                             (LowParse_Writers_Effect.mk_repr_impl
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                ((FStar_UInt32.v
                                                    (if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.of_int (256)))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         Prims.int_one
                                                     else
                                                       if
                                                         FStar_UInt32.lt max
                                                           (FStar_UInt32.uint_to_t
                                                              (Prims.parse_int "65536"))
                                                       then
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (2))
                                                       else
                                                         if
                                                           FStar_UInt32.lt
                                                             max
                                                             (FStar_UInt32.uint_to_t
                                                                (Prims.parse_int "16777216"))
                                                         then
                                                           FStar_UInt32.uint_to_t
                                                             (Prims.of_int (3))
                                                         else
                                                           FStar_UInt32.uint_to_t
                                                             (Prims.of_int (4))))
                                                   +
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (if
                                                   match match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_high
                                                   with
                                                   | FStar_Pervasives_Native.Some
                                                       uu___ -> true
                                                   | uu___ -> false
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     ((FStar_UInt32.v
                                                         (if
                                                            FStar_UInt32.lt
                                                              max
                                                              (FStar_UInt32.uint_to_t
                                                                 (Prims.of_int (256)))
                                                          then
                                                            FStar_UInt32.uint_to_t
                                                              Prims.int_one
                                                          else
                                                            if
                                                              FStar_UInt32.lt
                                                                max
                                                                (FStar_UInt32.uint_to_t
                                                                   (Prims.parse_int "65536"))
                                                            then
                                                              FStar_UInt32.uint_to_t
                                                                (Prims.of_int (2))
                                                            else
                                                              if
                                                                FStar_UInt32.lt
                                                                  max
                                                                  (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                              then
                                                                FStar_UInt32.uint_to_t
                                                                  (Prims.of_int (3))
                                                              else
                                                                FStar_UInt32.uint_to_t
                                                                  (Prims.of_int (4))))
                                                        +
                                                        (match match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_high
                                                         with
                                                         | FStar_Pervasives_Native.Some
                                                             y -> y))
                                                 else
                                                   FStar_Pervasives_Native.None);
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_subkind)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserConsumesAll)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserConsumesAll
                                                 else
                                                   if
                                                     (match match match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_subkind)
                                                       =
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong)
                                                   then
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong
                                                   else
                                                     if
                                                       (if
                                                          (match match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                           with
                                                           | {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 parser_kind_low;
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 parser_kind_high;
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 parser_kind_subkind;
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 parser_kind_metadata;_}
                                                               ->
                                                               parser_kind_high)
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               Prims.int_zero)
                                                        then
                                                          (match match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                           with
                                                           | {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 parser_kind_low;
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 parser_kind_high;
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 parser_kind_subkind;
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 parser_kind_metadata;_}
                                                               ->
                                                               parser_kind_subkind)
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserStrong)
                                                        else false)
                                                     then
                                                       FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserStrong
                                                     else
                                                       FStar_Pervasives_Native.None);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                (match ((FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserKindMetadataTotal),
                                                         (match match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_metadata))
                                                 with
                                                 | (FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataFail),
                                                    uu___) ->
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserKindMetadataTotal
                                                 | (uu___,
                                                    FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataFail))
                                                     ->
                                                     (match match match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_metadata)
                                                 | (FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                    FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                     ->
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserKindMetadataTotal
                                                 | uu___ ->
                                                     FStar_Pervasives_Native.None)
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let h1 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       FStar_UInt32.add pos
                                                         (if
                                                            FStar_UInt32.lt
                                                              max
                                                              (FStar_UInt32.uint_to_t
                                                                 (Prims.of_int (256)))
                                                          then
                                                            FStar_UInt32.uint_to_t
                                                              Prims.int_one
                                                          else
                                                            if
                                                              FStar_UInt32.lt
                                                                max
                                                                (FStar_UInt32.uint_to_t
                                                                   (Prims.parse_int "65536"))
                                                            then
                                                              FStar_UInt32.uint_to_t
                                                                (Prims.of_int (2))
                                                            else
                                                              if
                                                                FStar_UInt32.lt
                                                                  max
                                                                  (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                              then
                                                                FStar_UInt32.uint_to_t
                                                                  (Prims.of_int (3))
                                                              else
                                                                FStar_UInt32.uint_to_t
                                                                  (Prims.of_int (4))) in
                                                     match match p with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         ->
                                                         jumper () () input
                                                           uu___)
                                        })))
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     {
                                       LowParse_Writers_Parser.kind =
                                         {
                                           LowParse_Spec_Base.parser_kind_low
                                             =
                                             ((if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))
                                                +
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low)
                                                     > (FStar_UInt32.v min)
                                                 then
                                                   match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_low
                                                 else FStar_UInt32.v min));
                                           LowParse_Spec_Base.parser_kind_high
                                             =
                                             (FStar_Pervasives_Native.Some
                                                ((if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.None
                                                           ->
                                                           FStar_UInt32.v max
                                                       | FStar_Pervasives_Native.Some
                                                           kmax ->
                                                           if
                                                             kmax <
                                                               (FStar_UInt32.v
                                                                  max)
                                                           then kmax
                                                           else
                                                             FStar_UInt32.v
                                                               max)
                                                        <
                                                        ((if
                                                            (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_low)
                                                              >
                                                              (FStar_UInt32.v
                                                                 min)
                                                          then
                                                            match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_low
                                                          else
                                                            FStar_UInt32.v
                                                              min))
                                                    then
                                                      (if
                                                         (match match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_low)
                                                           >
                                                           (FStar_UInt32.v
                                                              min)
                                                       then
                                                         match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_low
                                                       else
                                                         FStar_UInt32.v min)
                                                    else
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.None
                                                           ->
                                                           FStar_UInt32.v max
                                                       | FStar_Pervasives_Native.Some
                                                           kmax ->
                                                           if
                                                             kmax <
                                                               (FStar_UInt32.v
                                                                  max)
                                                           then kmax
                                                           else
                                                             FStar_UInt32.v
                                                               max))));
                                           LowParse_Spec_Base.parser_kind_subkind
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserStrong);
                                           LowParse_Spec_Base.parser_kind_metadata
                                             =
                                             (match match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata
                                              with
                                              | FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail)
                                                  ->
                                                  FStar_Pervasives_Native.Some
                                                    LowParse_Spec_Base.ParserKindMetadataFail
                                              | uu___ ->
                                                  FStar_Pervasives_Native.None)
                                         };
                                       LowParse_Writers_Parser.parser = ();
                                       LowParse_Writers_Parser.serializer =
                                         ();
                                       LowParse_Writers_Parser.jumper =
                                         (fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos ->
                                                  let h =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let h1 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let uu___ =
                                                    let uu___1 =
                                                      match if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.of_int (256))
                                                            then
                                                              Prims.int_one
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "65536")
                                                              then
                                                                (Prims.of_int (2))
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                then
                                                                  (Prims.of_int (3))
                                                                else
                                                                  (Prims.of_int (4))
                                                      with
                                                      | uu___2 when
                                                          uu___2 =
                                                            Prims.int_one
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (2))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (3))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (4))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                             ()) () () input
                                                            pos in
                                                    FStar_UInt32.add
                                                      (FStar_UInt32.uint_to_t
                                                         (if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.of_int (256))
                                                          then Prims.int_one
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "65536")
                                                            then
                                                              (Prims.of_int (2))
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "16777216")
                                                              then
                                                                (Prims.of_int (3))
                                                              else
                                                                (Prims.of_int (4))))
                                                      uu___1 in
                                                  FStar_UInt32.add pos uu___)
                                     })) () () () () ()
                                (fun b ->
                                   fun len ->
                                     fun pos ->
                                       let h = FStar_HyperStack_ST.get () in
                                       let sl =
                                         {
                                           LowParse_Slice.base = b;
                                           LowParse_Slice.len = len
                                         } in
                                       let size =
                                         FStar_UInt32.sub pos
                                           (FStar_UInt32.uint_to_t
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))) in
                                       if
                                         (FStar_UInt32.lte min size) &&
                                           (FStar_UInt32.lte size max)
                                       then
                                         let uu___ =
                                           (match if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))
                                            with
                                            | uu___1 when
                                                uu___1 = Prims.int_one ->
                                                (fun x ->
                                                   fun rrel ->
                                                     fun rel ->
                                                       fun input ->
                                                         fun pos1 ->
                                                           let h0 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let len1 =
                                                             LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                               () x () ()
                                                               (match input
                                                                with
                                                                | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                               pos1 in
                                                           let h1 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           FStar_UInt32.add
                                                             pos1 len1)
                                            | uu___1 when
                                                uu___1 = (Prims.of_int (2))
                                                ->
                                                (fun x ->
                                                   fun rrel ->
                                                     fun rel ->
                                                       fun input ->
                                                         fun pos1 ->
                                                           let h0 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let len1 =
                                                             LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                               () x () ()
                                                               (match input
                                                                with
                                                                | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                               pos1 in
                                                           let h1 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           FStar_UInt32.add
                                                             pos1 len1)
                                            | uu___1 when
                                                uu___1 = (Prims.of_int (3))
                                                ->
                                                (fun x ->
                                                   fun rrel ->
                                                     fun rel ->
                                                       fun input ->
                                                         fun pos1 ->
                                                           let h0 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let len1 =
                                                             LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                               () x () ()
                                                               (match input
                                                                with
                                                                | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                               pos1 in
                                                           let h1 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           FStar_UInt32.add
                                                             pos1 len1)
                                            | uu___1 when
                                                uu___1 = (Prims.of_int (4))
                                                ->
                                                (fun x ->
                                                   fun rrel ->
                                                     fun rel ->
                                                       fun input ->
                                                         fun pos1 ->
                                                           let h0 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let len1 =
                                                             LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                               () x () ()
                                                               (match input
                                                                with
                                                                | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                               pos1 in
                                                           let h1 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           FStar_UInt32.add
                                                             pos1 len1)) size
                                             () () (Obj.magic sl)
                                             (FStar_UInt32.uint_to_t
                                                Prims.int_zero) in
                                         let h1 = FStar_HyperStack_ST.get () in
                                         LowParse_Writers_Effect.ICorrect
                                           ((), pos)
                                       else
                                         LowParse_Writers_Effect.IError
                                           "parse_vldata_intro_weak: out of bounds"))))))
            uu___3 uu___2 uu___1 uu___
let (parse_vldata_intro_weak_ho :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          unit ->
            unit ->
              unit ->
                (unit ->
                   (unit, unit, unit, unit, unit, unit, unit)
                     LowParse_Writers_Effect.repr)
                  ->
                  (unit, unit, unit, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun pre ->
            fun post ->
              fun post_err ->
                fun f ->
                  LowParse_Writers_Effect.Repr
                    ((),
                      (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                         (Obj.magic ()) () () () (Obj.magic ()) () () () ()
                         () ()
                         (Obj.magic
                            (LowParse_Writers_Effect.lift_read_impl ()
                               (Obj.magic ())
                               (Obj.magic
                                  (LowParse_Writers_Effect.ReadRepr
                                     ((),
                                       (LowParse_Writers_Effect.lift_pure_read_impl
                                          (fun uu___ ->
                                             if
                                               FStar_UInt32.lt max
                                                 (FStar_UInt32.uint_to_t
                                                    (Prims.of_int (256)))
                                             then
                                               FStar_UInt32.uint_to_t
                                                 Prims.int_one
                                             else
                                               if
                                                 FStar_UInt32.lt max
                                                   (FStar_UInt32.uint_to_t
                                                      (Prims.parse_int "65536"))
                                               then
                                                 FStar_UInt32.uint_to_t
                                                   (Prims.of_int (2))
                                               else
                                                 if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.parse_int "16777216"))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (3))
                                                 else
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (4))) ()))))))
                         (fun uu___ ->
                            (fun x ->
                               Obj.magic
                                 (LowParse_Writers_Effect.bind_impl
                                    (Obj.magic ()) (Obj.magic ()) () () ()
                                    (Obj.magic ()) () () () () () ()
                                    (Obj.magic
                                       (LowParse_Writers_Effect.elem_writer_impl
                                          (LowParse_Writers_Parser.Parser
                                             ((),
                                               (Obj.magic
                                                  {
                                                    LowParse_Writers_Parser.kind
                                                      =
                                                      {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          =
                                                          (FStar_UInt32.v x);
                                                        LowParse_Spec_Base.parser_kind_high
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             (FStar_UInt32.v
                                                                x));
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserStrong);
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserKindMetadataTotal)
                                                      };
                                                    LowParse_Writers_Parser.parser
                                                      = ();
                                                    LowParse_Writers_Parser.serializer
                                                      = ();
                                                    LowParse_Writers_Parser.jumper
                                                      =
                                                      (fun rrel ->
                                                         fun rel ->
                                                           fun input ->
                                                             fun pos ->
                                                               let h =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               FStar_UInt32.add
                                                                 pos x)
                                                  })))
                                          (fun uu___2 ->
                                             fun uu___1 ->
                                               fun uu___ ->
                                                 (if
                                                    (FStar_UInt32.v x) >
                                                      (Prims.parse_int "4294967295")
                                                  then
                                                    fun b ->
                                                      fun len ->
                                                        fun x1 ->
                                                          let x1 =
                                                            Obj.magic x1 in
                                                          Obj.magic
                                                            FStar_Pervasives_Native.None
                                                  else
                                                    (fun b ->
                                                       fun len ->
                                                         fun x1 ->
                                                           let x1 =
                                                             Obj.magic x1 in
                                                           if
                                                             FStar_UInt32.lt
                                                               len
                                                               (FStar_UInt32.uint_to_t
                                                                  (FStar_UInt32.v
                                                                    x))
                                                           then
                                                             Obj.magic
                                                               FStar_Pervasives_Native.None
                                                           else
                                                             (let uu___2 =
                                                                if
                                                                  x =
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one)
                                                                then
                                                                  let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                  let len1 =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                  let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                  FStar_UInt32.add
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    len1
                                                                else
                                                                  if
                                                                    x =
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2)))
                                                                  then
                                                                    (
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    len1)
                                                                  else
                                                                    if
                                                                    x =
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3)))
                                                                    then
                                                                    (let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    len1)
                                                                    else
                                                                    (let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    len1) in
                                                              Obj.magic
                                                                (FStar_Pervasives_Native.Some
                                                                   uu___2))))
                                                   uu___2 uu___1 uu___) ()
                                          (Obj.magic
                                             (FStar_UInt32.uint_to_t
                                                Prims.int_zero))))
                                    (fun uu___ ->
                                       (fun x1 ->
                                          Obj.magic
                                            (LowParse_Writers_Effect.bind_impl
                                               (Obj.magic ()) (Obj.magic ())
                                               () () () (Obj.magic ()) () ()
                                               () () () ()
                                               (LowParse_Writers_Effect.frame_impl
                                                  (LowParse_Writers_Parser.Parser
                                                     ((),
                                                       (Obj.magic
                                                          {
                                                            LowParse_Writers_Parser.kind
                                                              =
                                                              {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  (FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))));
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  (FStar_Pervasives_Native.Some
                                                                    (FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))));
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal)
                                                              };
                                                            LowParse_Writers_Parser.parser
                                                              = ();
                                                            LowParse_Writers_Parser.serializer
                                                              = ();
                                                            LowParse_Writers_Parser.jumper
                                                              =
                                                              (fun rrel ->
                                                                 fun rel ->
                                                                   fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                          }))) () p () () ()
                                                  (fun uu___ ->
                                                     (fun uu___ ->
                                                        Obj.magic
                                                          (LowParse_Writers_Effect.Repr
                                                             ((),
                                                               (LowParse_Writers_Effect.recast_writer_impl
                                                                  (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    Prims.int_zero;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal)
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero))
                                                                    }))) p ()
                                                                  () () () f))))
                                                       uu___))
                                               (fun x2 ->
                                                  LowParse_Writers_Effect.mk_repr_impl
                                                    (LowParse_Writers_Parser.Parser
                                                       ((),
                                                         (Obj.magic
                                                            {
                                                              LowParse_Writers_Parser.kind
                                                                =
                                                                {
                                                                  LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    (
                                                                    (FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                    +
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low));
                                                                  LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (
                                                                    if
                                                                    match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    uu___ ->
                                                                    true
                                                                    | 
                                                                    uu___ ->
                                                                    false
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    ((FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                    +
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                                    else
                                                                    FStar_Pervasives_Native.None);
                                                                  LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll
                                                                    else
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                    else
                                                                    if
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero)
                                                                    then
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    else
                                                                    false)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                    else
                                                                    FStar_Pervasives_Native.None);
                                                                  LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    (
                                                                    match 
                                                                    ((FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata))
                                                                    with
                                                                    | 
                                                                    (FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail),
                                                                    uu___) ->
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal
                                                                    | 
                                                                    (uu___,
                                                                    FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail))
                                                                    ->
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata)
                                                                    | 
                                                                    (FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                    FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                                    ->
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal
                                                                    | 
                                                                    uu___ ->
                                                                    FStar_Pervasives_Native.None)
                                                                };
                                                              LowParse_Writers_Parser.parser
                                                                = ();
                                                              LowParse_Writers_Parser.serializer
                                                                = ();
                                                              LowParse_Writers_Parser.jumper
                                                                =
                                                                (fun rrel ->
                                                                   fun rel ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))) in
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    ->
                                                                    jumper ()
                                                                    () input
                                                                    uu___)
                                                            })))
                                                    (LowParse_Writers_Parser.Parser
                                                       ((),
                                                         {
                                                           LowParse_Writers_Parser.kind
                                                             =
                                                             {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                   then
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min));
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 (FStar_Pervasives_Native.Some
                                                                    (
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max))));
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata
                                                                  with
                                                                  | FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail)
                                                                    ->
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataFail
                                                                  | uu___ ->
                                                                    FStar_Pervasives_Native.None)
                                                             };
                                                           LowParse_Writers_Parser.parser
                                                             = ();
                                                           LowParse_Writers_Parser.serializer
                                                             = ();
                                                           LowParse_Writers_Parser.jumper
                                                             =
                                                             (fun rrel ->
                                                                fun rel ->
                                                                  fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                    FStar_UInt32.add
                                                                    pos uu___)
                                                         })) () () () () ()
                                                    (fun b ->
                                                       fun len ->
                                                         fun pos ->
                                                           let h =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let sl =
                                                             {
                                                               LowParse_Slice.base
                                                                 = b;
                                                               LowParse_Slice.len
                                                                 = len
                                                             } in
                                                           let size =
                                                             FStar_UInt32.sub
                                                               pos
                                                               (FStar_UInt32.uint_to_t
                                                                  (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                   then
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))) in
                                                           if
                                                             (FStar_UInt32.lte
                                                                min size)
                                                               &&
                                                               (FStar_UInt32.lte
                                                                  size max)
                                                           then
                                                             let uu___ =
                                                               (match 
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                  then
                                                                    Prims.int_one
                                                                  else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                with
                                                                | uu___1 when
                                                                    uu___1 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (
                                                                    fun x3 ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                                | uu___1 when
                                                                    uu___1 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (
                                                                    fun x3 ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                                | uu___1 when
                                                                    uu___1 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (
                                                                    fun x3 ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                                | uu___1 when
                                                                    uu___1 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (
                                                                    fun x3 ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1))
                                                                 size () ()
                                                                 (Obj.magic
                                                                    sl)
                                                                 (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                             let h1 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             LowParse_Writers_Effect.ICorrect
                                                               ((), pos)
                                                           else
                                                             LowParse_Writers_Effect.IError
                                                               "parse_vldata_intro_weak: out of bounds"))))
                                         uu___))) uu___)))
let (parse_vldata_intro_weak_ho' :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit ->
             (unit, unit, unit, unit, unit, unit, unit)
               LowParse_Writers_Effect.repr)
            ->
            (unit, unit, unit, unit, unit, unit, unit)
              LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun f ->
            LowParse_Writers_Effect.Repr
              ((),
                (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                   (Obj.magic ()) () () () (Obj.magic ()) () () () () () ()
                   (Obj.magic
                      (LowParse_Writers_Effect.lift_read_impl ()
                         (Obj.magic ())
                         (Obj.magic
                            (LowParse_Writers_Effect.ReadRepr
                               ((),
                                 (LowParse_Writers_Effect.lift_pure_read_impl
                                    (fun uu___ ->
                                       if
                                         FStar_UInt32.lt max
                                           (FStar_UInt32.uint_to_t
                                              (Prims.of_int (256)))
                                       then
                                         FStar_UInt32.uint_to_t Prims.int_one
                                       else
                                         if
                                           FStar_UInt32.lt max
                                             (FStar_UInt32.uint_to_t
                                                (Prims.parse_int "65536"))
                                         then
                                           FStar_UInt32.uint_to_t
                                             (Prims.of_int (2))
                                         else
                                           if
                                             FStar_UInt32.lt max
                                               (FStar_UInt32.uint_to_t
                                                  (Prims.parse_int "16777216"))
                                           then
                                             FStar_UInt32.uint_to_t
                                               (Prims.of_int (3))
                                           else
                                             FStar_UInt32.uint_to_t
                                               (Prims.of_int (4))) ()))))))
                   (fun uu___ ->
                      (fun x ->
                         Obj.magic
                           (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                              (Obj.magic ()) () () () (Obj.magic ()) () () ()
                              () () ()
                              (Obj.magic
                                 (LowParse_Writers_Effect.elem_writer_impl
                                    (LowParse_Writers_Parser.Parser
                                       ((),
                                         (Obj.magic
                                            {
                                              LowParse_Writers_Parser.kind =
                                                {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = (FStar_UInt32.v x);
                                                  LowParse_Spec_Base.parser_kind_high
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       (FStar_UInt32.v x));
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong);
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserKindMetadataTotal)
                                                };
                                              LowParse_Writers_Parser.parser
                                                = ();
                                              LowParse_Writers_Parser.serializer
                                                = ();
                                              LowParse_Writers_Parser.jumper
                                                =
                                                (fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos ->
                                                         let h =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add pos
                                                           x)
                                            })))
                                    (fun uu___2 ->
                                       fun uu___1 ->
                                         fun uu___ ->
                                           (if
                                              (FStar_UInt32.v x) >
                                                (Prims.parse_int "4294967295")
                                            then
                                              fun b ->
                                                fun len ->
                                                  fun x1 ->
                                                    let x1 = Obj.magic x1 in
                                                    Obj.magic
                                                      FStar_Pervasives_Native.None
                                            else
                                              (fun b ->
                                                 fun len ->
                                                   fun x1 ->
                                                     let x1 = Obj.magic x1 in
                                                     if
                                                       FStar_UInt32.lt len
                                                         (FStar_UInt32.uint_to_t
                                                            (FStar_UInt32.v x))
                                                     then
                                                       Obj.magic
                                                         FStar_Pervasives_Native.None
                                                     else
                                                       (let uu___2 =
                                                          if
                                                            x =
                                                              (FStar_UInt32.uint_to_t
                                                                 Prims.int_one)
                                                          then
                                                            let h0 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let len1 =
                                                              LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                () x1 () ()
                                                                (Obj.magic b)
                                                                (FStar_UInt32.uint_to_t
                                                                   Prims.int_zero) in
                                                            let h =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            FStar_UInt32.add
                                                              (FStar_UInt32.uint_to_t
                                                                 Prims.int_zero)
                                                              len1
                                                          else
                                                            if
                                                              x =
                                                                (FStar_UInt32.uint_to_t
                                                                   (Prims.of_int (2)))
                                                            then
                                                              (let h0 =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               let len1 =
                                                                 LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                   () x1 ()
                                                                   ()
                                                                   (Obj.magic
                                                                    b)
                                                                   (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                               let h =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               FStar_UInt32.add
                                                                 (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                 len1)
                                                            else
                                                              if
                                                                x =
                                                                  (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3)))
                                                              then
                                                                (let h0 =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 let len1 =
                                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 FStar_UInt32.add
                                                                   (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                   len1)
                                                              else
                                                                (let h0 =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 let len1 =
                                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x1 ()
                                                                    ()
                                                                    (Obj.magic
                                                                    b)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 FStar_UInt32.add
                                                                   (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                   len1) in
                                                        Obj.magic
                                                          (FStar_Pervasives_Native.Some
                                                             uu___2))))
                                             uu___2 uu___1 uu___) ()
                                    (Obj.magic
                                       (FStar_UInt32.uint_to_t Prims.int_zero))))
                              (fun uu___ ->
                                 (fun x1 ->
                                    Obj.magic
                                      (LowParse_Writers_Effect.bind_impl
                                         (Obj.magic ()) (Obj.magic ()) () ()
                                         () (Obj.magic ()) () () () () () ()
                                         (LowParse_Writers_Effect.frame_impl
                                            (LowParse_Writers_Parser.Parser
                                               ((),
                                                 (Obj.magic
                                                    {
                                                      LowParse_Writers_Parser.kind
                                                        =
                                                        {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            =
                                                            (FStar_UInt32.v
                                                               (if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))));
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               (FStar_UInt32.v
                                                                  (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))));
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserStrong);
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserKindMetadataTotal)
                                                        };
                                                      LowParse_Writers_Parser.parser
                                                        = ();
                                                      LowParse_Writers_Parser.serializer
                                                        = ();
                                                      LowParse_Writers_Parser.jumper
                                                        =
                                                        (fun rrel ->
                                                           fun rel ->
                                                             fun input ->
                                                               fun pos ->
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 FStar_UInt32.add
                                                                   pos
                                                                   (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                    }))) () p () () ()
                                            (fun uu___ ->
                                               LowParse_Writers_Effect.Repr
                                                 ((),
                                                   (Obj.magic
                                                      (LowParse_Writers_Effect.recast_writer_impl
                                                         (LowParse_Writers_Parser.Parser
                                                            ((),
                                                              (Obj.magic
                                                                 {
                                                                   LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    Prims.int_zero;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal)
                                                                    };
                                                                   LowParse_Writers_Parser.parser
                                                                    = ();
                                                                   LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                   LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero))
                                                                 }))) p () ()
                                                         () () f)))))
                                         (fun x2 ->
                                            LowParse_Writers_Effect.mk_repr_impl
                                              (LowParse_Writers_Parser.Parser
                                                 ((),
                                                   (Obj.magic
                                                      {
                                                        LowParse_Writers_Parser.kind
                                                          =
                                                          {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              ((FStar_UInt32.v
                                                                  (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                 +
                                                                 (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low));
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              (if
                                                                 match 
                                                                   match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                 with
                                                                 | FStar_Pervasives_Native.Some
                                                                    uu___ ->
                                                                    true
                                                                 | uu___ ->
                                                                    false
                                                               then
                                                                 FStar_Pervasives_Native.Some
                                                                   ((FStar_UInt32.v
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                    +
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                               else
                                                                 FStar_Pervasives_Native.None);
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              (if
                                                                 (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                   =
                                                                   (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll)
                                                               then
                                                                 FStar_Pervasives_Native.Some
                                                                   LowParse_Spec_Base.ParserConsumesAll
                                                               else
                                                                 if
                                                                   (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                 then
                                                                   FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                 else
                                                                   if
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero)
                                                                    then
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    else
                                                                    false)
                                                                   then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                   else
                                                                    FStar_Pervasives_Native.None);
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              (match 
                                                                 ((FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                   (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata))
                                                               with
                                                               | (FStar_Pervasives_Native.Some
                                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                                  uu___) ->
                                                                   FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal
                                                               | (uu___,
                                                                  FStar_Pervasives_Native.Some
                                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                                   ->
                                                                   (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata)
                                                               | (FStar_Pervasives_Native.Some
                                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                  FStar_Pervasives_Native.Some
                                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                                   ->
                                                                   FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal
                                                               | uu___ ->
                                                                   FStar_Pervasives_Native.None)
                                                          };
                                                        LowParse_Writers_Parser.parser
                                                          = ();
                                                        LowParse_Writers_Parser.serializer
                                                          = ();
                                                        LowParse_Writers_Parser.jumper
                                                          =
                                                          (fun rrel ->
                                                             fun rel ->
                                                               fun input ->
                                                                 fun pos ->
                                                                   let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                   let uu___
                                                                    =
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos
                                                                    (if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))) in
                                                                   match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    ->
                                                                    jumper ()
                                                                    () input
                                                                    uu___)
                                                      })))
                                              (LowParse_Writers_Parser.Parser
                                                 ((),
                                                   {
                                                     LowParse_Writers_Parser.kind
                                                       =
                                                       {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           =
                                                           ((if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4)))
                                                              +
                                                              (if
                                                                 (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                   >
                                                                   (FStar_UInt32.v
                                                                    min)
                                                               then
                                                                 match 
                                                                   match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                               else
                                                                 FStar_UInt32.v
                                                                   min));
                                                         LowParse_Spec_Base.parser_kind_high
                                                           =
                                                           (FStar_Pervasives_Native.Some
                                                              ((if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                then
                                                                  Prims.int_one
                                                                else
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                  then
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                 +
                                                                 (if
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                  then
                                                                    (
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                  else
                                                                    (
                                                                    match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max))));
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           (FStar_Pervasives_Native.Some
                                                              LowParse_Spec_Base.ParserStrong);
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           (match match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata
                                                            with
                                                            | FStar_Pervasives_Native.Some
                                                                (LowParse_Spec_Base.ParserKindMetadataFail)
                                                                ->
                                                                FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserKindMetadataFail
                                                            | uu___ ->
                                                                FStar_Pervasives_Native.None)
                                                       };
                                                     LowParse_Writers_Parser.parser
                                                       = ();
                                                     LowParse_Writers_Parser.serializer
                                                       = ();
                                                     LowParse_Writers_Parser.jumper
                                                       =
                                                       (fun rrel ->
                                                          fun rel ->
                                                            fun input ->
                                                              fun pos ->
                                                                let h =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                let h1 =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                let h2 =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                let uu___ =
                                                                  let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                  FStar_UInt32.add
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                FStar_UInt32.add
                                                                  pos uu___)
                                                   })) () () () () ()
                                              (fun b ->
                                                 fun len ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let sl =
                                                       {
                                                         LowParse_Slice.base
                                                           = b;
                                                         LowParse_Slice.len =
                                                           len
                                                       } in
                                                     let size =
                                                       FStar_UInt32.sub pos
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4)))) in
                                                     if
                                                       (FStar_UInt32.lte min
                                                          size)
                                                         &&
                                                         (FStar_UInt32.lte
                                                            size max)
                                                     then
                                                       let uu___ =
                                                         (match if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                then
                                                                  Prims.int_one
                                                                else
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                  then
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                          with
                                                          | uu___1 when
                                                              uu___1 =
                                                                Prims.int_one
                                                              ->
                                                              (fun x3 ->
                                                                 fun rrel ->
                                                                   fun rel ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                          | uu___1 when
                                                              uu___1 =
                                                                (Prims.of_int (2))
                                                              ->
                                                              (fun x3 ->
                                                                 fun rrel ->
                                                                   fun rel ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                          | uu___1 when
                                                              uu___1 =
                                                                (Prims.of_int (3))
                                                              ->
                                                              (fun x3 ->
                                                                 fun rrel ->
                                                                   fun rel ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                          | uu___1 when
                                                              uu___1 =
                                                                (Prims.of_int (4))
                                                              ->
                                                              (fun x3 ->
                                                                 fun rrel ->
                                                                   fun rel ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x3 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1))
                                                           size () ()
                                                           (Obj.magic sl)
                                                           (FStar_UInt32.uint_to_t
                                                              Prims.int_zero) in
                                                       let h1 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       LowParse_Writers_Effect.ICorrect
                                                         ((), pos)
                                                     else
                                                       LowParse_Writers_Effect.IError
                                                         "parse_vldata_intro_weak: out of bounds"))))
                                   uu___))) uu___)))
let (parse_vldata_intro_weak_frame :
  unit ->
    LowParse_Writers_Parser.parser ->
      LowParse_Writers_Parser.parser ->
        FStar_UInt32.t ->
          FStar_UInt32.t ->
            (unit, unit, unit, unit, unit, unit, unit)
              LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun frame ->
      fun p ->
        fun min ->
          fun max ->
            LowParse_Writers_Effect.Repr
              ((),
                (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                   (Obj.magic ()) () () () (Obj.magic ()) () () () () () ()
                   (Obj.magic
                      (LowParse_Writers_Effect.valid_rewrite_impl
                         (LowParse_Writers_Parser.Parser
                            ((),
                              (Obj.magic
                                 {
                                   LowParse_Writers_Parser.kind =
                                     {
                                       LowParse_Spec_Base.parser_kind_low =
                                         (((match match match frame with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low)
                                             +
                                             (FStar_UInt32.v
                                                (if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.of_int (256)))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     Prims.int_one
                                                 else
                                                   if
                                                     FStar_UInt32.lt max
                                                       (FStar_UInt32.uint_to_t
                                                          (Prims.parse_int "65536"))
                                                   then
                                                     FStar_UInt32.uint_to_t
                                                       (Prims.of_int (2))
                                                   else
                                                     if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.parse_int "16777216"))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (3))
                                                     else
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (4)))))
                                            +
                                            (match match match p with
                                                         | LowParse_Writers_Parser.Parser
                                                             (t, p1) -> p1
                                                   with
                                                   | {
                                                       LowParse_Writers_Parser.kind
                                                         = kind;
                                                       LowParse_Writers_Parser.parser
                                                         = parser;
                                                       LowParse_Writers_Parser.serializer
                                                         = serializer;
                                                       LowParse_Writers_Parser.jumper
                                                         = jumper;_}
                                                       -> kind
                                             with
                                             | {
                                                 LowParse_Spec_Base.parser_kind_low
                                                   = parser_kind_low;
                                                 LowParse_Spec_Base.parser_kind_high
                                                   = parser_kind_high;
                                                 LowParse_Spec_Base.parser_kind_subkind
                                                   = parser_kind_subkind;
                                                 LowParse_Spec_Base.parser_kind_metadata
                                                   = parser_kind_metadata;_}
                                                 -> parser_kind_low));
                                       LowParse_Spec_Base.parser_kind_high =
                                         (if
                                            (if
                                               match if
                                                       (if
                                                          match match 
                                                                  match 
                                                                    match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                with
                                                                | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                          with
                                                          | FStar_Pervasives_Native.Some
                                                              uu___ -> true
                                                          | uu___ -> false
                                                        then true
                                                        else false)
                                                     then
                                                       FStar_Pervasives_Native.Some
                                                         ((match match 
                                                                   match 
                                                                    match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                           with
                                                           | FStar_Pervasives_Native.Some
                                                               y -> y)
                                                            +
                                                            (FStar_UInt32.v
                                                               (if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))))
                                                     else
                                                       FStar_Pervasives_Native.None
                                               with
                                               | FStar_Pervasives_Native.Some
                                                   uu___ -> true
                                               | uu___ -> false
                                             then
                                               match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.Some
                                                   uu___ -> true
                                               | uu___ -> false
                                             else false)
                                          then
                                            FStar_Pervasives_Native.Some
                                              ((match if
                                                        (if
                                                           match match 
                                                                   match 
                                                                    match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                           with
                                                           | FStar_Pervasives_Native.Some
                                                               uu___ -> true
                                                           | uu___ -> false
                                                         then true
                                                         else false)
                                                      then
                                                        FStar_Pervasives_Native.Some
                                                          ((match match 
                                                                    match 
                                                                    match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                            with
                                                            | FStar_Pervasives_Native.Some
                                                                y -> y)
                                                             +
                                                             (FStar_UInt32.v
                                                                (if
                                                                   FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                 then
                                                                   FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                 else
                                                                   if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                   else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))))
                                                      else
                                                        FStar_Pervasives_Native.None
                                                with
                                                | FStar_Pervasives_Native.Some
                                                    y -> y)
                                                 +
                                                 (match match match match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_high
                                                  with
                                                  | FStar_Pervasives_Native.Some
                                                      y -> y))
                                          else FStar_Pervasives_Native.None);
                                       LowParse_Spec_Base.parser_kind_subkind
                                         =
                                         (if
                                            (match match match p with
                                                         | LowParse_Writers_Parser.Parser
                                                             (t, p1) -> p1
                                                   with
                                                   | {
                                                       LowParse_Writers_Parser.kind
                                                         = kind;
                                                       LowParse_Writers_Parser.parser
                                                         = parser;
                                                       LowParse_Writers_Parser.serializer
                                                         = serializer;
                                                       LowParse_Writers_Parser.jumper
                                                         = jumper;_}
                                                       -> kind
                                             with
                                             | {
                                                 LowParse_Spec_Base.parser_kind_low
                                                   = parser_kind_low;
                                                 LowParse_Spec_Base.parser_kind_high
                                                   = parser_kind_high;
                                                 LowParse_Spec_Base.parser_kind_subkind
                                                   = parser_kind_subkind;
                                                 LowParse_Spec_Base.parser_kind_metadata
                                                   = parser_kind_metadata;_}
                                                 -> parser_kind_subkind)
                                              =
                                              (FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserConsumesAll)
                                          then
                                            FStar_Pervasives_Native.Some
                                              LowParse_Spec_Base.ParserConsumesAll
                                          else
                                            if
                                              (if
                                                 (if
                                                    (if
                                                       (match match match frame
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_subkind)
                                                         =
                                                         (FStar_Pervasives_Native.Some
                                                            LowParse_Spec_Base.ParserStrong)
                                                     then true
                                                     else false)
                                                  then
                                                    FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong
                                                  else
                                                    if
                                                      (if
                                                         (FStar_Pervasives_Native.Some
                                                            (FStar_UInt32.v
                                                               (if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))))
                                                           =
                                                           (FStar_Pervasives_Native.Some
                                                              Prims.int_zero)
                                                       then true
                                                       else false)
                                                    then
                                                      (match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                    else
                                                      FStar_Pervasives_Native.None)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               then
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_subkind)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               else false)
                                            then
                                              FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserStrong
                                            else
                                              if
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_high)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        Prims.int_zero)
                                                 then
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_subkind)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserStrong)
                                                 else false)
                                              then
                                                (if
                                                   (if
                                                      (match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserStrong)
                                                    then true
                                                    else false)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserStrong
                                                 else
                                                   if
                                                     (if
                                                        (FStar_Pervasives_Native.Some
                                                           (FStar_UInt32.v
                                                              (if
                                                                 FStar_UInt32.lt
                                                                   max
                                                                   (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                               then
                                                                 FStar_UInt32.uint_to_t
                                                                   Prims.int_one
                                                               else
                                                                 if
                                                                   FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                 then
                                                                   FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4)))))
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             Prims.int_zero)
                                                      then true
                                                      else false)
                                                   then
                                                     (match match match frame
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_subkind)
                                                   else
                                                     FStar_Pervasives_Native.None)
                                              else
                                                FStar_Pervasives_Native.None);
                                       LowParse_Spec_Base.parser_kind_metadata
                                         =
                                         (match ((match ((match match 
                                                                  match frame
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_metadata),
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserKindMetadataTotal))
                                                  with
                                                  | (FStar_Pervasives_Native.Some
                                                     (LowParse_Spec_Base.ParserKindMetadataFail),
                                                     uu___) ->
                                                      (match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_metadata)
                                                  | (uu___,
                                                     FStar_Pervasives_Native.Some
                                                     (LowParse_Spec_Base.ParserKindMetadataFail))
                                                      ->
                                                      FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserKindMetadataTotal
                                                  | (FStar_Pervasives_Native.Some
                                                     (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                     FStar_Pervasives_Native.Some
                                                     (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                      ->
                                                      (match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_metadata)
                                                  | uu___ ->
                                                      FStar_Pervasives_Native.None),
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       ->
                                                       parser_kind_metadata))
                                          with
                                          | (FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataFail),
                                             uu___) ->
                                              (match ((match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_metadata),
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserKindMetadataTotal))
                                               with
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                  uu___1) ->
                                                   (match match match frame
                                                                with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | (uu___1,
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                   ->
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserKindMetadataTotal
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                   ->
                                                   (match match match frame
                                                                with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | uu___1 ->
                                                   FStar_Pervasives_Native.None)
                                          | (uu___,
                                             FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataFail))
                                              ->
                                              (match match match p with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         -> kind
                                               with
                                               | {
                                                   LowParse_Spec_Base.parser_kind_low
                                                     = parser_kind_low;
                                                   LowParse_Spec_Base.parser_kind_high
                                                     = parser_kind_high;
                                                   LowParse_Spec_Base.parser_kind_subkind
                                                     = parser_kind_subkind;
                                                   LowParse_Spec_Base.parser_kind_metadata
                                                     = parser_kind_metadata;_}
                                                   -> parser_kind_metadata)
                                          | (FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataTotal),
                                             FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataTotal))
                                              ->
                                              (match ((match match match frame
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_metadata),
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserKindMetadataTotal))
                                               with
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                  uu___) ->
                                                   (match match match frame
                                                                with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | (uu___,
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                   ->
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserKindMetadataTotal
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                   ->
                                                   (match match match frame
                                                                with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | uu___ ->
                                                   FStar_Pervasives_Native.None)
                                          | uu___ ->
                                              FStar_Pervasives_Native.None)
                                     };
                                   LowParse_Writers_Parser.parser = ();
                                   LowParse_Writers_Parser.serializer = ();
                                   LowParse_Writers_Parser.jumper =
                                     (fun rrel ->
                                        fun rel ->
                                          fun input ->
                                            fun pos ->
                                              let h =
                                                FStar_HyperStack_ST.get () in
                                              let uu___ =
                                                let h1 =
                                                  FStar_HyperStack_ST.get () in
                                                let uu___1 =
                                                  match match frame with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      ->
                                                      jumper () () input pos in
                                                let h2 =
                                                  FStar_HyperStack_ST.get () in
                                                FStar_UInt32.add uu___1
                                                  (if
                                                     FStar_UInt32.lt max
                                                       (FStar_UInt32.uint_to_t
                                                          (Prims.of_int (256)))
                                                   then
                                                     FStar_UInt32.uint_to_t
                                                       Prims.int_one
                                                   else
                                                     if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.parse_int "65536"))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (2))
                                                     else
                                                       if
                                                         FStar_UInt32.lt max
                                                           (FStar_UInt32.uint_to_t
                                                              (Prims.parse_int "16777216"))
                                                       then
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (3))
                                                       else
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (4))) in
                                              match match p with
                                                    | LowParse_Writers_Parser.Parser
                                                        (t, p1) -> p1
                                              with
                                              | {
                                                  LowParse_Writers_Parser.kind
                                                    = kind;
                                                  LowParse_Writers_Parser.parser
                                                    = parser;
                                                  LowParse_Writers_Parser.serializer
                                                    = serializer;
                                                  LowParse_Writers_Parser.jumper
                                                    = jumper;_}
                                                  -> jumper () () input uu___)
                                 })))
                         (LowParse_Writers_Parser.Parser
                            ((),
                              (Obj.magic
                                 {
                                   LowParse_Writers_Parser.kind =
                                     {
                                       LowParse_Spec_Base.parser_kind_low =
                                         ((match match match frame with
                                                       | LowParse_Writers_Parser.Parser
                                                           (t, p1) -> p1
                                                 with
                                                 | {
                                                     LowParse_Writers_Parser.kind
                                                       = kind;
                                                     LowParse_Writers_Parser.parser
                                                       = parser;
                                                     LowParse_Writers_Parser.serializer
                                                       = serializer;
                                                     LowParse_Writers_Parser.jumper
                                                       = jumper;_}
                                                     -> kind
                                           with
                                           | {
                                               LowParse_Spec_Base.parser_kind_low
                                                 = parser_kind_low;
                                               LowParse_Spec_Base.parser_kind_high
                                                 = parser_kind_high;
                                               LowParse_Spec_Base.parser_kind_subkind
                                                 = parser_kind_subkind;
                                               LowParse_Spec_Base.parser_kind_metadata
                                                 = parser_kind_metadata;_}
                                               -> parser_kind_low)
                                            +
                                            ((FStar_UInt32.v
                                                (if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.of_int (256)))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     Prims.int_one
                                                 else
                                                   if
                                                     FStar_UInt32.lt max
                                                       (FStar_UInt32.uint_to_t
                                                          (Prims.parse_int "65536"))
                                                   then
                                                     FStar_UInt32.uint_to_t
                                                       (Prims.of_int (2))
                                                   else
                                                     if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.parse_int "16777216"))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (3))
                                                     else
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (4))))
                                               +
                                               (match match match p with
                                                            | LowParse_Writers_Parser.Parser
                                                                (t, p1) -> p1
                                                      with
                                                      | {
                                                          LowParse_Writers_Parser.kind
                                                            = kind;
                                                          LowParse_Writers_Parser.parser
                                                            = parser;
                                                          LowParse_Writers_Parser.serializer
                                                            = serializer;
                                                          LowParse_Writers_Parser.jumper
                                                            = jumper;_}
                                                          -> kind
                                                with
                                                | {
                                                    LowParse_Spec_Base.parser_kind_low
                                                      = parser_kind_low;
                                                    LowParse_Spec_Base.parser_kind_high
                                                      = parser_kind_high;
                                                    LowParse_Spec_Base.parser_kind_subkind
                                                      = parser_kind_subkind;
                                                    LowParse_Spec_Base.parser_kind_metadata
                                                      = parser_kind_metadata;_}
                                                    -> parser_kind_low)));
                                       LowParse_Spec_Base.parser_kind_high =
                                         (if
                                            (if
                                               match match match match frame
                                                                 with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.Some
                                                   uu___ -> true
                                               | uu___ -> false
                                             then
                                               match if
                                                       match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.Some
                                                           uu___ -> true
                                                       | uu___ -> false
                                                     then
                                                       FStar_Pervasives_Native.Some
                                                         ((FStar_UInt32.v
                                                             (if
                                                                FStar_UInt32.lt
                                                                  max
                                                                  (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                              then
                                                                FStar_UInt32.uint_to_t
                                                                  Prims.int_one
                                                              else
                                                                if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                  else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                            +
                                                            (match match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                             with
                                                             | FStar_Pervasives_Native.Some
                                                                 y -> y))
                                                     else
                                                       FStar_Pervasives_Native.None
                                               with
                                               | FStar_Pervasives_Native.Some
                                                   uu___ -> true
                                               | uu___ -> false
                                             else false)
                                          then
                                            FStar_Pervasives_Native.Some
                                              ((match match match match frame
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          -> parser_kind_high
                                                with
                                                | FStar_Pervasives_Native.Some
                                                    y -> y)
                                                 +
                                                 (match if
                                                          match match 
                                                                  match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                with
                                                                | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                          with
                                                          | FStar_Pervasives_Native.Some
                                                              uu___ -> true
                                                          | uu___ -> false
                                                        then
                                                          FStar_Pervasives_Native.Some
                                                            ((FStar_UInt32.v
                                                                (if
                                                                   FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                 then
                                                                   FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                 else
                                                                   if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                   then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                   else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                               +
                                                               (match 
                                                                  match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                with
                                                                | FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                        else
                                                          FStar_Pervasives_Native.None
                                                  with
                                                  | FStar_Pervasives_Native.Some
                                                      y -> y))
                                          else FStar_Pervasives_Native.None);
                                       LowParse_Spec_Base.parser_kind_subkind
                                         =
                                         (if
                                            (if
                                               (match match match p with
                                                            | LowParse_Writers_Parser.Parser
                                                                (t, p1) -> p1
                                                      with
                                                      | {
                                                          LowParse_Writers_Parser.kind
                                                            = kind;
                                                          LowParse_Writers_Parser.parser
                                                            = parser;
                                                          LowParse_Writers_Parser.serializer
                                                            = serializer;
                                                          LowParse_Writers_Parser.jumper
                                                            = jumper;_}
                                                          -> kind
                                                with
                                                | {
                                                    LowParse_Spec_Base.parser_kind_low
                                                      = parser_kind_low;
                                                    LowParse_Spec_Base.parser_kind_high
                                                      = parser_kind_high;
                                                    LowParse_Spec_Base.parser_kind_subkind
                                                      = parser_kind_subkind;
                                                    LowParse_Spec_Base.parser_kind_metadata
                                                      = parser_kind_metadata;_}
                                                    -> parser_kind_subkind)
                                                 =
                                                 (FStar_Pervasives_Native.Some
                                                    LowParse_Spec_Base.ParserConsumesAll)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserConsumesAll
                                             else
                                               if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_subkind)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               then
                                                 FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserStrong
                                               else
                                                 if
                                                   (if
                                                      (match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           Prims.int_zero)
                                                    then
                                                      (match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserStrong)
                                                    else false)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserStrong
                                                 else
                                                   FStar_Pervasives_Native.None)
                                              =
                                              (FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserConsumesAll)
                                          then
                                            FStar_Pervasives_Native.Some
                                              LowParse_Spec_Base.ParserConsumesAll
                                          else
                                            if
                                              (if
                                                 (match match match frame
                                                              with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_subkind)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               then
                                                 (if
                                                    (match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         ->
                                                         parser_kind_subkind)
                                                      =
                                                      (FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserConsumesAll)
                                                  then
                                                    FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserConsumesAll
                                                  else
                                                    if
                                                      (match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserStrong)
                                                    then
                                                      FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserStrong
                                                    else
                                                      if
                                                        (if
                                                           (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_high)
                                                             =
                                                             (FStar_Pervasives_Native.Some
                                                                Prims.int_zero)
                                                         then
                                                           (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_subkind)
                                                             =
                                                             (FStar_Pervasives_Native.Some
                                                                LowParse_Spec_Base.ParserStrong)
                                                         else false)
                                                      then
                                                        FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong
                                                      else
                                                        FStar_Pervasives_Native.None)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong)
                                               else false)
                                            then
                                              FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserStrong
                                            else
                                              if
                                                (if
                                                   (if
                                                      match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_high
                                                      with
                                                      | FStar_Pervasives_Native.Some
                                                          uu___2 -> true
                                                      | uu___2 -> false
                                                    then
                                                      FStar_Pervasives_Native.Some
                                                        ((FStar_UInt32.v
                                                            (if
                                                               FStar_UInt32.lt
                                                                 max
                                                                 (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                             then
                                                               FStar_UInt32.uint_to_t
                                                                 Prims.int_one
                                                             else
                                                               if
                                                                 FStar_UInt32.lt
                                                                   max
                                                                   (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                               then
                                                                 FStar_UInt32.uint_to_t
                                                                   (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                 then
                                                                   FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                 else
                                                                   FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                           +
                                                           (match match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                  with
                                                                  | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                            with
                                                            | FStar_Pervasives_Native.Some
                                                                y -> y))
                                                    else
                                                      FStar_Pervasives_Native.None)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        Prims.int_zero)
                                                 then
                                                   (if
                                                      (match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_subkind)
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserConsumesAll)
                                                    then
                                                      FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserConsumesAll
                                                    else
                                                      if
                                                        (match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_subkind)
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserStrong)
                                                      then
                                                        FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong
                                                      else
                                                        if
                                                          (if
                                                             (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                              with
                                                              | {
                                                                  LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                  LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                  LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                  LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                  ->
                                                                  parser_kind_high)
                                                               =
                                                               (FStar_Pervasives_Native.Some
                                                                  Prims.int_zero)
                                                           then
                                                             (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                              with
                                                              | {
                                                                  LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                  LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                  LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                  LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                  ->
                                                                  parser_kind_subkind)
                                                               =
                                                               (FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserStrong)
                                                           else false)
                                                        then
                                                          FStar_Pervasives_Native.Some
                                                            LowParse_Spec_Base.ParserStrong
                                                        else
                                                          FStar_Pervasives_Native.None)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserStrong)
                                                 else false)
                                              then
                                                (match match match frame with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_subkind)
                                              else
                                                FStar_Pervasives_Native.None);
                                       LowParse_Spec_Base.parser_kind_metadata
                                         =
                                         (match ((match match match frame
                                                              with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata),
                                                  (match ((FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserKindMetadataTotal),
                                                           (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_metadata))
                                                   with
                                                   | (FStar_Pervasives_Native.Some
                                                      (LowParse_Spec_Base.ParserKindMetadataFail),
                                                      uu___) ->
                                                       FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserKindMetadataTotal
                                                   | (uu___,
                                                      FStar_Pervasives_Native.Some
                                                      (LowParse_Spec_Base.ParserKindMetadataFail))
                                                       ->
                                                       (match match match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_metadata)
                                                   | (FStar_Pervasives_Native.Some
                                                      (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                      FStar_Pervasives_Native.Some
                                                      (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                       ->
                                                       FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserKindMetadataTotal
                                                   | uu___ ->
                                                       FStar_Pervasives_Native.None))
                                          with
                                          | (FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataFail),
                                             uu___) ->
                                              (match match match frame with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         -> kind
                                               with
                                               | {
                                                   LowParse_Spec_Base.parser_kind_low
                                                     = parser_kind_low;
                                                   LowParse_Spec_Base.parser_kind_high
                                                     = parser_kind_high;
                                                   LowParse_Spec_Base.parser_kind_subkind
                                                     = parser_kind_subkind;
                                                   LowParse_Spec_Base.parser_kind_metadata
                                                     = parser_kind_metadata;_}
                                                   -> parser_kind_metadata)
                                          | (uu___,
                                             FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataFail))
                                              ->
                                              (match ((FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserKindMetadataTotal),
                                                       (match match match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_metadata))
                                               with
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                  uu___1) ->
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserKindMetadataTotal
                                               | (uu___1,
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                   ->
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                   ->
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserKindMetadataTotal
                                               | uu___1 ->
                                                   FStar_Pervasives_Native.None)
                                          | (FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataTotal),
                                             FStar_Pervasives_Native.Some
                                             (LowParse_Spec_Base.ParserKindMetadataTotal))
                                              ->
                                              (match match match frame with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         -> kind
                                               with
                                               | {
                                                   LowParse_Spec_Base.parser_kind_low
                                                     = parser_kind_low;
                                                   LowParse_Spec_Base.parser_kind_high
                                                     = parser_kind_high;
                                                   LowParse_Spec_Base.parser_kind_subkind
                                                     = parser_kind_subkind;
                                                   LowParse_Spec_Base.parser_kind_metadata
                                                     = parser_kind_metadata;_}
                                                   -> parser_kind_metadata)
                                          | uu___ ->
                                              FStar_Pervasives_Native.None)
                                     };
                                   LowParse_Writers_Parser.parser = ();
                                   LowParse_Writers_Parser.serializer = ();
                                   LowParse_Writers_Parser.jumper =
                                     (fun rrel ->
                                        fun rel ->
                                          fun input ->
                                            fun pos ->
                                              let h =
                                                FStar_HyperStack_ST.get () in
                                              let uu___ =
                                                match match frame with
                                                      | LowParse_Writers_Parser.Parser
                                                          (t, p1) -> p1
                                                with
                                                | {
                                                    LowParse_Writers_Parser.kind
                                                      = kind;
                                                    LowParse_Writers_Parser.parser
                                                      = parser;
                                                    LowParse_Writers_Parser.serializer
                                                      = serializer;
                                                    LowParse_Writers_Parser.jumper
                                                      = jumper;_}
                                                    -> jumper () () input pos in
                                              let h1 =
                                                FStar_HyperStack_ST.get () in
                                              let uu___1 =
                                                let h2 =
                                                  FStar_HyperStack_ST.get () in
                                                FStar_UInt32.add uu___
                                                  (if
                                                     FStar_UInt32.lt max
                                                       (FStar_UInt32.uint_to_t
                                                          (Prims.of_int (256)))
                                                   then
                                                     FStar_UInt32.uint_to_t
                                                       Prims.int_one
                                                   else
                                                     if
                                                       FStar_UInt32.lt max
                                                         (FStar_UInt32.uint_to_t
                                                            (Prims.parse_int "65536"))
                                                     then
                                                       FStar_UInt32.uint_to_t
                                                         (Prims.of_int (2))
                                                     else
                                                       if
                                                         FStar_UInt32.lt max
                                                           (FStar_UInt32.uint_to_t
                                                              (Prims.parse_int "16777216"))
                                                       then
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (3))
                                                       else
                                                         FStar_UInt32.uint_to_t
                                                           (Prims.of_int (4))) in
                                              match match p with
                                                    | LowParse_Writers_Parser.Parser
                                                        (t, p1) -> p1
                                              with
                                              | {
                                                  LowParse_Writers_Parser.kind
                                                    = kind;
                                                  LowParse_Writers_Parser.parser
                                                    = parser;
                                                  LowParse_Writers_Parser.serializer
                                                    = serializer;
                                                  LowParse_Writers_Parser.jumper
                                                    = jumper;_}
                                                  ->
                                                  jumper () () input uu___1)
                                 }))) () () () ()))
                   (fun x ->
                      LowParse_Writers_Effect.frame2_impl frame
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((FStar_UInt32.v
                                            (if
                                               FStar_UInt32.lt max
                                                 (FStar_UInt32.uint_to_t
                                                    (Prims.of_int (256)))
                                             then
                                               FStar_UInt32.uint_to_t
                                                 Prims.int_one
                                             else
                                               if
                                                 FStar_UInt32.lt max
                                                   (FStar_UInt32.uint_to_t
                                                      (Prims.parse_int "65536"))
                                               then
                                                 FStar_UInt32.uint_to_t
                                                   (Prims.of_int (2))
                                               else
                                                 if
                                                   FStar_UInt32.lt max
                                                     (FStar_UInt32.uint_to_t
                                                        (Prims.parse_int "16777216"))
                                                 then
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (3))
                                                 else
                                                   FStar_UInt32.uint_to_t
                                                     (Prims.of_int (4))))
                                           +
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (if
                                           match match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_high
                                           with
                                           | FStar_Pervasives_Native.Some
                                               uu___ -> true
                                           | uu___ -> false
                                         then
                                           FStar_Pervasives_Native.Some
                                             ((FStar_UInt32.v
                                                 (if
                                                    FStar_UInt32.lt max
                                                      (FStar_UInt32.uint_to_t
                                                         (Prims.of_int (256)))
                                                  then
                                                    FStar_UInt32.uint_to_t
                                                      Prims.int_one
                                                  else
                                                    if
                                                      FStar_UInt32.lt max
                                                        (FStar_UInt32.uint_to_t
                                                           (Prims.parse_int "65536"))
                                                    then
                                                      FStar_UInt32.uint_to_t
                                                        (Prims.of_int (2))
                                                    else
                                                      if
                                                        FStar_UInt32.lt max
                                                          (FStar_UInt32.uint_to_t
                                                             (Prims.parse_int "16777216"))
                                                      then
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (3))
                                                      else
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (4))))
                                                +
                                                (match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     y -> y))
                                         else FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_subkind)
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserConsumesAll)
                                         then
                                           FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserConsumesAll
                                         else
                                           if
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_subkind)
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong)
                                           then
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong
                                           else
                                             if
                                               (if
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_high)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       Prims.int_zero)
                                                then
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_subkind)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong)
                                                else false)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong
                                             else
                                               FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (match ((FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserKindMetadataTotal),
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata))
                                         with
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail),
                                            uu___) ->
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal
                                         | (uu___,
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail))
                                             ->
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_metadata)
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal),
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal))
                                             ->
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal
                                         | uu___ ->
                                             FStar_Pervasives_Native.None)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               FStar_UInt32.add pos
                                                 (if
                                                    FStar_UInt32.lt max
                                                      (FStar_UInt32.uint_to_t
                                                         (Prims.of_int (256)))
                                                  then
                                                    FStar_UInt32.uint_to_t
                                                      Prims.int_one
                                                  else
                                                    if
                                                      FStar_UInt32.lt max
                                                        (FStar_UInt32.uint_to_t
                                                           (Prims.parse_int "65536"))
                                                    then
                                                      FStar_UInt32.uint_to_t
                                                        (Prims.of_int (2))
                                                    else
                                                      if
                                                        FStar_UInt32.lt max
                                                          (FStar_UInt32.uint_to_t
                                                             (Prims.parse_int "16777216"))
                                                      then
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (3))
                                                      else
                                                        FStar_UInt32.uint_to_t
                                                          (Prims.of_int (4))) in
                                             match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper () () input uu___)
                                }))) ()
                        (LowParse_Writers_Parser.Parser
                           ((),
                             {
                               LowParse_Writers_Parser.kind =
                                 {
                                   LowParse_Spec_Base.parser_kind_low =
                                     ((if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))
                                        +
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low)
                                             > (FStar_UInt32.v min)
                                         then
                                           match match match p with
                                                       | LowParse_Writers_Parser.Parser
                                                           (t, p1) -> p1
                                                 with
                                                 | {
                                                     LowParse_Writers_Parser.kind
                                                       = kind;
                                                     LowParse_Writers_Parser.parser
                                                       = parser;
                                                     LowParse_Writers_Parser.serializer
                                                       = serializer;
                                                     LowParse_Writers_Parser.jumper
                                                       = jumper;_}
                                                     -> kind
                                           with
                                           | {
                                               LowParse_Spec_Base.parser_kind_low
                                                 = parser_kind_low;
                                               LowParse_Spec_Base.parser_kind_high
                                                 = parser_kind_high;
                                               LowParse_Spec_Base.parser_kind_subkind
                                                 = parser_kind_subkind;
                                               LowParse_Spec_Base.parser_kind_metadata
                                                 = parser_kind_metadata;_}
                                               -> parser_kind_low
                                         else FStar_UInt32.v min));
                                   LowParse_Spec_Base.parser_kind_high =
                                     (FStar_Pervasives_Native.Some
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max)
                                                <
                                                ((if
                                                    (match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_low)
                                                      > (FStar_UInt32.v min)
                                                  then
                                                    match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low
                                                  else FStar_UInt32.v min))
                                            then
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low)
                                                   > (FStar_UInt32.v min)
                                               then
                                                 match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_low
                                               else FStar_UInt32.v min)
                                            else
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max))));
                                   LowParse_Spec_Base.parser_kind_subkind =
                                     (FStar_Pervasives_Native.Some
                                        LowParse_Spec_Base.ParserStrong);
                                   LowParse_Spec_Base.parser_kind_metadata =
                                     (match match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_metadata
                                      with
                                      | FStar_Pervasives_Native.Some
                                          (LowParse_Spec_Base.ParserKindMetadataFail)
                                          ->
                                          FStar_Pervasives_Native.Some
                                            LowParse_Spec_Base.ParserKindMetadataFail
                                      | uu___ -> FStar_Pervasives_Native.None)
                                 };
                               LowParse_Writers_Parser.parser = ();
                               LowParse_Writers_Parser.serializer = ();
                               LowParse_Writers_Parser.jumper =
                                 (fun rrel ->
                                    fun rel ->
                                      fun input ->
                                        fun pos ->
                                          let h = FStar_HyperStack_ST.get () in
                                          let h1 = FStar_HyperStack_ST.get () in
                                          let h2 = FStar_HyperStack_ST.get () in
                                          let uu___ =
                                            let uu___1 =
                                              match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                     ()) () () input pos in
                                            FStar_UInt32.add
                                              (FStar_UInt32.uint_to_t
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))))
                                              uu___1 in
                                          FStar_UInt32.add pos uu___)
                             })) () () ()
                        (fun uu___ ->
                           (fun uu___ ->
                              Obj.magic
                                (LowParse_Writers_Effect.Repr
                                   ((),
                                     (Obj.magic
                                        (LowParse_Writers_Effect.mk_repr_impl
                                           (LowParse_Writers_Parser.Parser
                                              ((),
                                                (Obj.magic
                                                   {
                                                     LowParse_Writers_Parser.kind
                                                       =
                                                       {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           =
                                                           ((FStar_UInt32.v
                                                               (if
                                                                  FStar_UInt32.lt
                                                                    max
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                then
                                                                  FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                else
                                                                  if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                  then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                  else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                              +
                                                              (match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_low));
                                                         LowParse_Spec_Base.parser_kind_high
                                                           =
                                                           (if
                                                              match match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                              with
                                                              | FStar_Pervasives_Native.Some
                                                                  uu___1 ->
                                                                  true
                                                              | uu___1 ->
                                                                  false
                                                            then
                                                              FStar_Pervasives_Native.Some
                                                                ((FStar_UInt32.v
                                                                    (
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))))
                                                                   +
                                                                   (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                            else
                                                              FStar_Pervasives_Native.None);
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           (if
                                                              (match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_subkind)
                                                                =
                                                                (FStar_Pervasives_Native.Some
                                                                   LowParse_Spec_Base.ParserConsumesAll)
                                                            then
                                                              FStar_Pervasives_Native.Some
                                                                LowParse_Spec_Base.ParserConsumesAll
                                                            else
                                                              if
                                                                (match 
                                                                   match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                  =
                                                                  (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                              then
                                                                FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserStrong
                                                              else
                                                                if
                                                                  (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero)
                                                                   then
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                   else false)
                                                                then
                                                                  FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                else
                                                                  FStar_Pervasives_Native.None);
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           (match ((FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                    (
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata))
                                                            with
                                                            | (FStar_Pervasives_Native.Some
                                                               (LowParse_Spec_Base.ParserKindMetadataFail),
                                                               uu___1) ->
                                                                FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserKindMetadataTotal
                                                            | (uu___1,
                                                               FStar_Pervasives_Native.Some
                                                               (LowParse_Spec_Base.ParserKindMetadataFail))
                                                                ->
                                                                (match 
                                                                   match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                 with
                                                                 | {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata)
                                                            | (FStar_Pervasives_Native.Some
                                                               (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                               FStar_Pervasives_Native.Some
                                                               (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                                ->
                                                                FStar_Pervasives_Native.Some
                                                                  LowParse_Spec_Base.ParserKindMetadataTotal
                                                            | uu___1 ->
                                                                FStar_Pervasives_Native.None)
                                                       };
                                                     LowParse_Writers_Parser.parser
                                                       = ();
                                                     LowParse_Writers_Parser.serializer
                                                       = ();
                                                     LowParse_Writers_Parser.jumper
                                                       =
                                                       (fun rrel ->
                                                          fun rel ->
                                                            fun input ->
                                                              fun pos ->
                                                                let h =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                let uu___1 =
                                                                  let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                  FStar_UInt32.add
                                                                    pos
                                                                    (
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (256)))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "65536"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    FStar_UInt32.lt
                                                                    max
                                                                    (FStar_UInt32.uint_to_t
                                                                    (Prims.parse_int "16777216"))
                                                                    then
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    FStar_UInt32.uint_to_t
                                                                    (Prims.of_int (4))) in
                                                                match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    ->
                                                                    jumper ()
                                                                    () input
                                                                    uu___1)
                                                   })))
                                           (LowParse_Writers_Parser.Parser
                                              ((),
                                                {
                                                  LowParse_Writers_Parser.kind
                                                    =
                                                    {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        =
                                                        ((if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.of_int (256))
                                                          then Prims.int_one
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "65536")
                                                            then
                                                              (Prims.of_int (2))
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "16777216")
                                                              then
                                                                (Prims.of_int (3))
                                                              else
                                                                (Prims.of_int (4)))
                                                           +
                                                           (if
                                                              (match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_low)
                                                                >
                                                                (FStar_UInt32.v
                                                                   min)
                                                            then
                                                              match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                              with
                                                              | {
                                                                  LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                  LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                  LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                  LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                  ->
                                                                  parser_kind_low
                                                            else
                                                              FStar_UInt32.v
                                                                min));
                                                      LowParse_Spec_Base.parser_kind_high
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           ((if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4)))
                                                              +
                                                              (if
                                                                 (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                  with
                                                                  | FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                  | FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   ((
                                                                   if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                   then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                   else
                                                                    FStar_UInt32.v
                                                                    min))
                                                               then
                                                                 (if
                                                                    (match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low)
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                  then
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low
                                                                  else
                                                                    FStar_UInt32.v
                                                                    min)
                                                               else
                                                                 (match 
                                                                    match 
                                                                    match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                  with
                                                                  | FStar_Pervasives_Native.None
                                                                    ->
                                                                    FStar_UInt32.v
                                                                    max
                                                                  | FStar_Pervasives_Native.Some
                                                                    kmax ->
                                                                    if
                                                                    kmax <
                                                                    (FStar_UInt32.v
                                                                    max)
                                                                    then kmax
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max))));
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        =
                                                        (FStar_Pervasives_Native.Some
                                                           LowParse_Spec_Base.ParserStrong);
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        (match match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_metadata
                                                         with
                                                         | FStar_Pervasives_Native.Some
                                                             (LowParse_Spec_Base.ParserKindMetadataFail)
                                                             ->
                                                             FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserKindMetadataFail
                                                         | uu___1 ->
                                                             FStar_Pervasives_Native.None)
                                                    };
                                                  LowParse_Writers_Parser.parser
                                                    = ();
                                                  LowParse_Writers_Parser.serializer
                                                    = ();
                                                  LowParse_Writers_Parser.jumper
                                                    =
                                                    (fun rrel ->
                                                       fun rel ->
                                                         fun input ->
                                                           fun pos ->
                                                             let h =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let h1 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let h2 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let uu___1 =
                                                               let uu___2 =
                                                                 match 
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                   then
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                 with
                                                                 | uu___3
                                                                    when
                                                                    uu___3 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                 | uu___3
                                                                    when
                                                                    uu___3 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                 | uu___3
                                                                    when
                                                                    uu___3 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                 | uu___3
                                                                    when
                                                                    uu___3 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                               FStar_UInt32.add
                                                                 (FStar_UInt32.uint_to_t
                                                                    (
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                 uu___2 in
                                                             FStar_UInt32.add
                                                               pos uu___1)
                                                })) () () () () ()
                                           (fun b ->
                                              fun len ->
                                                fun pos ->
                                                  let h =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let sl =
                                                    {
                                                      LowParse_Slice.base = b;
                                                      LowParse_Slice.len =
                                                        len
                                                    } in
                                                  let size =
                                                    FStar_UInt32.sub pos
                                                      (FStar_UInt32.uint_to_t
                                                         (if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.of_int (256))
                                                          then Prims.int_one
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "65536")
                                                            then
                                                              (Prims.of_int (2))
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "16777216")
                                                              then
                                                                (Prims.of_int (3))
                                                              else
                                                                (Prims.of_int (4)))) in
                                                  if
                                                    (FStar_UInt32.lte min
                                                       size)
                                                      &&
                                                      (FStar_UInt32.lte size
                                                         max)
                                                  then
                                                    let uu___1 =
                                                      (match if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))
                                                       with
                                                       | uu___2 when
                                                           uu___2 =
                                                             Prims.int_one
                                                           ->
                                                           (fun x1 ->
                                                              fun rrel ->
                                                                fun rel ->
                                                                  fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x1 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (2))
                                                           ->
                                                           (fun x1 ->
                                                              fun rrel ->
                                                                fun rel ->
                                                                  fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x1 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (3))
                                                           ->
                                                           (fun x1 ->
                                                              fun rrel ->
                                                                fun rel ->
                                                                  fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x1 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1)
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (4))
                                                           ->
                                                           (fun x1 ->
                                                              fun rrel ->
                                                                fun rel ->
                                                                  fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h0 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x1 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos1 in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos1 len1))
                                                        size () ()
                                                        (Obj.magic sl)
                                                        (FStar_UInt32.uint_to_t
                                                           Prims.int_zero) in
                                                    let h1 =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    LowParse_Writers_Effect.ICorrect
                                                      ((), pos)
                                                  else
                                                    LowParse_Writers_Effect.IError
                                                      "parse_vldata_intro_weak: out of bounds"))))))
                             uu___))))

let (parse_vldata_recast_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          FStar_UInt32.t ->
            FStar_UInt32.t ->
              (unit, unit, unit, Prims.l_True, unit, unit, unit, unit)
                LowParse_Writers_Effect.repr_impl)
  =
  fun uu___5 ->
    fun uu___4 ->
      fun uu___3 ->
        fun uu___2 ->
          fun uu___1 ->
            fun uu___ ->
              (fun inv ->
                 fun p ->
                   fun min ->
                     fun max ->
                       fun min' ->
                         fun max' ->
                           Obj.magic
                             (LowParse_Writers_Effect.mk_repr_impl
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     {
                                       LowParse_Writers_Parser.kind =
                                         {
                                           LowParse_Spec_Base.parser_kind_low
                                             =
                                             ((if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))
                                                +
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low)
                                                     > (FStar_UInt32.v min)
                                                 then
                                                   match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_low
                                                 else FStar_UInt32.v min));
                                           LowParse_Spec_Base.parser_kind_high
                                             =
                                             (FStar_Pervasives_Native.Some
                                                ((if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.None
                                                           ->
                                                           FStar_UInt32.v max
                                                       | FStar_Pervasives_Native.Some
                                                           kmax ->
                                                           if
                                                             kmax <
                                                               (FStar_UInt32.v
                                                                  max)
                                                           then kmax
                                                           else
                                                             FStar_UInt32.v
                                                               max)
                                                        <
                                                        ((if
                                                            (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_low)
                                                              >
                                                              (FStar_UInt32.v
                                                                 min)
                                                          then
                                                            match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_low
                                                          else
                                                            FStar_UInt32.v
                                                              min))
                                                    then
                                                      (if
                                                         (match match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_low)
                                                           >
                                                           (FStar_UInt32.v
                                                              min)
                                                       then
                                                         match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_low
                                                       else
                                                         FStar_UInt32.v min)
                                                    else
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.None
                                                           ->
                                                           FStar_UInt32.v max
                                                       | FStar_Pervasives_Native.Some
                                                           kmax ->
                                                           if
                                                             kmax <
                                                               (FStar_UInt32.v
                                                                  max)
                                                           then kmax
                                                           else
                                                             FStar_UInt32.v
                                                               max))));
                                           LowParse_Spec_Base.parser_kind_subkind
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserStrong);
                                           LowParse_Spec_Base.parser_kind_metadata
                                             =
                                             (match match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata
                                              with
                                              | FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail)
                                                  ->
                                                  FStar_Pervasives_Native.Some
                                                    LowParse_Spec_Base.ParserKindMetadataFail
                                              | uu___ ->
                                                  FStar_Pervasives_Native.None)
                                         };
                                       LowParse_Writers_Parser.parser = ();
                                       LowParse_Writers_Parser.serializer =
                                         ();
                                       LowParse_Writers_Parser.jumper =
                                         (fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos ->
                                                  let h =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let h1 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let uu___ =
                                                    let uu___1 =
                                                      match if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.of_int (256))
                                                            then
                                                              Prims.int_one
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "65536")
                                                              then
                                                                (Prims.of_int (2))
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                then
                                                                  (Prims.of_int (3))
                                                                else
                                                                  (Prims.of_int (4))
                                                      with
                                                      | uu___2 when
                                                          uu___2 =
                                                            Prims.int_one
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (2))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (3))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (4))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                             ()) () () input
                                                            pos in
                                                    FStar_UInt32.add
                                                      (FStar_UInt32.uint_to_t
                                                         (if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.of_int (256))
                                                          then Prims.int_one
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "65536")
                                                            then
                                                              (Prims.of_int (2))
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "16777216")
                                                              then
                                                                (Prims.of_int (3))
                                                              else
                                                                (Prims.of_int (4))))
                                                      uu___1 in
                                                  FStar_UInt32.add pos uu___)
                                     }))
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     {
                                       LowParse_Writers_Parser.kind =
                                         {
                                           LowParse_Spec_Base.parser_kind_low
                                             =
                                             ((if
                                                 (FStar_UInt32.v max') <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max') <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max') <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))
                                                +
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low)
                                                     > (FStar_UInt32.v min')
                                                 then
                                                   match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_low
                                                 else FStar_UInt32.v min'));
                                           LowParse_Spec_Base.parser_kind_high
                                             =
                                             (FStar_Pervasives_Native.Some
                                                ((if
                                                    (FStar_UInt32.v max') <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max') <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max')
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.None
                                                           ->
                                                           FStar_UInt32.v
                                                             max'
                                                       | FStar_Pervasives_Native.Some
                                                           kmax ->
                                                           if
                                                             kmax <
                                                               (FStar_UInt32.v
                                                                  max')
                                                           then kmax
                                                           else
                                                             FStar_UInt32.v
                                                               max')
                                                        <
                                                        ((if
                                                            (match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_low)
                                                              >
                                                              (FStar_UInt32.v
                                                                 min')
                                                          then
                                                            match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                  with
                                                                  | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                            with
                                                            | {
                                                                LowParse_Spec_Base.parser_kind_low
                                                                  =
                                                                  parser_kind_low;
                                                                LowParse_Spec_Base.parser_kind_high
                                                                  =
                                                                  parser_kind_high;
                                                                LowParse_Spec_Base.parser_kind_subkind
                                                                  =
                                                                  parser_kind_subkind;
                                                                LowParse_Spec_Base.parser_kind_metadata
                                                                  =
                                                                  parser_kind_metadata;_}
                                                                ->
                                                                parser_kind_low
                                                          else
                                                            FStar_UInt32.v
                                                              min'))
                                                    then
                                                      (if
                                                         (match match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_low)
                                                           >
                                                           (FStar_UInt32.v
                                                              min')
                                                       then
                                                         match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_low
                                                       else
                                                         FStar_UInt32.v min')
                                                    else
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.None
                                                           ->
                                                           FStar_UInt32.v
                                                             max'
                                                       | FStar_Pervasives_Native.Some
                                                           kmax ->
                                                           if
                                                             kmax <
                                                               (FStar_UInt32.v
                                                                  max')
                                                           then kmax
                                                           else
                                                             FStar_UInt32.v
                                                               max'))));
                                           LowParse_Spec_Base.parser_kind_subkind
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserStrong);
                                           LowParse_Spec_Base.parser_kind_metadata
                                             =
                                             (match match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata
                                              with
                                              | FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail)
                                                  ->
                                                  FStar_Pervasives_Native.Some
                                                    LowParse_Spec_Base.ParserKindMetadataFail
                                              | uu___ ->
                                                  FStar_Pervasives_Native.None)
                                         };
                                       LowParse_Writers_Parser.parser = ();
                                       LowParse_Writers_Parser.serializer =
                                         ();
                                       LowParse_Writers_Parser.jumper =
                                         (fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos ->
                                                  let h =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let h1 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let uu___ =
                                                    let uu___1 =
                                                      match if
                                                              (FStar_UInt32.v
                                                                 max')
                                                                <
                                                                (Prims.of_int (256))
                                                            then
                                                              Prims.int_one
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max')
                                                                  <
                                                                  (Prims.parse_int "65536")
                                                              then
                                                                (Prims.of_int (2))
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max') <
                                                                    (Prims.parse_int "16777216")
                                                                then
                                                                  (Prims.of_int (3))
                                                                else
                                                                  (Prims.of_int (4))
                                                      with
                                                      | uu___2 when
                                                          uu___2 =
                                                            Prims.int_one
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (2))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (3))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                             ()) () () input
                                                            pos
                                                      | uu___2 when
                                                          uu___2 =
                                                            (Prims.of_int (4))
                                                          ->
                                                          (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                             ()) () () input
                                                            pos in
                                                    FStar_UInt32.add
                                                      (FStar_UInt32.uint_to_t
                                                         (if
                                                            (FStar_UInt32.v
                                                               max')
                                                              <
                                                              (Prims.of_int (256))
                                                          then Prims.int_one
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max')
                                                                <
                                                                (Prims.parse_int "65536")
                                                            then
                                                              (Prims.of_int (2))
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max')
                                                                  <
                                                                  (Prims.parse_int "16777216")
                                                              then
                                                                (Prims.of_int (3))
                                                              else
                                                                (Prims.of_int (4))))
                                                      uu___1 in
                                                  FStar_UInt32.add pos uu___)
                                     })) () () () () ()
                                (fun b ->
                                   fun len ->
                                     fun pos ->
                                       let h = FStar_HyperStack_ST.get () in
                                       let sl =
                                         {
                                           LowParse_Slice.base = b;
                                           LowParse_Slice.len = len
                                         } in
                                       let sz =
                                         FStar_UInt32.sub pos
                                           (FStar_UInt32.uint_to_t
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))) in
                                       if
                                         (FStar_UInt32.lte min' sz) &&
                                           (FStar_UInt32.lte sz max')
                                       then
                                         LowParse_Writers_Effect.ICorrect
                                           ((), pos)
                                       else
                                         LowParse_Writers_Effect.IError
                                           "parse_vldata_recast: out of bounds")))
                uu___5 uu___4 uu___3 uu___2 uu___1 uu___
let (parse_vldata_recast :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          FStar_UInt32.t ->
            FStar_UInt32.t ->
              (unit, unit, unit, unit, unit, unit, unit)
                LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun min' ->
            fun max' ->
              LowParse_Writers_Effect.Repr
                ((),
                  (Obj.magic
                     (LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             {
                               LowParse_Writers_Parser.kind =
                                 {
                                   LowParse_Spec_Base.parser_kind_low =
                                     ((if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))
                                        +
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low)
                                             > (FStar_UInt32.v min)
                                         then
                                           match match match p with
                                                       | LowParse_Writers_Parser.Parser
                                                           (t, p1) -> p1
                                                 with
                                                 | {
                                                     LowParse_Writers_Parser.kind
                                                       = kind;
                                                     LowParse_Writers_Parser.parser
                                                       = parser;
                                                     LowParse_Writers_Parser.serializer
                                                       = serializer;
                                                     LowParse_Writers_Parser.jumper
                                                       = jumper;_}
                                                     -> kind
                                           with
                                           | {
                                               LowParse_Spec_Base.parser_kind_low
                                                 = parser_kind_low;
                                               LowParse_Spec_Base.parser_kind_high
                                                 = parser_kind_high;
                                               LowParse_Spec_Base.parser_kind_subkind
                                                 = parser_kind_subkind;
                                               LowParse_Spec_Base.parser_kind_metadata
                                                 = parser_kind_metadata;_}
                                               -> parser_kind_low
                                         else FStar_UInt32.v min));
                                   LowParse_Spec_Base.parser_kind_high =
                                     (FStar_Pervasives_Native.Some
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max)
                                                <
                                                ((if
                                                    (match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_low)
                                                      > (FStar_UInt32.v min)
                                                  then
                                                    match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low
                                                  else FStar_UInt32.v min))
                                            then
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low)
                                                   > (FStar_UInt32.v min)
                                               then
                                                 match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_low
                                               else FStar_UInt32.v min)
                                            else
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max)
                                                   then kmax
                                                   else FStar_UInt32.v max))));
                                   LowParse_Spec_Base.parser_kind_subkind =
                                     (FStar_Pervasives_Native.Some
                                        LowParse_Spec_Base.ParserStrong);
                                   LowParse_Spec_Base.parser_kind_metadata =
                                     (match match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_metadata
                                      with
                                      | FStar_Pervasives_Native.Some
                                          (LowParse_Spec_Base.ParserKindMetadataFail)
                                          ->
                                          FStar_Pervasives_Native.Some
                                            LowParse_Spec_Base.ParserKindMetadataFail
                                      | uu___ -> FStar_Pervasives_Native.None)
                                 };
                               LowParse_Writers_Parser.parser = ();
                               LowParse_Writers_Parser.serializer = ();
                               LowParse_Writers_Parser.jumper =
                                 (fun rrel ->
                                    fun rel ->
                                      fun input ->
                                        fun pos ->
                                          let h = FStar_HyperStack_ST.get () in
                                          let h1 = FStar_HyperStack_ST.get () in
                                          let h2 = FStar_HyperStack_ST.get () in
                                          let uu___ =
                                            let uu___1 =
                                              match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                     ()) () () input pos in
                                            FStar_UInt32.add
                                              (FStar_UInt32.uint_to_t
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))))
                                              uu___1 in
                                          FStar_UInt32.add pos uu___)
                             }))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             {
                               LowParse_Writers_Parser.kind =
                                 {
                                   LowParse_Spec_Base.parser_kind_low =
                                     ((if
                                         (FStar_UInt32.v max') <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max') <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max') <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))
                                        +
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low)
                                             > (FStar_UInt32.v min')
                                         then
                                           match match match p with
                                                       | LowParse_Writers_Parser.Parser
                                                           (t, p1) -> p1
                                                 with
                                                 | {
                                                     LowParse_Writers_Parser.kind
                                                       = kind;
                                                     LowParse_Writers_Parser.parser
                                                       = parser;
                                                     LowParse_Writers_Parser.serializer
                                                       = serializer;
                                                     LowParse_Writers_Parser.jumper
                                                       = jumper;_}
                                                     -> kind
                                           with
                                           | {
                                               LowParse_Spec_Base.parser_kind_low
                                                 = parser_kind_low;
                                               LowParse_Spec_Base.parser_kind_high
                                                 = parser_kind_high;
                                               LowParse_Spec_Base.parser_kind_subkind
                                                 = parser_kind_subkind;
                                               LowParse_Spec_Base.parser_kind_metadata
                                                 = parser_kind_metadata;_}
                                               -> parser_kind_low
                                         else FStar_UInt32.v min'));
                                   LowParse_Spec_Base.parser_kind_high =
                                     (FStar_Pervasives_Native.Some
                                        ((if
                                            (FStar_UInt32.v max') <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max') <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max') <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max'
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max')
                                                   then kmax
                                                   else FStar_UInt32.v max')
                                                <
                                                ((if
                                                    (match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_low)
                                                      > (FStar_UInt32.v min')
                                                  then
                                                    match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low
                                                  else FStar_UInt32.v min'))
                                            then
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low)
                                                   > (FStar_UInt32.v min')
                                               then
                                                 match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_low
                                               else FStar_UInt32.v min')
                                            else
                                              (match match match match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                           with
                                                           | {
                                                               LowParse_Writers_Parser.kind
                                                                 = kind;
                                                               LowParse_Writers_Parser.parser
                                                                 = parser;
                                                               LowParse_Writers_Parser.serializer
                                                                 = serializer;
                                                               LowParse_Writers_Parser.jumper
                                                                 = jumper;_}
                                                               -> kind
                                                     with
                                                     | {
                                                         LowParse_Spec_Base.parser_kind_low
                                                           = parser_kind_low;
                                                         LowParse_Spec_Base.parser_kind_high
                                                           = parser_kind_high;
                                                         LowParse_Spec_Base.parser_kind_subkind
                                                           =
                                                           parser_kind_subkind;
                                                         LowParse_Spec_Base.parser_kind_metadata
                                                           =
                                                           parser_kind_metadata;_}
                                                         -> parser_kind_high
                                               with
                                               | FStar_Pervasives_Native.None
                                                   -> FStar_UInt32.v max'
                                               | FStar_Pervasives_Native.Some
                                                   kmax ->
                                                   if
                                                     kmax <
                                                       (FStar_UInt32.v max')
                                                   then kmax
                                                   else FStar_UInt32.v max'))));
                                   LowParse_Spec_Base.parser_kind_subkind =
                                     (FStar_Pervasives_Native.Some
                                        LowParse_Spec_Base.ParserStrong);
                                   LowParse_Spec_Base.parser_kind_metadata =
                                     (match match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_metadata
                                      with
                                      | FStar_Pervasives_Native.Some
                                          (LowParse_Spec_Base.ParserKindMetadataFail)
                                          ->
                                          FStar_Pervasives_Native.Some
                                            LowParse_Spec_Base.ParserKindMetadataFail
                                      | uu___ -> FStar_Pervasives_Native.None)
                                 };
                               LowParse_Writers_Parser.parser = ();
                               LowParse_Writers_Parser.serializer = ();
                               LowParse_Writers_Parser.jumper =
                                 (fun rrel ->
                                    fun rel ->
                                      fun input ->
                                        fun pos ->
                                          let h = FStar_HyperStack_ST.get () in
                                          let h1 = FStar_HyperStack_ST.get () in
                                          let h2 = FStar_HyperStack_ST.get () in
                                          let uu___ =
                                            let uu___1 =
                                              match if
                                                      (FStar_UInt32.v max') <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max')
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v
                                                             max')
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                     ()) () () input pos
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                     ()) () () input pos in
                                            FStar_UInt32.add
                                              (FStar_UInt32.uint_to_t
                                                 (if
                                                    (FStar_UInt32.v max') <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max') <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max')
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))))
                                              uu___1 in
                                          FStar_UInt32.add pos uu___)
                             })) () () () () ()
                        (fun b ->
                           fun len ->
                             fun pos ->
                               let h = FStar_HyperStack_ST.get () in
                               if
                                 (FStar_UInt32.lte min'
                                    (FStar_UInt32.sub pos
                                       (FStar_UInt32.uint_to_t
                                          (if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4))))))
                                   &&
                                   (FStar_UInt32.lte
                                      (FStar_UInt32.sub pos
                                         (FStar_UInt32.uint_to_t
                                            (if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))))
                                      max')
                               then
                                 LowParse_Writers_Effect.ICorrect ((), pos)
                               else
                                 LowParse_Writers_Effect.IError
                                   "parse_vldata_recast: out of bounds"))))
type parser1 = LowParse_Writers_Parser.parser
type rlptr =
  {
  rlptr_base: LowParse_Writers_Parser.u8 LowStar_Buffer.buffer ;
  rlptr_len: FStar_UInt32.t }
let (__proj__Mkrlptr__item__rlptr_base :
  rlptr -> LowParse_Writers_Parser.u8 LowStar_Buffer.buffer) =
  fun projectee ->
    match projectee with | { rlptr_base; rlptr_len;_} -> rlptr_base
let (__proj__Mkrlptr__item__rlptr_len : rlptr -> FStar_UInt32.t) =
  fun projectee ->
    match projectee with | { rlptr_base; rlptr_len;_} -> rlptr_len
type ('p, 'inv, 'x) valid_rlptr = unit
type ('p, 'inv) lptr = rlptr


type ('p, 'inv, 'x, 'res) destr_list_post = Obj.t


let (destr_list_impl :
  LowParse_Writers_Parser.parser ->
    unit ->
      (unit, unit) lptr ->
        ((LowParse_Writers_Effect.rptr * (unit, unit) lptr)
           FStar_Pervasives_Native.option,
          Prims.l_True, Obj.t, Prims.l_False, unit, unit)
          LowParse_Writers_Effect.read_repr_impl)
  =
  fun p ->
    fun inv ->
      fun x ->
        LowParse_Writers_Effect.mk_read_repr_impl () ()
          (fun uu___ ->
             let base = x.rlptr_base in
             let len = x.rlptr_len in
             let sl =
               { LowParse_Slice.base = base; LowParse_Slice.len = len } in
             if x.rlptr_len = (FStar_UInt32.uint_to_t Prims.int_zero)
             then
               LowParse_Writers_Effect.Correct FStar_Pervasives_Native.None
             else
               (let pos =
                  (match match p with
                         | LowParse_Writers_Parser.Parser (t, p1) -> p1
                   with
                   | { LowParse_Writers_Parser.kind = kind;
                       LowParse_Writers_Parser.parser = parser;
                       LowParse_Writers_Parser.serializer = serializer;
                       LowParse_Writers_Parser.jumper = jumper;_} -> jumper)
                    () () (Obj.magic sl)
                    (FStar_UInt32.uint_to_t Prims.int_zero) in
                let b_hd =
                  LowStar_Monotonic_Buffer.msub base
                    (FStar_UInt32.uint_to_t Prims.int_zero) () in
                let len_tl = FStar_UInt32.sub len pos in
                let b_tl = LowStar_Monotonic_Buffer.msub base pos () in
                let sl_hd =
                  { LowParse_Slice.base = b_hd; LowParse_Slice.len = pos } in
                let sl_tl =
                  { LowParse_Slice.base = b_tl; LowParse_Slice.len = len_tl } in
                LowParse_Writers_Effect.Correct
                  (FStar_Pervasives_Native.Some
                     ((LowParse_Writers_Effect.mk_ptr p () b_hd pos),
                       { rlptr_base = b_tl; rlptr_len = len_tl }))))
let (destr_list_repr :
  LowParse_Writers_Parser.parser ->
    unit ->
      (unit, unit) lptr ->
        ((LowParse_Writers_Effect.rptr * (unit, unit) lptr)
           FStar_Pervasives_Native.option,
          Prims.l_True, Obj.t, Prims.l_False, unit)
          LowParse_Writers_Effect.read_repr)
  =
  fun p ->
    fun inv ->
      fun x ->
        LowParse_Writers_Effect.ReadRepr
          ((),
            (LowParse_Writers_Effect.mk_read_repr_impl () ()
               (fun uu___ ->
                  let base = x.rlptr_base in
                  let len = x.rlptr_len in
                  let sl =
                    { LowParse_Slice.base = base; LowParse_Slice.len = len } in
                  if x.rlptr_len = (FStar_UInt32.uint_to_t Prims.int_zero)
                  then
                    LowParse_Writers_Effect.Correct
                      FStar_Pervasives_Native.None
                  else
                    (let pos =
                       (match match p with
                              | LowParse_Writers_Parser.Parser (t, p1) -> p1
                        with
                        | { LowParse_Writers_Parser.kind = kind;
                            LowParse_Writers_Parser.parser = parser;
                            LowParse_Writers_Parser.serializer = serializer;
                            LowParse_Writers_Parser.jumper = jumper;_} ->
                            jumper) () () (Obj.magic sl)
                         (FStar_UInt32.uint_to_t Prims.int_zero) in
                     let b_hd =
                       LowStar_Monotonic_Buffer.msub base
                         (FStar_UInt32.uint_to_t Prims.int_zero) () in
                     let len_tl = FStar_UInt32.sub len pos in
                     let b_tl = LowStar_Monotonic_Buffer.msub base pos () in
                     let sl_hd =
                       { LowParse_Slice.base = b_hd; LowParse_Slice.len = pos
                       } in
                     let sl_tl =
                       {
                         LowParse_Slice.base = b_tl;
                         LowParse_Slice.len = len_tl
                       } in
                     LowParse_Writers_Effect.Correct
                       (FStar_Pervasives_Native.Some
                          ((LowParse_Writers_Effect.mk_ptr p () b_hd pos),
                            { rlptr_base = b_tl; rlptr_len = len_tl }))))))
let (destr_list :
  LowParse_Writers_Parser.parser ->
    unit ->
      (unit, unit) lptr ->
        ((LowParse_Writers_Effect.rptr * (unit, unit) lptr)
           FStar_Pervasives_Native.option,
          unit, unit, Prims.l_False, unit) LowParse_Writers_Effect.read_repr)
  =
  fun uu___2 ->
    fun uu___1 ->
      fun uu___ ->
        (fun p ->
           fun inv ->
             fun x ->
               Obj.magic
                 (LowParse_Writers_Effect.ReadRepr
                    ((),
                      (LowParse_Writers_Effect.mk_read_repr_impl () ()
                         (fun uu___ ->
                            let base = x.rlptr_base in
                            let len = x.rlptr_len in
                            let sl =
                              {
                                LowParse_Slice.base = base;
                                LowParse_Slice.len = len
                              } in
                            if
                              x.rlptr_len =
                                (FStar_UInt32.uint_to_t Prims.int_zero)
                            then
                              LowParse_Writers_Effect.Correct
                                FStar_Pervasives_Native.None
                            else
                              (let pos =
                                 (match match p with
                                        | LowParse_Writers_Parser.Parser
                                            (t, p1) -> p1
                                  with
                                  | { LowParse_Writers_Parser.kind = kind;
                                      LowParse_Writers_Parser.parser = parser;
                                      LowParse_Writers_Parser.serializer =
                                        serializer;
                                      LowParse_Writers_Parser.jumper = jumper;_}
                                      -> jumper) () () (Obj.magic sl)
                                   (FStar_UInt32.uint_to_t Prims.int_zero) in
                               let b_hd =
                                 LowStar_Monotonic_Buffer.msub base
                                   (FStar_UInt32.uint_to_t Prims.int_zero) () in
                               let len_tl = FStar_UInt32.sub len pos in
                               let b_tl =
                                 LowStar_Monotonic_Buffer.msub base pos () in
                               LowParse_Writers_Effect.Correct
                                 (FStar_Pervasives_Native.Some
                                    ((LowParse_Writers_Effect.mk_ptr p ()
                                        b_hd pos),
                                      { rlptr_base = b_tl; rlptr_len = len_tl
                                      })))))))) uu___2 uu___1 uu___


let (read_do_while_impl :
  unit ->
    unit ->
      unit ->
        unit ->
          unit ->
            (Obj.t ->
               unit ->
                 ((Obj.t * Prims.bool), unit, unit, unit, unit)
                   LowParse_Writers_Effect.read_repr)
              ->
              Obj.t ->
                (Obj.t, Obj.t, unit, unit, unit, unit)
                  LowParse_Writers_Effect.read_repr_impl)
  =
  fun inv ->
    fun t ->
      fun invariant ->
        fun measure ->
          fun error ->
            fun body ->
              fun x0 ->
                LowParse_Writers_Effect.mk_read_repr_impl () ()
                  (fun uu___ ->
                     FStar_HyperStack_ST.push_frame ();
                     (let btemp =
                        LowStar_Monotonic_Buffer.malloca
                          (LowParse_Writers_Effect.Correct x0)
                          (FStar_UInt32.uint_to_t Prims.int_one) in
                      let h0 = FStar_HyperStack_ST.get () in
                      C_Loops.do_while
                        (fun uu___3 ->
                           let uu___4 =
                             LowStar_Monotonic_Buffer.index btemp
                               (FStar_UInt32.uint_to_t Prims.int_zero) in
                           match uu___4 with
                           | LowParse_Writers_Effect.Correct x ->
                               let h = FStar_HyperStack_ST.get () in
                               let uu___5 =
                                 LowParse_Writers_Effect.extract_read_repr_impl
                                   () ()
                                   (match Obj.magic (body x ()) with
                                    | LowParse_Writers_Effect.ReadRepr
                                        (spec, impl) -> impl) in
                               (match uu___5 with
                                | LowParse_Writers_Effect.Correct (x', cont)
                                    ->
                                    ((let h1 = FStar_HyperStack_ST.get () in
                                      LowStar_Monotonic_Buffer.upd' btemp
                                        (FStar_UInt32.uint_to_t
                                           Prims.int_zero)
                                        (LowParse_Writers_Effect.Correct x'));
                                     (let h' = FStar_HyperStack_ST.get () in
                                      Prims.op_Negation cont))
                                | LowParse_Writers_Effect.Error s ->
                                    ((let h1 = FStar_HyperStack_ST.get () in
                                      LowStar_Monotonic_Buffer.upd' btemp
                                        (FStar_UInt32.uint_to_t
                                           Prims.int_zero)
                                        (LowParse_Writers_Effect.Error s));
                                     true)));
                      (let res =
                         LowStar_Monotonic_Buffer.index btemp
                           (FStar_UInt32.uint_to_t Prims.int_zero) in
                       FStar_HyperStack_ST.pop_frame (); res)))
let (read_do_while' :
  unit ->
    unit ->
      unit ->
        unit ->
          unit ->
            (Obj.t ->
               unit ->
                 ((Obj.t * Prims.bool), unit, unit, unit, unit)
                   LowParse_Writers_Effect.read_repr)
              ->
              Obj.t ->
                (Obj.t, unit, unit, unit, unit)
                  LowParse_Writers_Effect.read_repr)
  =
  fun uu___6 ->
    fun uu___5 ->
      fun uu___4 ->
        fun uu___3 ->
          fun uu___2 ->
            fun uu___1 ->
              fun uu___ ->
                (fun inv ->
                   fun t ->
                     fun invariant ->
                       fun measure ->
                         fun error ->
                           fun body ->
                             fun x ->
                               Obj.magic
                                 (LowParse_Writers_Effect.ReadRepr
                                    ((),
                                      (LowParse_Writers_Effect.mk_read_repr_impl
                                         () ()
                                         (fun uu___ ->
                                            FStar_HyperStack_ST.push_frame ();
                                            (let btemp =
                                               LowStar_Monotonic_Buffer.malloca
                                                 (LowParse_Writers_Effect.Correct
                                                    x)
                                                 (FStar_UInt32.uint_to_t
                                                    Prims.int_one) in
                                             let h0 =
                                               FStar_HyperStack_ST.get () in
                                             C_Loops.do_while
                                               (fun uu___3 ->
                                                  let uu___4 =
                                                    LowStar_Monotonic_Buffer.index
                                                      btemp
                                                      (FStar_UInt32.uint_to_t
                                                         Prims.int_zero) in
                                                  match uu___4 with
                                                  | LowParse_Writers_Effect.Correct
                                                      x1 ->
                                                      let h =
                                                        FStar_HyperStack_ST.get
                                                          () in
                                                      let uu___5 =
                                                        LowParse_Writers_Effect.extract_read_repr_impl
                                                          () ()
                                                          (match Obj.magic
                                                                   (body x1
                                                                    ())
                                                           with
                                                           | LowParse_Writers_Effect.ReadRepr
                                                               (spec, impl)
                                                               -> impl) in
                                                      (match uu___5 with
                                                       | LowParse_Writers_Effect.Correct
                                                           (x', cont) ->
                                                           ((let h1 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             LowStar_Monotonic_Buffer.upd'
                                                               btemp
                                                               (FStar_UInt32.uint_to_t
                                                                  Prims.int_zero)
                                                               (LowParse_Writers_Effect.Correct
                                                                  x'));
                                                            (let h' =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             Prims.op_Negation
                                                               cont))
                                                       | LowParse_Writers_Effect.Error
                                                           s ->
                                                           ((let h1 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             LowStar_Monotonic_Buffer.upd'
                                                               btemp
                                                               (FStar_UInt32.uint_to_t
                                                                  Prims.int_zero)
                                                               (LowParse_Writers_Effect.Error
                                                                  s));
                                                            true)));
                                             (let res =
                                                LowStar_Monotonic_Buffer.index
                                                  btemp
                                                  (FStar_UInt32.uint_to_t
                                                     Prims.int_zero) in
                                              FStar_HyperStack_ST.pop_frame
                                                ();
                                              res))))))) uu___6 uu___5 uu___4
                  uu___3 uu___2 uu___1 uu___
let (read_do_while :
  unit ->
    unit ->
      unit ->
        unit ->
          unit ->
            (Obj.t ->
               ((Obj.t * Prims.bool), unit, unit, unit, unit)
                 LowParse_Writers_Effect.read_repr)
              ->
              Obj.t ->
                (Obj.t, unit, unit, unit, unit)
                  LowParse_Writers_Effect.read_repr)
  =
  fun uu___6 ->
    fun uu___5 ->
      fun uu___4 ->
        fun uu___3 ->
          fun uu___2 ->
            fun uu___1 ->
              fun uu___ ->
                (fun inv ->
                   fun t ->
                     fun invariant ->
                       fun measure ->
                         fun error ->
                           fun body ->
                             fun x ->
                               Obj.magic
                                 (LowParse_Writers_Effect.ReadRepr
                                    ((),
                                      (LowParse_Writers_Effect.mk_read_repr_impl
                                         () ()
                                         (fun uu___ ->
                                            FStar_HyperStack_ST.push_frame ();
                                            (let btemp =
                                               LowStar_Monotonic_Buffer.malloca
                                                 (LowParse_Writers_Effect.Correct
                                                    x)
                                                 (FStar_UInt32.uint_to_t
                                                    Prims.int_one) in
                                             let h0 =
                                               FStar_HyperStack_ST.get () in
                                             C_Loops.do_while
                                               (fun uu___3 ->
                                                  let uu___4 =
                                                    LowStar_Monotonic_Buffer.index
                                                      btemp
                                                      (FStar_UInt32.uint_to_t
                                                         Prims.int_zero) in
                                                  match uu___4 with
                                                  | LowParse_Writers_Effect.Correct
                                                      x1 ->
                                                      let h =
                                                        FStar_HyperStack_ST.get
                                                          () in
                                                      let uu___5 =
                                                        LowParse_Writers_Effect.extract_read_repr_impl
                                                          () ()
                                                          (match Obj.magic
                                                                   (body x1)
                                                           with
                                                           | LowParse_Writers_Effect.ReadRepr
                                                               (spec, impl)
                                                               -> impl) in
                                                      (match uu___5 with
                                                       | LowParse_Writers_Effect.Correct
                                                           (x', cont) ->
                                                           ((let h1 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             LowStar_Monotonic_Buffer.upd'
                                                               btemp
                                                               (FStar_UInt32.uint_to_t
                                                                  Prims.int_zero)
                                                               (LowParse_Writers_Effect.Correct
                                                                  x'));
                                                            (let h' =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             Prims.op_Negation
                                                               cont))
                                                       | LowParse_Writers_Effect.Error
                                                           s ->
                                                           ((let h1 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             LowStar_Monotonic_Buffer.upd'
                                                               btemp
                                                               (FStar_UInt32.uint_to_t
                                                                  Prims.int_zero)
                                                               (LowParse_Writers_Effect.Error
                                                                  s));
                                                            true)));
                                             (let res =
                                                LowStar_Monotonic_Buffer.index
                                                  btemp
                                                  (FStar_UInt32.uint_to_t
                                                     Prims.int_zero) in
                                              FStar_HyperStack_ST.pop_frame
                                                ();
                                              res))))))) uu___6 uu___5 uu___4
                  uu___3 uu___2 uu___1 uu___
let (list_exists :
  LowParse_Writers_Parser.parser ->
    unit ->
      unit ->
        (LowParse_Writers_Effect.rptr ->
           (Prims.bool, unit, unit, Prims.l_False, unit)
             LowParse_Writers_Effect.read_repr)
          ->
          (unit, unit) lptr ->
            (Prims.bool, unit, unit, Prims.l_False, unit)
              LowParse_Writers_Effect.read_repr)
  =
  fun p ->
    fun inv ->
      fun f_spec ->
        fun f ->
          fun l ->
            LowParse_Writers_Effect.ReadRepr
              ((),
                (LowParse_Writers_Effect.read_bind_impl () () ()
                   (Obj.magic
                      (LowParse_Writers_Effect.mk_read_repr_impl () ()
                         (fun uu___ ->
                            FStar_HyperStack_ST.push_frame ();
                            (let btemp =
                               LowStar_Monotonic_Buffer.malloca
                                 (LowParse_Writers_Effect.Correct l)
                                 (FStar_UInt32.uint_to_t Prims.int_one) in
                             let h0 = FStar_HyperStack_ST.get () in
                             C_Loops.do_while
                               (fun uu___3 ->
                                  let uu___4 =
                                    LowStar_Monotonic_Buffer.index btemp
                                      (FStar_UInt32.uint_to_t Prims.int_zero) in
                                  match uu___4 with
                                  | LowParse_Writers_Effect.Correct x ->
                                      let h = FStar_HyperStack_ST.get () in
                                      let uu___5 =
                                        LowParse_Writers_Effect.extract_read_repr_impl
                                          () ()
                                          (Obj.magic
                                             (LowParse_Writers_Effect.read_bind_impl
                                                () () ()
                                                (Obj.magic
                                                   (LowParse_Writers_Effect.mk_read_repr_impl
                                                      () ()
                                                      (fun uu___6 ->
                                                         let base =
                                                           x.rlptr_base in
                                                         let len =
                                                           x.rlptr_len in
                                                         let sl =
                                                           {
                                                             LowParse_Slice.base
                                                               = base;
                                                             LowParse_Slice.len
                                                               = len
                                                           } in
                                                         if
                                                           x.rlptr_len =
                                                             (FStar_UInt32.uint_to_t
                                                                Prims.int_zero)
                                                         then
                                                           LowParse_Writers_Effect.Correct
                                                             FStar_Pervasives_Native.None
                                                         else
                                                           (let pos =
                                                              (match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> jumper)
                                                                () ()
                                                                (Obj.magic sl)
                                                                (FStar_UInt32.uint_to_t
                                                                   Prims.int_zero) in
                                                            let b_hd =
                                                              LowStar_Monotonic_Buffer.msub
                                                                base
                                                                (FStar_UInt32.uint_to_t
                                                                   Prims.int_zero)
                                                                () in
                                                            let len_tl =
                                                              FStar_UInt32.sub
                                                                len pos in
                                                            let b_tl =
                                                              LowStar_Monotonic_Buffer.msub
                                                                base pos () in
                                                            LowParse_Writers_Effect.Correct
                                                              (FStar_Pervasives_Native.Some
                                                                 ((LowParse_Writers_Effect.mk_ptr
                                                                    p () b_hd
                                                                    pos),
                                                                   {
                                                                    rlptr_base
                                                                    = b_tl;
                                                                    rlptr_len
                                                                    = len_tl
                                                                   }))))))
                                                (fun uu___6 ->
                                                   (fun x1 ->
                                                      match x1 with
                                                      | FStar_Pervasives_Native.None
                                                          ->
                                                          Obj.magic
                                                            (Obj.repr
                                                               (LowParse_Writers_Effect.lift_pure_read_impl
                                                                  (fun uu___6
                                                                    ->
                                                                    (x,
                                                                    false))
                                                                  ()))
                                                      | FStar_Pervasives_Native.Some
                                                          (hd, tl) ->
                                                          Obj.magic
                                                            (Obj.repr
                                                               (LowParse_Writers_Effect.read_bind_impl
                                                                  () () ()
                                                                  (match 
                                                                    Obj.magic
                                                                    (f hd)
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Effect.ReadRepr
                                                                    (spec,
                                                                    impl) ->
                                                                    Obj.magic
                                                                    impl)
                                                                  (fun uu___6
                                                                    ->
                                                                    (fun x2
                                                                    ->
                                                                    Obj.magic
                                                                    (LowParse_Writers_Effect.lift_pure_read_impl
                                                                    (fun
                                                                    uu___6 ->
                                                                    if x2
                                                                    then
                                                                    (x,
                                                                    false)
                                                                    else
                                                                    (tl,
                                                                    true)) ()))
                                                                    uu___6))))
                                                     uu___6))) in
                                      (match uu___5 with
                                       | LowParse_Writers_Effect.Correct
                                           (x', cont) ->
                                           ((let h1 =
                                               FStar_HyperStack_ST.get () in
                                             LowStar_Monotonic_Buffer.upd'
                                               btemp
                                               (FStar_UInt32.uint_to_t
                                                  Prims.int_zero)
                                               (LowParse_Writers_Effect.Correct
                                                  x'));
                                            (let h' =
                                               FStar_HyperStack_ST.get () in
                                             Prims.op_Negation cont))
                                       | LowParse_Writers_Effect.Error s ->
                                           ((let h1 =
                                               FStar_HyperStack_ST.get () in
                                             LowStar_Monotonic_Buffer.upd'
                                               btemp
                                               (FStar_UInt32.uint_to_t
                                                  Prims.int_zero)
                                               (LowParse_Writers_Effect.Error
                                                  s));
                                            true)));
                             (let res =
                                LowStar_Monotonic_Buffer.index btemp
                                  (FStar_UInt32.uint_to_t Prims.int_zero) in
                              FStar_HyperStack_ST.pop_frame (); res)))))
                   (fun uu___ ->
                      (fun x ->
                         Obj.magic
                           (LowParse_Writers_Effect.read_bind_impl () () ()
                              (Obj.magic
                                 (LowParse_Writers_Effect.mk_read_repr_impl
                                    () ()
                                    (fun uu___ ->
                                       let base = x.rlptr_base in
                                       let len = x.rlptr_len in
                                       let sl =
                                         {
                                           LowParse_Slice.base = base;
                                           LowParse_Slice.len = len
                                         } in
                                       if
                                         x.rlptr_len =
                                           (FStar_UInt32.uint_to_t
                                              Prims.int_zero)
                                       then
                                         LowParse_Writers_Effect.Correct
                                           FStar_Pervasives_Native.None
                                       else
                                         (let pos =
                                            (match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper) () ()
                                              (Obj.magic sl)
                                              (FStar_UInt32.uint_to_t
                                                 Prims.int_zero) in
                                          let b_hd =
                                            LowStar_Monotonic_Buffer.msub
                                              base
                                              (FStar_UInt32.uint_to_t
                                                 Prims.int_zero) () in
                                          let len_tl =
                                            FStar_UInt32.sub len pos in
                                          let b_tl =
                                            LowStar_Monotonic_Buffer.msub
                                              base pos () in
                                          LowParse_Writers_Effect.Correct
                                            (FStar_Pervasives_Native.Some
                                               ((LowParse_Writers_Effect.mk_ptr
                                                   p () b_hd pos),
                                                 {
                                                   rlptr_base = b_tl;
                                                   rlptr_len = len_tl
                                                 }))))))
                              (fun uu___ ->
                                 (fun x1 ->
                                    Obj.magic
                                      (LowParse_Writers_Effect.lift_pure_read_impl
                                         (fun uu___ ->
                                            FStar_Pervasives_Native.uu___is_Some
                                              x1) ())) uu___))) uu___)))




type ('p, 'min, 'max, 'x) parse_vllist_pred = unit
type ('p, 'min, 'max) parse_vllist_t = Obj.t Prims.list

let (parse_vllist :
  LowParse_Writers_Parser.parser ->
    FStar_UInt32.t -> FStar_UInt32.t -> LowParse_Writers_Parser.parser)
  =
  fun p ->
    fun min ->
      fun max ->
        LowParse_Writers_Parser.Parser
          ((),
            (Obj.magic
               {
                 LowParse_Writers_Parser.kind =
                   {
                     LowParse_Spec_Base.parser_kind_low =
                       ((if (FStar_UInt32.v max) < (Prims.of_int (256))
                         then Prims.int_one
                         else
                           if
                             (FStar_UInt32.v max) < (Prims.parse_int "65536")
                           then (Prims.of_int (2))
                           else
                             if
                               (FStar_UInt32.v max) <
                                 (Prims.parse_int "16777216")
                             then (Prims.of_int (3))
                             else (Prims.of_int (4)))
                          +
                          (if Prims.int_zero > (FStar_UInt32.v min)
                           then Prims.int_zero
                           else FStar_UInt32.v min));
                     LowParse_Spec_Base.parser_kind_high =
                       (FStar_Pervasives_Native.Some
                          ((if (FStar_UInt32.v max) < (Prims.of_int (256))
                            then Prims.int_one
                            else
                              if
                                (FStar_UInt32.v max) <
                                  (Prims.parse_int "65536")
                              then (Prims.of_int (2))
                              else
                                if
                                  (FStar_UInt32.v max) <
                                    (Prims.parse_int "16777216")
                                then (Prims.of_int (3))
                                else (Prims.of_int (4)))
                             +
                             (if
                                (FStar_UInt32.v max) <
                                  ((if Prims.int_zero > (FStar_UInt32.v min)
                                    then Prims.int_zero
                                    else FStar_UInt32.v min))
                              then
                                (if Prims.int_zero > (FStar_UInt32.v min)
                                 then Prims.int_zero
                                 else FStar_UInt32.v min)
                              else FStar_UInt32.v max)));
                     LowParse_Spec_Base.parser_kind_subkind =
                       (FStar_Pervasives_Native.Some
                          LowParse_Spec_Base.ParserStrong);
                     LowParse_Spec_Base.parser_kind_metadata =
                       FStar_Pervasives_Native.None
                   };
                 LowParse_Writers_Parser.parser = ();
                 LowParse_Writers_Parser.serializer = ();
                 LowParse_Writers_Parser.jumper =
                   (fun rrel ->
                      fun rel ->
                        fun input ->
                          fun pos ->
                            let h = FStar_HyperStack_ST.get () in
                            let h1 = FStar_HyperStack_ST.get () in
                            let h2 = FStar_HyperStack_ST.get () in
                            let uu___ =
                              let uu___1 =
                                match if
                                        (FStar_UInt32.v max) <
                                          (Prims.of_int (256))
                                      then Prims.int_one
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "65536")
                                        then (Prims.of_int (2))
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "16777216")
                                          then (Prims.of_int (3))
                                          else (Prims.of_int (4))
                                with
                                | uu___2 when uu___2 = Prims.int_one ->
                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                       ()) () () input pos
                                | uu___2 when uu___2 = (Prims.of_int (2)) ->
                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                       ()) () () input pos
                                | uu___2 when uu___2 = (Prims.of_int (3)) ->
                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                       ()) () () input pos
                                | uu___2 when uu___2 = (Prims.of_int (4)) ->
                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                       ()) () () input pos in
                              FStar_UInt32.add
                                (FStar_UInt32.uint_to_t
                                   (if
                                      (FStar_UInt32.v max) <
                                        (Prims.of_int (256))
                                    then Prims.int_one
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "65536")
                                      then (Prims.of_int (2))
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "16777216")
                                        then (Prims.of_int (3))
                                        else (Prims.of_int (4)))) uu___1 in
                            FStar_UInt32.add pos uu___)
               }))


let (lptr_of_vllist_ptr_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          LowParse_Writers_Effect.rptr ->
            ((unit, unit) lptr, Prims.l_True, unit, Prims.l_False, unit,
              unit) LowParse_Writers_Effect.read_repr_impl)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun r ->
            LowParse_Writers_Effect.mk_read_repr_impl () ()
              (fun uu___ ->
                 let uu___1 =
                   LowParse_Writers_Effect.buffer_of_ptr
                     (LowParse_Writers_Parser.Parser
                        ((),
                          (Obj.magic
                             {
                               LowParse_Writers_Parser.kind =
                                 {
                                   LowParse_Spec_Base.parser_kind_low =
                                     ((if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))
                                        +
                                        (if
                                           Prims.int_zero >
                                             (FStar_UInt32.v min)
                                         then Prims.int_zero
                                         else FStar_UInt32.v min));
                                   LowParse_Spec_Base.parser_kind_high =
                                     (FStar_Pervasives_Native.Some
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              (FStar_UInt32.v max) <
                                                ((if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min))
                                            then
                                              (if
                                                 Prims.int_zero >
                                                   (FStar_UInt32.v min)
                                               then Prims.int_zero
                                               else FStar_UInt32.v min)
                                            else FStar_UInt32.v max)));
                                   LowParse_Spec_Base.parser_kind_subkind =
                                     (FStar_Pervasives_Native.Some
                                        LowParse_Spec_Base.ParserStrong);
                                   LowParse_Spec_Base.parser_kind_metadata =
                                     FStar_Pervasives_Native.None
                                 };
                               LowParse_Writers_Parser.parser = ();
                               LowParse_Writers_Parser.serializer = ();
                               LowParse_Writers_Parser.jumper =
                                 (fun rrel ->
                                    fun rel ->
                                      fun input ->
                                        fun pos ->
                                          let h = FStar_HyperStack_ST.get () in
                                          let h1 = FStar_HyperStack_ST.get () in
                                          let h2 = FStar_HyperStack_ST.get () in
                                          let uu___2 =
                                            let uu___3 =
                                              match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___4 when
                                                  uu___4 = Prims.int_one ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                     ()) () () input pos
                                              | uu___4 when
                                                  uu___4 = (Prims.of_int (2))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                     ()) () () input pos
                                              | uu___4 when
                                                  uu___4 = (Prims.of_int (3))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                     ()) () () input pos
                                              | uu___4 when
                                                  uu___4 = (Prims.of_int (4))
                                                  ->
                                                  (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                     ()) () () input pos in
                                            FStar_UInt32.add
                                              (FStar_UInt32.uint_to_t
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))))
                                              uu___3 in
                                          FStar_UInt32.add pos uu___2)
                             }))) () r in
                 match uu___1 with
                 | (b, len) ->
                     let sl =
                       { LowParse_Slice.base = b; LowParse_Slice.len = len } in
                     let pos_pl =
                       FStar_UInt32.uint_to_t
                         (if (FStar_UInt32.v max) < (Prims.of_int (256))
                          then Prims.int_one
                          else
                            if
                              (FStar_UInt32.v max) <
                                (Prims.parse_int "65536")
                            then (Prims.of_int (2))
                            else
                              if
                                (FStar_UInt32.v max) <
                                  (Prims.parse_int "16777216")
                              then (Prims.of_int (3))
                              else (Prims.of_int (4))) in
                     let len_pl = FStar_UInt32.sub len pos_pl in
                     let b_pl = LowStar_Monotonic_Buffer.msub b pos_pl () in
                     LowParse_Writers_Effect.Correct
                       { rlptr_base = b_pl; rlptr_len = len_pl })
let (lptr_of_vllist_ptr_repr :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          LowParse_Writers_Effect.rptr ->
            ((unit, unit) lptr, Prims.l_True, unit, Prims.l_False, unit)
              LowParse_Writers_Effect.read_repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun r ->
            LowParse_Writers_Effect.ReadRepr
              ((),
                (LowParse_Writers_Effect.mk_read_repr_impl () ()
                   (fun uu___ ->
                      let uu___1 =
                        LowParse_Writers_Effect.buffer_of_ptr
                          (LowParse_Writers_Parser.Parser
                             ((),
                               (Obj.magic
                                  {
                                    LowParse_Writers_Parser.kind =
                                      {
                                        LowParse_Spec_Base.parser_kind_low =
                                          ((if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4)))
                                             +
                                             (if
                                                Prims.int_zero >
                                                  (FStar_UInt32.v min)
                                              then Prims.int_zero
                                              else FStar_UInt32.v min));
                                        LowParse_Spec_Base.parser_kind_high =
                                          (FStar_Pervasives_Native.Some
                                             ((if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))
                                                +
                                                (if
                                                   (FStar_UInt32.v max) <
                                                     ((if
                                                         Prims.int_zero >
                                                           (FStar_UInt32.v
                                                              min)
                                                       then Prims.int_zero
                                                       else
                                                         FStar_UInt32.v min))
                                                 then
                                                   (if
                                                      Prims.int_zero >
                                                        (FStar_UInt32.v min)
                                                    then Prims.int_zero
                                                    else FStar_UInt32.v min)
                                                 else FStar_UInt32.v max)));
                                        LowParse_Spec_Base.parser_kind_subkind
                                          =
                                          (FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserStrong);
                                        LowParse_Spec_Base.parser_kind_metadata
                                          = FStar_Pervasives_Native.None
                                      };
                                    LowParse_Writers_Parser.parser = ();
                                    LowParse_Writers_Parser.serializer = ();
                                    LowParse_Writers_Parser.jumper =
                                      (fun rrel ->
                                         fun rel ->
                                           fun input ->
                                             fun pos ->
                                               let h =
                                                 FStar_HyperStack_ST.get () in
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               let uu___2 =
                                                 let uu___3 =
                                                   match if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))
                                                   with
                                                   | uu___4 when
                                                       uu___4 = Prims.int_one
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                          ()) () () input pos
                                                   | uu___4 when
                                                       uu___4 =
                                                         (Prims.of_int (2))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                          ()) () () input pos
                                                   | uu___4 when
                                                       uu___4 =
                                                         (Prims.of_int (3))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                          ()) () () input pos
                                                   | uu___4 when
                                                       uu___4 =
                                                         (Prims.of_int (4))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                          ()) () () input pos in
                                                 FStar_UInt32.add
                                                   (FStar_UInt32.uint_to_t
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))))
                                                   uu___3 in
                                               FStar_UInt32.add pos uu___2)
                                  }))) () r in
                      match uu___1 with
                      | (b, len) ->
                          let sl =
                            {
                              LowParse_Slice.base = b;
                              LowParse_Slice.len = len
                            } in
                          let pos_pl =
                            FStar_UInt32.uint_to_t
                              (if (FStar_UInt32.v max) < (Prims.of_int (256))
                               then Prims.int_one
                               else
                                 if
                                   (FStar_UInt32.v max) <
                                     (Prims.parse_int "65536")
                                 then (Prims.of_int (2))
                                 else
                                   if
                                     (FStar_UInt32.v max) <
                                       (Prims.parse_int "16777216")
                                   then (Prims.of_int (3))
                                   else (Prims.of_int (4))) in
                          let len_pl = FStar_UInt32.sub len pos_pl in
                          let b_pl =
                            LowStar_Monotonic_Buffer.msub b pos_pl () in
                          LowParse_Writers_Effect.Correct
                            { rlptr_base = b_pl; rlptr_len = len_pl })))
let (lptr_of_vllist_ptr :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          LowParse_Writers_Effect.rptr ->
            ((unit, unit) lptr, unit, unit, Prims.l_False, unit)
              LowParse_Writers_Effect.read_repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun r ->
            LowParse_Writers_Effect.ReadRepr
              ((),
                (LowParse_Writers_Effect.mk_read_repr_impl () ()
                   (fun uu___ ->
                      let uu___1 =
                        LowParse_Writers_Effect.buffer_of_ptr
                          (LowParse_Writers_Parser.Parser
                             ((),
                               (Obj.magic
                                  {
                                    LowParse_Writers_Parser.kind =
                                      {
                                        LowParse_Spec_Base.parser_kind_low =
                                          ((if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4)))
                                             +
                                             (if
                                                Prims.int_zero >
                                                  (FStar_UInt32.v min)
                                              then Prims.int_zero
                                              else FStar_UInt32.v min));
                                        LowParse_Spec_Base.parser_kind_high =
                                          (FStar_Pervasives_Native.Some
                                             ((if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))
                                                +
                                                (if
                                                   (FStar_UInt32.v max) <
                                                     ((if
                                                         Prims.int_zero >
                                                           (FStar_UInt32.v
                                                              min)
                                                       then Prims.int_zero
                                                       else
                                                         FStar_UInt32.v min))
                                                 then
                                                   (if
                                                      Prims.int_zero >
                                                        (FStar_UInt32.v min)
                                                    then Prims.int_zero
                                                    else FStar_UInt32.v min)
                                                 else FStar_UInt32.v max)));
                                        LowParse_Spec_Base.parser_kind_subkind
                                          =
                                          (FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserStrong);
                                        LowParse_Spec_Base.parser_kind_metadata
                                          = FStar_Pervasives_Native.None
                                      };
                                    LowParse_Writers_Parser.parser = ();
                                    LowParse_Writers_Parser.serializer = ();
                                    LowParse_Writers_Parser.jumper =
                                      (fun rrel ->
                                         fun rel ->
                                           fun input ->
                                             fun pos ->
                                               let h =
                                                 FStar_HyperStack_ST.get () in
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               let uu___2 =
                                                 let uu___3 =
                                                   match if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))
                                                   with
                                                   | uu___4 when
                                                       uu___4 = Prims.int_one
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                          ()) () () input pos
                                                   | uu___4 when
                                                       uu___4 =
                                                         (Prims.of_int (2))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                          ()) () () input pos
                                                   | uu___4 when
                                                       uu___4 =
                                                         (Prims.of_int (3))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                          ()) () () input pos
                                                   | uu___4 when
                                                       uu___4 =
                                                         (Prims.of_int (4))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                          ()) () () input pos in
                                                 FStar_UInt32.add
                                                   (FStar_UInt32.uint_to_t
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))))
                                                   uu___3 in
                                               FStar_UInt32.add pos uu___2)
                                  }))) () r in
                      match uu___1 with
                      | (b, len) ->
                          let sl =
                            {
                              LowParse_Slice.base = b;
                              LowParse_Slice.len = len
                            } in
                          let pos_pl =
                            FStar_UInt32.uint_to_t
                              (if (FStar_UInt32.v max) < (Prims.of_int (256))
                               then Prims.int_one
                               else
                                 if
                                   (FStar_UInt32.v max) <
                                     (Prims.parse_int "65536")
                                 then (Prims.of_int (2))
                                 else
                                   if
                                     (FStar_UInt32.v max) <
                                       (Prims.parse_int "16777216")
                                   then (Prims.of_int (3))
                                   else (Prims.of_int (4))) in
                          let len_pl = FStar_UInt32.sub len pos_pl in
                          let b_pl =
                            LowStar_Monotonic_Buffer.msub b pos_pl () in
                          LowParse_Writers_Effect.Correct
                            { rlptr_base = b_pl; rlptr_len = len_pl })))

let (parse_vllist_nil_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        (unit, unit, unit, Prims.l_True, unit, Prims.l_False, unit, unit)
          LowParse_Writers_Effect.repr_impl)
  =
  fun uu___2 ->
    fun uu___1 ->
      fun uu___ ->
        (fun inv ->
           fun p ->
             fun max ->
               Obj.magic
                 (LowParse_Writers_Effect.mk_repr_impl
                    (LowParse_Writers_Parser.Parser
                       ((),
                         (Obj.magic
                            {
                              LowParse_Writers_Parser.kind =
                                {
                                  LowParse_Spec_Base.parser_kind_low =
                                    Prims.int_zero;
                                  LowParse_Spec_Base.parser_kind_high =
                                    (FStar_Pervasives_Native.Some
                                       Prims.int_zero);
                                  LowParse_Spec_Base.parser_kind_subkind =
                                    (FStar_Pervasives_Native.Some
                                       LowParse_Spec_Base.ParserStrong);
                                  LowParse_Spec_Base.parser_kind_metadata =
                                    (FStar_Pervasives_Native.Some
                                       LowParse_Spec_Base.ParserKindMetadataTotal)
                                };
                              LowParse_Writers_Parser.parser = ();
                              LowParse_Writers_Parser.serializer = ();
                              LowParse_Writers_Parser.jumper =
                                (fun rrel ->
                                   fun rel ->
                                     fun input ->
                                       fun pos ->
                                         let h = FStar_HyperStack_ST.get () in
                                         FStar_UInt32.add pos
                                           (FStar_UInt32.uint_to_t
                                              Prims.int_zero))
                            })))
                    (LowParse_Writers_Parser.Parser
                       ((),
                         (Obj.magic
                            {
                              LowParse_Writers_Parser.kind =
                                {
                                  LowParse_Spec_Base.parser_kind_low =
                                    ((if
                                        (FStar_UInt32.v max) <
                                          (Prims.of_int (256))
                                      then Prims.int_one
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "65536")
                                        then (Prims.of_int (2))
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "16777216")
                                          then (Prims.of_int (3))
                                          else (Prims.of_int (4)))
                                       + Prims.int_zero);
                                  LowParse_Spec_Base.parser_kind_high =
                                    (FStar_Pervasives_Native.Some
                                       ((if
                                           (FStar_UInt32.v max) <
                                             (Prims.of_int (256))
                                         then Prims.int_one
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "65536")
                                           then (Prims.of_int (2))
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "16777216")
                                             then (Prims.of_int (3))
                                             else (Prims.of_int (4)))
                                          +
                                          (if
                                             (FStar_UInt32.v max) <
                                               Prims.int_zero
                                           then Prims.int_zero
                                           else FStar_UInt32.v max)));
                                  LowParse_Spec_Base.parser_kind_subkind =
                                    (FStar_Pervasives_Native.Some
                                       LowParse_Spec_Base.ParserStrong);
                                  LowParse_Spec_Base.parser_kind_metadata =
                                    FStar_Pervasives_Native.None
                                };
                              LowParse_Writers_Parser.parser = ();
                              LowParse_Writers_Parser.serializer = ();
                              LowParse_Writers_Parser.jumper =
                                (fun rrel ->
                                   fun rel ->
                                     fun input ->
                                       fun pos ->
                                         let h = FStar_HyperStack_ST.get () in
                                         let h1 = FStar_HyperStack_ST.get () in
                                         let h2 = FStar_HyperStack_ST.get () in
                                         let uu___ =
                                           let uu___1 =
                                             match if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.of_int (256))
                                                   then Prims.int_one
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "65536")
                                                     then (Prims.of_int (2))
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "16777216")
                                                       then
                                                         (Prims.of_int (3))
                                                       else
                                                         (Prims.of_int (4))
                                             with
                                             | uu___2 when
                                                 uu___2 = Prims.int_one ->
                                                 (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                    ()) () () input pos
                                             | uu___2 when
                                                 uu___2 = (Prims.of_int (2))
                                                 ->
                                                 (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                    ()) () () input pos
                                             | uu___2 when
                                                 uu___2 = (Prims.of_int (3))
                                                 ->
                                                 (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                    ()) () () input pos
                                             | uu___2 when
                                                 uu___2 = (Prims.of_int (4))
                                                 ->
                                                 (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                    ()) () () input pos in
                                           FStar_UInt32.add
                                             (FStar_UInt32.uint_to_t
                                                (if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4))))
                                             uu___1 in
                                         FStar_UInt32.add pos uu___)
                            }))) () () () () ()
                    (fun b ->
                       fun len ->
                         fun uu___ ->
                           let pos_pl =
                             FStar_UInt32.uint_to_t
                               (if
                                  (FStar_UInt32.v max) < (Prims.of_int (256))
                                then Prims.int_one
                                else
                                  if
                                    (FStar_UInt32.v max) <
                                      (Prims.parse_int "65536")
                                  then (Prims.of_int (2))
                                  else
                                    if
                                      (FStar_UInt32.v max) <
                                        (Prims.parse_int "16777216")
                                    then (Prims.of_int (3))
                                    else (Prims.of_int (4))) in
                           if FStar_UInt32.lt len pos_pl
                           then LowParse_Writers_Effect.IOverflow
                           else
                             (let h = FStar_HyperStack_ST.get () in
                              let sl =
                                {
                                  LowParse_Slice.base = b;
                                  LowParse_Slice.len = len
                                } in
                              (let h1 = FStar_HyperStack_ST.get () in
                               let uu___3 =
                                 (match if
                                          (FStar_UInt32.v max) <
                                            (Prims.of_int (256))
                                        then Prims.int_one
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "65536")
                                          then (Prims.of_int (2))
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "16777216")
                                            then (Prims.of_int (3))
                                            else (Prims.of_int (4))
                                  with
                                  | uu___4 when uu___4 = Prims.int_one ->
                                      (fun x ->
                                         fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos ->
                                                 let h0 =
                                                   FStar_HyperStack_ST.get () in
                                                 let len1 =
                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                     () x () ()
                                                     (match input with
                                                      | {
                                                          LowParse_Slice.base
                                                            = base;
                                                          LowParse_Slice.len
                                                            = len2;_}
                                                          -> base) pos in
                                                 let h2 =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos len1)
                                  | uu___4 when uu___4 = (Prims.of_int (2))
                                      ->
                                      (fun x ->
                                         fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos ->
                                                 let h0 =
                                                   FStar_HyperStack_ST.get () in
                                                 let len1 =
                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                     () x () ()
                                                     (match input with
                                                      | {
                                                          LowParse_Slice.base
                                                            = base;
                                                          LowParse_Slice.len
                                                            = len2;_}
                                                          -> base) pos in
                                                 let h2 =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos len1)
                                  | uu___4 when uu___4 = (Prims.of_int (3))
                                      ->
                                      (fun x ->
                                         fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos ->
                                                 let h0 =
                                                   FStar_HyperStack_ST.get () in
                                                 let len1 =
                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                     () x () ()
                                                     (match input with
                                                      | {
                                                          LowParse_Slice.base
                                                            = base;
                                                          LowParse_Slice.len
                                                            = len2;_}
                                                          -> base) pos in
                                                 let h2 =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos len1)
                                  | uu___4 when uu___4 = (Prims.of_int (4))
                                      ->
                                      (fun x ->
                                         fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos ->
                                                 let h0 =
                                                   FStar_HyperStack_ST.get () in
                                                 let len1 =
                                                   LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                     () x () ()
                                                     (match input with
                                                      | {
                                                          LowParse_Slice.base
                                                            = base;
                                                          LowParse_Slice.len
                                                            = len2;_}
                                                          -> base) pos in
                                                 let h2 =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos len1))
                                   (FStar_UInt32.sub pos_pl
                                      (FStar_UInt32.add
                                         (FStar_UInt32.uint_to_t
                                            Prims.int_zero)
                                         (FStar_UInt32.uint_to_t
                                            (if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4))))))
                                   () () (Obj.magic sl)
                                   (FStar_UInt32.uint_to_t Prims.int_zero) in
                               let h2 = FStar_HyperStack_ST.get () in ());
                              LowParse_Writers_Effect.ICorrect ((), pos_pl)))))
          uu___2 uu___1 uu___
let (parse_vllist_nil :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        (unit, unit, unit, unit, unit, Prims.l_False, unit)
          LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun max ->
        LowParse_Writers_Effect.Repr
          ((),
            (Obj.magic
               (LowParse_Writers_Effect.mk_repr_impl
                  (LowParse_Writers_Parser.Parser
                     ((),
                       (Obj.magic
                          {
                            LowParse_Writers_Parser.kind =
                              {
                                LowParse_Spec_Base.parser_kind_low =
                                  Prims.int_zero;
                                LowParse_Spec_Base.parser_kind_high =
                                  (FStar_Pervasives_Native.Some
                                     Prims.int_zero);
                                LowParse_Spec_Base.parser_kind_subkind =
                                  (FStar_Pervasives_Native.Some
                                     LowParse_Spec_Base.ParserStrong);
                                LowParse_Spec_Base.parser_kind_metadata =
                                  (FStar_Pervasives_Native.Some
                                     LowParse_Spec_Base.ParserKindMetadataTotal)
                              };
                            LowParse_Writers_Parser.parser = ();
                            LowParse_Writers_Parser.serializer = ();
                            LowParse_Writers_Parser.jumper =
                              (fun rrel ->
                                 fun rel ->
                                   fun input ->
                                     fun pos ->
                                       let h = FStar_HyperStack_ST.get () in
                                       FStar_UInt32.add pos
                                         (FStar_UInt32.uint_to_t
                                            Prims.int_zero))
                          })))
                  (LowParse_Writers_Parser.Parser
                     ((),
                       (Obj.magic
                          {
                            LowParse_Writers_Parser.kind =
                              {
                                LowParse_Spec_Base.parser_kind_low =
                                  ((if
                                      (FStar_UInt32.v max) <
                                        (Prims.of_int (256))
                                    then Prims.int_one
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "65536")
                                      then (Prims.of_int (2))
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "16777216")
                                        then (Prims.of_int (3))
                                        else (Prims.of_int (4)))
                                     + Prims.int_zero);
                                LowParse_Spec_Base.parser_kind_high =
                                  (FStar_Pervasives_Native.Some
                                     ((if
                                         (FStar_UInt32.v max) <
                                           (Prims.of_int (256))
                                       then Prims.int_one
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "65536")
                                         then (Prims.of_int (2))
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "16777216")
                                           then (Prims.of_int (3))
                                           else (Prims.of_int (4)))
                                        +
                                        (if
                                           (FStar_UInt32.v max) <
                                             Prims.int_zero
                                         then Prims.int_zero
                                         else FStar_UInt32.v max)));
                                LowParse_Spec_Base.parser_kind_subkind =
                                  (FStar_Pervasives_Native.Some
                                     LowParse_Spec_Base.ParserStrong);
                                LowParse_Spec_Base.parser_kind_metadata =
                                  FStar_Pervasives_Native.None
                              };
                            LowParse_Writers_Parser.parser = ();
                            LowParse_Writers_Parser.serializer = ();
                            LowParse_Writers_Parser.jumper =
                              (fun rrel ->
                                 fun rel ->
                                   fun input ->
                                     fun pos ->
                                       let h = FStar_HyperStack_ST.get () in
                                       let h1 = FStar_HyperStack_ST.get () in
                                       let h2 = FStar_HyperStack_ST.get () in
                                       let uu___ =
                                         let uu___1 =
                                           match if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4))
                                           with
                                           | uu___2 when
                                               uu___2 = Prims.int_one ->
                                               (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                  ()) () () input pos
                                           | uu___2 when
                                               uu___2 = (Prims.of_int (2)) ->
                                               (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                  ()) () () input pos
                                           | uu___2 when
                                               uu___2 = (Prims.of_int (3)) ->
                                               (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                  ()) () () input pos
                                           | uu___2 when
                                               uu___2 = (Prims.of_int (4)) ->
                                               (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                  ()) () () input pos in
                                         FStar_UInt32.add
                                           (FStar_UInt32.uint_to_t
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4))))
                                           uu___1 in
                                       FStar_UInt32.add pos uu___)
                          }))) () () () () ()
                  (fun b ->
                     fun len ->
                       fun uu___ ->
                         let pos_pl =
                           FStar_UInt32.uint_to_t
                             (if (FStar_UInt32.v max) < (Prims.of_int (256))
                              then Prims.int_one
                              else
                                if
                                  (FStar_UInt32.v max) <
                                    (Prims.parse_int "65536")
                                then (Prims.of_int (2))
                                else
                                  if
                                    (FStar_UInt32.v max) <
                                      (Prims.parse_int "16777216")
                                  then (Prims.of_int (3))
                                  else (Prims.of_int (4))) in
                         if FStar_UInt32.lt len pos_pl
                         then LowParse_Writers_Effect.IOverflow
                         else
                           (let h = FStar_HyperStack_ST.get () in
                            let sl =
                              {
                                LowParse_Slice.base = b;
                                LowParse_Slice.len = len
                              } in
                            (let h1 = FStar_HyperStack_ST.get () in
                             let uu___3 =
                               (match if
                                        (FStar_UInt32.v max) <
                                          (Prims.of_int (256))
                                      then Prims.int_one
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "65536")
                                        then (Prims.of_int (2))
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "16777216")
                                          then (Prims.of_int (3))
                                          else (Prims.of_int (4))
                                with
                                | uu___4 when uu___4 = Prims.int_one ->
                                    (fun x ->
                                       fun rrel ->
                                         fun rel ->
                                           fun input ->
                                             fun pos ->
                                               let h0 =
                                                 FStar_HyperStack_ST.get () in
                                               let len1 =
                                                 LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                   () x () ()
                                                   (match input with
                                                    | {
                                                        LowParse_Slice.base =
                                                          base;
                                                        LowParse_Slice.len =
                                                          len2;_}
                                                        -> base) pos in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               FStar_UInt32.add pos len1)
                                | uu___4 when uu___4 = (Prims.of_int (2)) ->
                                    (fun x ->
                                       fun rrel ->
                                         fun rel ->
                                           fun input ->
                                             fun pos ->
                                               let h0 =
                                                 FStar_HyperStack_ST.get () in
                                               let len1 =
                                                 LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                   () x () ()
                                                   (match input with
                                                    | {
                                                        LowParse_Slice.base =
                                                          base;
                                                        LowParse_Slice.len =
                                                          len2;_}
                                                        -> base) pos in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               FStar_UInt32.add pos len1)
                                | uu___4 when uu___4 = (Prims.of_int (3)) ->
                                    (fun x ->
                                       fun rrel ->
                                         fun rel ->
                                           fun input ->
                                             fun pos ->
                                               let h0 =
                                                 FStar_HyperStack_ST.get () in
                                               let len1 =
                                                 LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                   () x () ()
                                                   (match input with
                                                    | {
                                                        LowParse_Slice.base =
                                                          base;
                                                        LowParse_Slice.len =
                                                          len2;_}
                                                        -> base) pos in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               FStar_UInt32.add pos len1)
                                | uu___4 when uu___4 = (Prims.of_int (4)) ->
                                    (fun x ->
                                       fun rrel ->
                                         fun rel ->
                                           fun input ->
                                             fun pos ->
                                               let h0 =
                                                 FStar_HyperStack_ST.get () in
                                               let len1 =
                                                 LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                   () x () ()
                                                   (match input with
                                                    | {
                                                        LowParse_Slice.base =
                                                          base;
                                                        LowParse_Slice.len =
                                                          len2;_}
                                                        -> base) pos in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               FStar_UInt32.add pos len1))
                                 (FStar_UInt32.sub pos_pl
                                    (FStar_UInt32.add
                                       (FStar_UInt32.uint_to_t Prims.int_zero)
                                       (FStar_UInt32.uint_to_t
                                          (if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4)))))) ()
                                 () (Obj.magic sl)
                                 (FStar_UInt32.uint_to_t Prims.int_zero) in
                             let h2 = FStar_HyperStack_ST.get () in ());
                            LowParse_Writers_Effect.ICorrect ((), pos_pl))))))

let (parse_vllist_snoc_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit, unit, unit, Obj.t, Obj.t, Prims.l_False, unit, unit)
            LowParse_Writers_Effect.repr_impl)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun p ->
               fun min ->
                 fun max ->
                   Obj.magic
                     (LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        (((if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4)))
                                            +
                                            (if
                                               Prims.int_zero >
                                                 (FStar_UInt32.v min)
                                             then Prims.int_zero
                                             else FStar_UInt32.v min))
                                           +
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (if
                                           match match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_high
                                           with
                                           | FStar_Pervasives_Native.Some
                                               uu___ -> true
                                           | uu___ -> false
                                         then
                                           FStar_Pervasives_Native.Some
                                             (((if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4)))
                                                 +
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      ((if
                                                          Prims.int_zero >
                                                            (FStar_UInt32.v
                                                               min)
                                                        then Prims.int_zero
                                                        else
                                                          FStar_UInt32.v min))
                                                  then
                                                    (if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min)
                                                  else FStar_UInt32.v max))
                                                +
                                                (match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     y -> y))
                                         else FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_subkind)
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserConsumesAll)
                                         then
                                           FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserConsumesAll
                                         else
                                           if
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_subkind)
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong)
                                           then
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong
                                           else
                                             if
                                               (if
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_high)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       Prims.int_zero)
                                                then
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_subkind)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong)
                                                else false)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong
                                             else
                                               FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (match (FStar_Pervasives_Native.None,
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata))
                                         with
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail),
                                            uu___) ->
                                             FStar_Pervasives_Native.None
                                         | (uu___,
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail))
                                             ->
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_metadata)
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal),
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal))
                                             -> FStar_Pervasives_Native.None
                                         | uu___ ->
                                             FStar_Pervasives_Native.None)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               let h3 =
                                                 FStar_HyperStack_ST.get () in
                                               let uu___1 =
                                                 let uu___2 =
                                                   match if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))
                                                   with
                                                   | uu___3 when
                                                       uu___3 = Prims.int_one
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (2))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (3))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (4))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                          ()) () () input pos in
                                                 FStar_UInt32.add
                                                   (FStar_UInt32.uint_to_t
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))))
                                                   uu___2 in
                                               FStar_UInt32.add pos uu___1 in
                                             match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper () () input uu___)
                                })))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              Prims.int_zero >
                                                (FStar_UInt32.v min)
                                            then Prims.int_zero
                                            else FStar_UInt32.v min));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (FStar_Pervasives_Native.Some
                                           ((if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))
                                              +
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   ((if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min))
                                               then
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min)
                                               else FStar_UInt32.v max)));
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserStrong);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        = FStar_Pervasives_Native.None
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let h1 =
                                               FStar_HyperStack_ST.get () in
                                             let h2 =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let uu___1 =
                                                 match if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))
                                                 with
                                                 | uu___2 when
                                                     uu___2 = Prims.int_one
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (2))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (3))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (4))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                        ()) () () input pos in
                                               FStar_UInt32.add
                                                 (FStar_UInt32.uint_to_t
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))))
                                                 uu___1 in
                                             FStar_UInt32.add pos uu___)
                                }))) () () () () ()
                        (fun b ->
                           fun len ->
                             fun pos ->
                               let h = FStar_HyperStack_ST.get () in
                               let sl =
                                 {
                                   LowParse_Slice.base = b;
                                   LowParse_Slice.len = len
                                 } in
                               let pos_last =
                                 let h1 = FStar_HyperStack_ST.get () in
                                 let h2 = FStar_HyperStack_ST.get () in
                                 let h3 = FStar_HyperStack_ST.get () in
                                 let uu___ =
                                   let uu___1 =
                                     (match if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))
                                      with
                                      | uu___2 when uu___2 = Prims.int_one ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_1
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (2)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_2
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (3)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_3
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (4)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_4
                                            ()) () () (Obj.magic sl)
                                       (FStar_UInt32.uint_to_t Prims.int_zero) in
                                   FStar_UInt32.add
                                     (FStar_UInt32.uint_to_t
                                        (if
                                           (FStar_UInt32.v max) <
                                             (Prims.of_int (256))
                                         then Prims.int_one
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "65536")
                                           then (Prims.of_int (2))
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "16777216")
                                             then (Prims.of_int (3))
                                             else (Prims.of_int (4)))) uu___1 in
                                 FStar_UInt32.add
                                   (FStar_UInt32.uint_to_t Prims.int_zero)
                                   uu___ in
                               let pos_pl =
                                 FStar_UInt32.uint_to_t
                                   (if
                                      (FStar_UInt32.v max) <
                                        (Prims.of_int (256))
                                    then Prims.int_one
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "65536")
                                      then (Prims.of_int (2))
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "16777216")
                                        then (Prims.of_int (3))
                                        else (Prims.of_int (4))) in
                               (let h1 = FStar_HyperStack_ST.get () in
                                let uu___1 =
                                  (match if
                                           (FStar_UInt32.v max) <
                                             (Prims.of_int (256))
                                         then Prims.int_one
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "65536")
                                           then (Prims.of_int (2))
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "16777216")
                                             then (Prims.of_int (3))
                                             else (Prims.of_int (4))
                                   with
                                   | uu___2 when uu___2 = Prims.int_one ->
                                       (fun x ->
                                          fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos1 ->
                                                  let h0 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let len1 =
                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                      () x () ()
                                                      (match input with
                                                       | {
                                                           LowParse_Slice.base
                                                             = base;
                                                           LowParse_Slice.len
                                                             = len2;_}
                                                           -> base) pos1 in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  FStar_UInt32.add pos1 len1)
                                   | uu___2 when uu___2 = (Prims.of_int (2))
                                       ->
                                       (fun x ->
                                          fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos1 ->
                                                  let h0 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let len1 =
                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                      () x () ()
                                                      (match input with
                                                       | {
                                                           LowParse_Slice.base
                                                             = base;
                                                           LowParse_Slice.len
                                                             = len2;_}
                                                           -> base) pos1 in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  FStar_UInt32.add pos1 len1)
                                   | uu___2 when uu___2 = (Prims.of_int (3))
                                       ->
                                       (fun x ->
                                          fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos1 ->
                                                  let h0 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let len1 =
                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                      () x () ()
                                                      (match input with
                                                       | {
                                                           LowParse_Slice.base
                                                             = base;
                                                           LowParse_Slice.len
                                                             = len2;_}
                                                           -> base) pos1 in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  FStar_UInt32.add pos1 len1)
                                   | uu___2 when uu___2 = (Prims.of_int (4))
                                       ->
                                       (fun x ->
                                          fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos1 ->
                                                  let h0 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let len1 =
                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                      () x () ()
                                                      (match input with
                                                       | {
                                                           LowParse_Slice.base
                                                             = base;
                                                           LowParse_Slice.len
                                                             = len2;_}
                                                           -> base) pos1 in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  FStar_UInt32.add pos1 len1))
                                    (FStar_UInt32.sub pos
                                       (FStar_UInt32.add
                                          (FStar_UInt32.uint_to_t
                                             Prims.int_zero)
                                          (FStar_UInt32.uint_to_t
                                             (if
                                                (FStar_UInt32.v max) <
                                                  (Prims.of_int (256))
                                              then Prims.int_one
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "65536")
                                                then (Prims.of_int (2))
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "16777216")
                                                  then (Prims.of_int (3))
                                                  else (Prims.of_int (4))))))
                                    () () (Obj.magic sl)
                                    (FStar_UInt32.uint_to_t Prims.int_zero) in
                                let h2 = FStar_HyperStack_ST.get () in ());
                               LowParse_Writers_Effect.ICorrect ((), pos))))
            uu___3 uu___2 uu___1 uu___
let (parse_vllist_snoc :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit, unit, unit, unit, unit, Prims.l_False, unit)
            LowParse_Writers_Effect.repr)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun p ->
               fun min ->
                 fun max ->
                   Obj.magic
                     (LowParse_Writers_Effect.Repr
                        ((),
                          (Obj.magic
                             (LowParse_Writers_Effect.mk_repr_impl
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                (((if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.of_int (256))
                                                   then Prims.int_one
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "65536")
                                                     then (Prims.of_int (2))
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "16777216")
                                                       then
                                                         (Prims.of_int (3))
                                                       else
                                                         (Prims.of_int (4)))
                                                    +
                                                    (if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min))
                                                   +
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (if
                                                   match match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_high
                                                   with
                                                   | FStar_Pervasives_Native.Some
                                                       uu___ -> true
                                                   | uu___ -> false
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     (((if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.of_int (256))
                                                        then Prims.int_one
                                                        else
                                                          if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.parse_int "65536")
                                                          then
                                                            (Prims.of_int (2))
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "16777216")
                                                            then
                                                              (Prims.of_int (3))
                                                            else
                                                              (Prims.of_int (4)))
                                                         +
                                                         (if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              ((if
                                                                  Prims.int_zero
                                                                    >
                                                                    (
                                                                    FStar_UInt32.v
                                                                    min)
                                                                then
                                                                  Prims.int_zero
                                                                else
                                                                  FStar_UInt32.v
                                                                    min))
                                                          then
                                                            (if
                                                               Prims.int_zero
                                                                 >
                                                                 (FStar_UInt32.v
                                                                    min)
                                                             then
                                                               Prims.int_zero
                                                             else
                                                               FStar_UInt32.v
                                                                 min)
                                                          else
                                                            FStar_UInt32.v
                                                              max))
                                                        +
                                                        (match match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_high
                                                         with
                                                         | FStar_Pervasives_Native.Some
                                                             y -> y))
                                                 else
                                                   FStar_Pervasives_Native.None);
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_subkind)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserConsumesAll)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserConsumesAll
                                                 else
                                                   if
                                                     (match match match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_subkind)
                                                       =
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong)
                                                   then
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong
                                                   else
                                                     if
                                                       (if
                                                          (match match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                           with
                                                           | {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 parser_kind_low;
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 parser_kind_high;
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 parser_kind_subkind;
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 parser_kind_metadata;_}
                                                               ->
                                                               parser_kind_high)
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               Prims.int_zero)
                                                        then
                                                          (match match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                           with
                                                           | {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 parser_kind_low;
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 parser_kind_high;
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 parser_kind_subkind;
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 parser_kind_metadata;_}
                                                               ->
                                                               parser_kind_subkind)
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserStrong)
                                                        else false)
                                                     then
                                                       FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserStrong
                                                     else
                                                       FStar_Pervasives_Native.None);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                (match (FStar_Pervasives_Native.None,
                                                         (match match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_metadata))
                                                 with
                                                 | (FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataFail),
                                                    uu___) ->
                                                     FStar_Pervasives_Native.None
                                                 | (uu___,
                                                    FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataFail))
                                                     ->
                                                     (match match match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_metadata)
                                                 | (FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                    FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                     ->
                                                     FStar_Pervasives_Native.None
                                                 | uu___ ->
                                                     FStar_Pervasives_Native.None)
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let h1 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       let h2 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       let h3 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       let uu___1 =
                                                         let uu___2 =
                                                           match if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                 then
                                                                   Prims.int_one
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                   then
                                                                    (Prims.of_int (2))
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                           with
                                                           | uu___3 when
                                                               uu___3 =
                                                                 Prims.int_one
                                                               ->
                                                               (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                  ()) () ()
                                                                 input pos
                                                           | uu___3 when
                                                               uu___3 =
                                                                 (Prims.of_int (2))
                                                               ->
                                                               (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                  ()) () ()
                                                                 input pos
                                                           | uu___3 when
                                                               uu___3 =
                                                                 (Prims.of_int (3))
                                                               ->
                                                               (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                  ()) () ()
                                                                 input pos
                                                           | uu___3 when
                                                               uu___3 =
                                                                 (Prims.of_int (4))
                                                               ->
                                                               (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                  ()) () ()
                                                                 input pos in
                                                         FStar_UInt32.add
                                                           (FStar_UInt32.uint_to_t
                                                              (if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))))
                                                           uu___2 in
                                                       FStar_UInt32.add pos
                                                         uu___1 in
                                                     match match p with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         ->
                                                         jumper () () input
                                                           uu___)
                                        })))
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                ((if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      Prims.int_zero >
                                                        (FStar_UInt32.v min)
                                                    then Prims.int_zero
                                                    else FStar_UInt32.v min));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   ((if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4)))
                                                      +
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           ((if
                                                               Prims.int_zero
                                                                 >
                                                                 (FStar_UInt32.v
                                                                    min)
                                                             then
                                                               Prims.int_zero
                                                             else
                                                               FStar_UInt32.v
                                                                 min))
                                                       then
                                                         (if
                                                            Prims.int_zero >
                                                              (FStar_UInt32.v
                                                                 min)
                                                          then Prims.int_zero
                                                          else
                                                            FStar_UInt32.v
                                                              min)
                                                       else
                                                         FStar_UInt32.v max)));
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserStrong);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                FStar_Pervasives_Native.None
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h1 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let uu___1 =
                                                         match if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))
                                                         with
                                                         | uu___2 when
                                                             uu___2 =
                                                               Prims.int_one
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (2))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (3))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (4))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                ()) () ()
                                                               input pos in
                                                       FStar_UInt32.add
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))))
                                                         uu___1 in
                                                     FStar_UInt32.add pos
                                                       uu___)
                                        }))) () () () () ()
                                (fun b ->
                                   fun len ->
                                     fun pos ->
                                       let h = FStar_HyperStack_ST.get () in
                                       let sl =
                                         {
                                           LowParse_Slice.base = b;
                                           LowParse_Slice.len = len
                                         } in
                                       let pos_last =
                                         let h1 = FStar_HyperStack_ST.get () in
                                         let h2 = FStar_HyperStack_ST.get () in
                                         let h3 = FStar_HyperStack_ST.get () in
                                         let uu___ =
                                           let uu___1 =
                                             (match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  LowParse_Low_BoundedInt.read_bounded_integer_1
                                                    ()
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  LowParse_Low_BoundedInt.read_bounded_integer_2
                                                    ()
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  LowParse_Low_BoundedInt.read_bounded_integer_3
                                                    ()
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  LowParse_Low_BoundedInt.read_bounded_integer_4
                                                    ()) () () (Obj.magic sl)
                                               (FStar_UInt32.uint_to_t
                                                  Prims.int_zero) in
                                           FStar_UInt32.add
                                             (FStar_UInt32.uint_to_t
                                                (if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4))))
                                             uu___1 in
                                         FStar_UInt32.add
                                           (FStar_UInt32.uint_to_t
                                              Prims.int_zero) uu___ in
                                       let pos_pl =
                                         FStar_UInt32.uint_to_t
                                           (if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))) in
                                       (let h1 = FStar_HyperStack_ST.get () in
                                        let uu___1 =
                                          (match if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4))
                                           with
                                           | uu___2 when
                                               uu___2 = Prims.int_one ->
                                               (fun x ->
                                                  fun rrel ->
                                                    fun rel ->
                                                      fun input ->
                                                        fun pos1 ->
                                                          let h0 =
                                                            FStar_HyperStack_ST.get
                                                              () in
                                                          let len1 =
                                                            LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                              () x () ()
                                                              (match input
                                                               with
                                                               | {
                                                                   LowParse_Slice.base
                                                                    = base;
                                                                   LowParse_Slice.len
                                                                    = len2;_}
                                                                   -> base)
                                                              pos1 in
                                                          let h2 =
                                                            FStar_HyperStack_ST.get
                                                              () in
                                                          FStar_UInt32.add
                                                            pos1 len1)
                                           | uu___2 when
                                               uu___2 = (Prims.of_int (2)) ->
                                               (fun x ->
                                                  fun rrel ->
                                                    fun rel ->
                                                      fun input ->
                                                        fun pos1 ->
                                                          let h0 =
                                                            FStar_HyperStack_ST.get
                                                              () in
                                                          let len1 =
                                                            LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                              () x () ()
                                                              (match input
                                                               with
                                                               | {
                                                                   LowParse_Slice.base
                                                                    = base;
                                                                   LowParse_Slice.len
                                                                    = len2;_}
                                                                   -> base)
                                                              pos1 in
                                                          let h2 =
                                                            FStar_HyperStack_ST.get
                                                              () in
                                                          FStar_UInt32.add
                                                            pos1 len1)
                                           | uu___2 when
                                               uu___2 = (Prims.of_int (3)) ->
                                               (fun x ->
                                                  fun rrel ->
                                                    fun rel ->
                                                      fun input ->
                                                        fun pos1 ->
                                                          let h0 =
                                                            FStar_HyperStack_ST.get
                                                              () in
                                                          let len1 =
                                                            LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                              () x () ()
                                                              (match input
                                                               with
                                                               | {
                                                                   LowParse_Slice.base
                                                                    = base;
                                                                   LowParse_Slice.len
                                                                    = len2;_}
                                                                   -> base)
                                                              pos1 in
                                                          let h2 =
                                                            FStar_HyperStack_ST.get
                                                              () in
                                                          FStar_UInt32.add
                                                            pos1 len1)
                                           | uu___2 when
                                               uu___2 = (Prims.of_int (4)) ->
                                               (fun x ->
                                                  fun rrel ->
                                                    fun rel ->
                                                      fun input ->
                                                        fun pos1 ->
                                                          let h0 =
                                                            FStar_HyperStack_ST.get
                                                              () in
                                                          let len1 =
                                                            LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                              () x () ()
                                                              (match input
                                                               with
                                                               | {
                                                                   LowParse_Slice.base
                                                                    = base;
                                                                   LowParse_Slice.len
                                                                    = len2;_}
                                                                   -> base)
                                                              pos1 in
                                                          let h2 =
                                                            FStar_HyperStack_ST.get
                                                              () in
                                                          FStar_UInt32.add
                                                            pos1 len1))
                                            (FStar_UInt32.sub pos
                                               (FStar_UInt32.add
                                                  (FStar_UInt32.uint_to_t
                                                     Prims.int_zero)
                                                  (FStar_UInt32.uint_to_t
                                                     (if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.of_int (256))
                                                      then Prims.int_one
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "65536")
                                                        then
                                                          (Prims.of_int (2))
                                                        else
                                                          if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.parse_int "16777216")
                                                          then
                                                            (Prims.of_int (3))
                                                          else
                                                            (Prims.of_int (4))))))
                                            () () (Obj.magic sl)
                                            (FStar_UInt32.uint_to_t
                                               Prims.int_zero) in
                                        let h2 = FStar_HyperStack_ST.get () in
                                        ());
                                       LowParse_Writers_Effect.ICorrect
                                         ((), pos))))))) uu___3 uu___2 uu___1
            uu___
let (parse_vllist_snoc_ho :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          unit ->
            unit ->
              unit ->
                (unit ->
                   (unit, unit, unit, unit, unit, unit, unit)
                     LowParse_Writers_Effect.repr)
                  ->
                  (unit, unit, unit, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun pre ->
            fun post ->
              fun post_err ->
                fun f ->
                  LowParse_Writers_Effect.Repr
                    ((),
                      (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                         (Obj.magic ()) () () () (Obj.magic ()) () () () ()
                         () ()
                         (LowParse_Writers_Effect.frame_impl
                            (LowParse_Writers_Parser.Parser
                               ((),
                                 (Obj.magic
                                    {
                                      LowParse_Writers_Parser.kind =
                                        {
                                          LowParse_Spec_Base.parser_kind_low
                                            =
                                            ((if
                                                (FStar_UInt32.v max) <
                                                  (Prims.of_int (256))
                                              then Prims.int_one
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "65536")
                                                then (Prims.of_int (2))
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "16777216")
                                                  then (Prims.of_int (3))
                                                  else (Prims.of_int (4)))
                                               +
                                               (if
                                                  Prims.int_zero >
                                                    (FStar_UInt32.v min)
                                                then Prims.int_zero
                                                else FStar_UInt32.v min));
                                          LowParse_Spec_Base.parser_kind_high
                                            =
                                            (FStar_Pervasives_Native.Some
                                               ((if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4)))
                                                  +
                                                  (if
                                                     (FStar_UInt32.v max) <
                                                       ((if
                                                           Prims.int_zero >
                                                             (FStar_UInt32.v
                                                                min)
                                                         then Prims.int_zero
                                                         else
                                                           FStar_UInt32.v min))
                                                   then
                                                     (if
                                                        Prims.int_zero >
                                                          (FStar_UInt32.v min)
                                                      then Prims.int_zero
                                                      else FStar_UInt32.v min)
                                                   else FStar_UInt32.v max)));
                                          LowParse_Spec_Base.parser_kind_subkind
                                            =
                                            (FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong);
                                          LowParse_Spec_Base.parser_kind_metadata
                                            = FStar_Pervasives_Native.None
                                        };
                                      LowParse_Writers_Parser.parser = ();
                                      LowParse_Writers_Parser.serializer = ();
                                      LowParse_Writers_Parser.jumper =
                                        (fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos ->
                                                 let h =
                                                   FStar_HyperStack_ST.get () in
                                                 let h1 =
                                                   FStar_HyperStack_ST.get () in
                                                 let h2 =
                                                   FStar_HyperStack_ST.get () in
                                                 let uu___ =
                                                   let uu___1 =
                                                     match if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.of_int (256))
                                                           then Prims.int_one
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "65536")
                                                             then
                                                               (Prims.of_int (2))
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "16777216")
                                                               then
                                                                 (Prims.of_int (3))
                                                               else
                                                                 (Prims.of_int (4))
                                                     with
                                                     | uu___2 when
                                                         uu___2 =
                                                           Prims.int_one
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (2))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (3))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (4))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                            ()) () () input
                                                           pos in
                                                   FStar_UInt32.add
                                                     (FStar_UInt32.uint_to_t
                                                        (if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))))
                                                     uu___1 in
                                                 FStar_UInt32.add pos uu___)
                                    }))) () p () () ()
                            (fun uu___ ->
                               (fun uu___ ->
                                  Obj.magic
                                    (LowParse_Writers_Effect.Repr
                                       ((),
                                         (LowParse_Writers_Effect.recast_writer_impl
                                            (LowParse_Writers_Parser.Parser
                                               ((),
                                                 (Obj.magic
                                                    {
                                                      LowParse_Writers_Parser.kind
                                                        =
                                                        {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = Prims.int_zero;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               Prims.int_zero);
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserStrong);
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserKindMetadataTotal)
                                                        };
                                                      LowParse_Writers_Parser.parser
                                                        = ();
                                                      LowParse_Writers_Parser.serializer
                                                        = ();
                                                      LowParse_Writers_Parser.jumper
                                                        =
                                                        (fun rrel ->
                                                           fun rel ->
                                                             fun input ->
                                                               fun pos ->
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 FStar_UInt32.add
                                                                   pos
                                                                   (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero))
                                                    }))) p () () () () f))))
                                 uu___))
                         (fun x ->
                            LowParse_Writers_Effect.mk_repr_impl
                              (LowParse_Writers_Parser.Parser
                                 ((),
                                   (Obj.magic
                                      {
                                        LowParse_Writers_Parser.kind =
                                          {
                                            LowParse_Spec_Base.parser_kind_low
                                              =
                                              (((if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4)))
                                                  +
                                                  (if
                                                     Prims.int_zero >
                                                       (FStar_UInt32.v min)
                                                   then Prims.int_zero
                                                   else FStar_UInt32.v min))
                                                 +
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low));
                                            LowParse_Spec_Base.parser_kind_high
                                              =
                                              (if
                                                 match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     uu___ -> true
                                                 | uu___ -> false
                                               then
                                                 FStar_Pervasives_Native.Some
                                                   (((if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.of_int (256))
                                                      then Prims.int_one
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "65536")
                                                        then
                                                          (Prims.of_int (2))
                                                        else
                                                          if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.parse_int "16777216")
                                                          then
                                                            (Prims.of_int (3))
                                                          else
                                                            (Prims.of_int (4)))
                                                       +
                                                       (if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            ((if
                                                                Prims.int_zero
                                                                  >
                                                                  (FStar_UInt32.v
                                                                    min)
                                                              then
                                                                Prims.int_zero
                                                              else
                                                                FStar_UInt32.v
                                                                  min))
                                                        then
                                                          (if
                                                             Prims.int_zero >
                                                               (FStar_UInt32.v
                                                                  min)
                                                           then
                                                             Prims.int_zero
                                                           else
                                                             FStar_UInt32.v
                                                               min)
                                                        else
                                                          FStar_UInt32.v max))
                                                      +
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.Some
                                                           y -> y))
                                               else
                                                 FStar_Pervasives_Native.None);
                                            LowParse_Spec_Base.parser_kind_subkind
                                              =
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_subkind)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserConsumesAll)
                                               then
                                                 FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserConsumesAll
                                               else
                                                 if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_subkind)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserStrong)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserStrong
                                                 else
                                                   if
                                                     (if
                                                        (match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_high)
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             Prims.int_zero)
                                                      then
                                                        (match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_subkind)
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserStrong)
                                                      else false)
                                                   then
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong
                                                   else
                                                     FStar_Pervasives_Native.None);
                                            LowParse_Spec_Base.parser_kind_metadata
                                              =
                                              (match (FStar_Pervasives_Native.None,
                                                       (match match match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_metadata))
                                               with
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                  uu___) ->
                                                   FStar_Pervasives_Native.None
                                               | (uu___,
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                   ->
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                   ->
                                                   FStar_Pervasives_Native.None
                                               | uu___ ->
                                                   FStar_Pervasives_Native.None)
                                          };
                                        LowParse_Writers_Parser.parser = ();
                                        LowParse_Writers_Parser.serializer =
                                          ();
                                        LowParse_Writers_Parser.jumper =
                                          (fun rrel ->
                                             fun rel ->
                                               fun input ->
                                                 fun pos ->
                                                   let h =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let uu___ =
                                                     let h1 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h3 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___1 =
                                                       let uu___2 =
                                                         match if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))
                                                         with
                                                         | uu___3 when
                                                             uu___3 =
                                                               Prims.int_one
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                ()) () ()
                                                               input pos
                                                         | uu___3 when
                                                             uu___3 =
                                                               (Prims.of_int (2))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                ()) () ()
                                                               input pos
                                                         | uu___3 when
                                                             uu___3 =
                                                               (Prims.of_int (3))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                ()) () ()
                                                               input pos
                                                         | uu___3 when
                                                             uu___3 =
                                                               (Prims.of_int (4))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                ()) () ()
                                                               input pos in
                                                       FStar_UInt32.add
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))))
                                                         uu___2 in
                                                     FStar_UInt32.add pos
                                                       uu___1 in
                                                   match match p with
                                                         | LowParse_Writers_Parser.Parser
                                                             (t, p1) -> p1
                                                   with
                                                   | {
                                                       LowParse_Writers_Parser.kind
                                                         = kind;
                                                       LowParse_Writers_Parser.parser
                                                         = parser;
                                                       LowParse_Writers_Parser.serializer
                                                         = serializer;
                                                       LowParse_Writers_Parser.jumper
                                                         = jumper;_}
                                                       ->
                                                       jumper () () input
                                                         uu___)
                                      })))
                              (LowParse_Writers_Parser.Parser
                                 ((),
                                   (Obj.magic
                                      {
                                        LowParse_Writers_Parser.kind =
                                          {
                                            LowParse_Spec_Base.parser_kind_low
                                              =
                                              ((if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4)))
                                                 +
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min));
                                            LowParse_Spec_Base.parser_kind_high
                                              =
                                              (FStar_Pervasives_Native.Some
                                                 ((if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.of_int (256))
                                                   then Prims.int_one
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "65536")
                                                     then (Prims.of_int (2))
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "16777216")
                                                       then
                                                         (Prims.of_int (3))
                                                       else
                                                         (Prims.of_int (4)))
                                                    +
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         ((if
                                                             Prims.int_zero >
                                                               (FStar_UInt32.v
                                                                  min)
                                                           then
                                                             Prims.int_zero
                                                           else
                                                             FStar_UInt32.v
                                                               min))
                                                     then
                                                       (if
                                                          Prims.int_zero >
                                                            (FStar_UInt32.v
                                                               min)
                                                        then Prims.int_zero
                                                        else
                                                          FStar_UInt32.v min)
                                                     else FStar_UInt32.v max)));
                                            LowParse_Spec_Base.parser_kind_subkind
                                              =
                                              (FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong);
                                            LowParse_Spec_Base.parser_kind_metadata
                                              = FStar_Pervasives_Native.None
                                          };
                                        LowParse_Writers_Parser.parser = ();
                                        LowParse_Writers_Parser.serializer =
                                          ();
                                        LowParse_Writers_Parser.jumper =
                                          (fun rrel ->
                                             fun rel ->
                                               fun input ->
                                                 fun pos ->
                                                   let h =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let h1 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let h2 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let uu___ =
                                                     let uu___1 =
                                                       match if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))
                                                       with
                                                       | uu___2 when
                                                           uu___2 =
                                                             Prims.int_one
                                                           ->
                                                           (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                              ()) () () input
                                                             pos
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (2))
                                                           ->
                                                           (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                              ()) () () input
                                                             pos
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (3))
                                                           ->
                                                           (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                              ()) () () input
                                                             pos
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (4))
                                                           ->
                                                           (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                              ()) () () input
                                                             pos in
                                                     FStar_UInt32.add
                                                       (FStar_UInt32.uint_to_t
                                                          (if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.of_int (256))
                                                           then Prims.int_one
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "65536")
                                                             then
                                                               (Prims.of_int (2))
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "16777216")
                                                               then
                                                                 (Prims.of_int (3))
                                                               else
                                                                 (Prims.of_int (4))))
                                                       uu___1 in
                                                   FStar_UInt32.add pos uu___)
                                      }))) () () () () ()
                              (fun b ->
                                 fun len ->
                                   fun pos ->
                                     let h = FStar_HyperStack_ST.get () in
                                     let sl =
                                       {
                                         LowParse_Slice.base = b;
                                         LowParse_Slice.len = len
                                       } in
                                     let pos_last =
                                       let h1 = FStar_HyperStack_ST.get () in
                                       let h2 = FStar_HyperStack_ST.get () in
                                       let h3 = FStar_HyperStack_ST.get () in
                                       let uu___ =
                                         let uu___1 =
                                           (match if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))
                                            with
                                            | uu___2 when
                                                uu___2 = Prims.int_one ->
                                                LowParse_Low_BoundedInt.read_bounded_integer_1
                                                  ()
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (2))
                                                ->
                                                LowParse_Low_BoundedInt.read_bounded_integer_2
                                                  ()
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (3))
                                                ->
                                                LowParse_Low_BoundedInt.read_bounded_integer_3
                                                  ()
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (4))
                                                ->
                                                LowParse_Low_BoundedInt.read_bounded_integer_4
                                                  ()) () () (Obj.magic sl)
                                             (FStar_UInt32.uint_to_t
                                                Prims.int_zero) in
                                         FStar_UInt32.add
                                           (FStar_UInt32.uint_to_t
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4))))
                                           uu___1 in
                                       FStar_UInt32.add
                                         (FStar_UInt32.uint_to_t
                                            Prims.int_zero) uu___ in
                                     let pos_pl =
                                       FStar_UInt32.uint_to_t
                                         (if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4))) in
                                     (let h1 = FStar_HyperStack_ST.get () in
                                      let uu___1 =
                                        (match if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4))
                                         with
                                         | uu___2 when uu___2 = Prims.int_one
                                             ->
                                             (fun x1 ->
                                                fun rrel ->
                                                  fun rel ->
                                                    fun input ->
                                                      fun pos1 ->
                                                        let h0 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        let len1 =
                                                          LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                            () x1 () ()
                                                            (match input with
                                                             | {
                                                                 LowParse_Slice.base
                                                                   = base;
                                                                 LowParse_Slice.len
                                                                   = len2;_}
                                                                 -> base)
                                                            pos1 in
                                                        let h2 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        FStar_UInt32.add pos1
                                                          len1)
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (2)) ->
                                             (fun x1 ->
                                                fun rrel ->
                                                  fun rel ->
                                                    fun input ->
                                                      fun pos1 ->
                                                        let h0 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        let len1 =
                                                          LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                            () x1 () ()
                                                            (match input with
                                                             | {
                                                                 LowParse_Slice.base
                                                                   = base;
                                                                 LowParse_Slice.len
                                                                   = len2;_}
                                                                 -> base)
                                                            pos1 in
                                                        let h2 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        FStar_UInt32.add pos1
                                                          len1)
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (3)) ->
                                             (fun x1 ->
                                                fun rrel ->
                                                  fun rel ->
                                                    fun input ->
                                                      fun pos1 ->
                                                        let h0 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        let len1 =
                                                          LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                            () x1 () ()
                                                            (match input with
                                                             | {
                                                                 LowParse_Slice.base
                                                                   = base;
                                                                 LowParse_Slice.len
                                                                   = len2;_}
                                                                 -> base)
                                                            pos1 in
                                                        let h2 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        FStar_UInt32.add pos1
                                                          len1)
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (4)) ->
                                             (fun x1 ->
                                                fun rrel ->
                                                  fun rel ->
                                                    fun input ->
                                                      fun pos1 ->
                                                        let h0 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        let len1 =
                                                          LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                            () x1 () ()
                                                            (match input with
                                                             | {
                                                                 LowParse_Slice.base
                                                                   = base;
                                                                 LowParse_Slice.len
                                                                   = len2;_}
                                                                 -> base)
                                                            pos1 in
                                                        let h2 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        FStar_UInt32.add pos1
                                                          len1))
                                          (FStar_UInt32.sub pos
                                             (FStar_UInt32.add
                                                (FStar_UInt32.uint_to_t
                                                   Prims.int_zero)
                                                (FStar_UInt32.uint_to_t
                                                   (if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))))))
                                          () () (Obj.magic sl)
                                          (FStar_UInt32.uint_to_t
                                             Prims.int_zero) in
                                      let h2 = FStar_HyperStack_ST.get () in
                                      ());
                                     LowParse_Writers_Effect.ICorrect
                                       ((), pos)))))
let (parse_vllist_snoc_ho' :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit ->
             (unit, unit, unit, unit, unit, unit, unit)
               LowParse_Writers_Effect.repr)
            ->
            (unit, unit, unit, unit, unit, unit, unit)
              LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun f ->
            LowParse_Writers_Effect.Repr
              ((),
                (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                   (Obj.magic ()) () () () (Obj.magic ()) () () () () () ()
                   (LowParse_Writers_Effect.frame_impl
                      (LowParse_Writers_Parser.Parser
                         ((),
                           (Obj.magic
                              {
                                LowParse_Writers_Parser.kind =
                                  {
                                    LowParse_Spec_Base.parser_kind_low =
                                      ((if
                                          (FStar_UInt32.v max) <
                                            (Prims.of_int (256))
                                        then Prims.int_one
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "65536")
                                          then (Prims.of_int (2))
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "16777216")
                                            then (Prims.of_int (3))
                                            else (Prims.of_int (4)))
                                         +
                                         (if
                                            Prims.int_zero >
                                              (FStar_UInt32.v min)
                                          then Prims.int_zero
                                          else FStar_UInt32.v min));
                                    LowParse_Spec_Base.parser_kind_high =
                                      (FStar_Pervasives_Native.Some
                                         ((if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4)))
                                            +
                                            (if
                                               (FStar_UInt32.v max) <
                                                 ((if
                                                     Prims.int_zero >
                                                       (FStar_UInt32.v min)
                                                   then Prims.int_zero
                                                   else FStar_UInt32.v min))
                                             then
                                               (if
                                                  Prims.int_zero >
                                                    (FStar_UInt32.v min)
                                                then Prims.int_zero
                                                else FStar_UInt32.v min)
                                             else FStar_UInt32.v max)));
                                    LowParse_Spec_Base.parser_kind_subkind =
                                      (FStar_Pervasives_Native.Some
                                         LowParse_Spec_Base.ParserStrong);
                                    LowParse_Spec_Base.parser_kind_metadata =
                                      FStar_Pervasives_Native.None
                                  };
                                LowParse_Writers_Parser.parser = ();
                                LowParse_Writers_Parser.serializer = ();
                                LowParse_Writers_Parser.jumper =
                                  (fun rrel ->
                                     fun rel ->
                                       fun input ->
                                         fun pos ->
                                           let h = FStar_HyperStack_ST.get () in
                                           let h1 =
                                             FStar_HyperStack_ST.get () in
                                           let h2 =
                                             FStar_HyperStack_ST.get () in
                                           let uu___ =
                                             let uu___1 =
                                               match if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))
                                               with
                                               | uu___2 when
                                                   uu___2 = Prims.int_one ->
                                                   (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                      ()) () () input pos
                                               | uu___2 when
                                                   uu___2 =
                                                     (Prims.of_int (2))
                                                   ->
                                                   (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                      ()) () () input pos
                                               | uu___2 when
                                                   uu___2 =
                                                     (Prims.of_int (3))
                                                   ->
                                                   (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                      ()) () () input pos
                                               | uu___2 when
                                                   uu___2 =
                                                     (Prims.of_int (4))
                                                   ->
                                                   (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                      ()) () () input pos in
                                             FStar_UInt32.add
                                               (FStar_UInt32.uint_to_t
                                                  (if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.of_int (256))
                                                   then Prims.int_one
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "65536")
                                                     then (Prims.of_int (2))
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "16777216")
                                                       then
                                                         (Prims.of_int (3))
                                                       else
                                                         (Prims.of_int (4))))
                                               uu___1 in
                                           FStar_UInt32.add pos uu___)
                              }))) () p () () ()
                      (fun uu___ ->
                         LowParse_Writers_Effect.Repr
                           ((),
                             (Obj.magic
                                (LowParse_Writers_Effect.recast_writer_impl
                                   (LowParse_Writers_Parser.Parser
                                      ((),
                                        (Obj.magic
                                           {
                                             LowParse_Writers_Parser.kind =
                                               {
                                                 LowParse_Spec_Base.parser_kind_low
                                                   = Prims.int_zero;
                                                 LowParse_Spec_Base.parser_kind_high
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      Prims.int_zero);
                                                 LowParse_Spec_Base.parser_kind_subkind
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong);
                                                 LowParse_Spec_Base.parser_kind_metadata
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserKindMetadataTotal)
                                               };
                                             LowParse_Writers_Parser.parser =
                                               ();
                                             LowParse_Writers_Parser.serializer
                                               = ();
                                             LowParse_Writers_Parser.jumper =
                                               (fun rrel ->
                                                  fun rel ->
                                                    fun input ->
                                                      fun pos ->
                                                        let h =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        FStar_UInt32.add pos
                                                          (FStar_UInt32.uint_to_t
                                                             Prims.int_zero))
                                           }))) p () () () () f)))))
                   (fun x ->
                      LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        (((if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4)))
                                            +
                                            (if
                                               Prims.int_zero >
                                                 (FStar_UInt32.v min)
                                             then Prims.int_zero
                                             else FStar_UInt32.v min))
                                           +
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (if
                                           match match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_high
                                           with
                                           | FStar_Pervasives_Native.Some
                                               uu___ -> true
                                           | uu___ -> false
                                         then
                                           FStar_Pervasives_Native.Some
                                             (((if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4)))
                                                 +
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      ((if
                                                          Prims.int_zero >
                                                            (FStar_UInt32.v
                                                               min)
                                                        then Prims.int_zero
                                                        else
                                                          FStar_UInt32.v min))
                                                  then
                                                    (if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min)
                                                  else FStar_UInt32.v max))
                                                +
                                                (match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     y -> y))
                                         else FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_subkind)
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserConsumesAll)
                                         then
                                           FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserConsumesAll
                                         else
                                           if
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_subkind)
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong)
                                           then
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong
                                           else
                                             if
                                               (if
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_high)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       Prims.int_zero)
                                                then
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_subkind)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong)
                                                else false)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong
                                             else
                                               FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (match (FStar_Pervasives_Native.None,
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata))
                                         with
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail),
                                            uu___) ->
                                             FStar_Pervasives_Native.None
                                         | (uu___,
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail))
                                             ->
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_metadata)
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal),
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal))
                                             -> FStar_Pervasives_Native.None
                                         | uu___ ->
                                             FStar_Pervasives_Native.None)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               let h3 =
                                                 FStar_HyperStack_ST.get () in
                                               let uu___1 =
                                                 let uu___2 =
                                                   match if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))
                                                   with
                                                   | uu___3 when
                                                       uu___3 = Prims.int_one
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (2))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (3))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (4))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                          ()) () () input pos in
                                                 FStar_UInt32.add
                                                   (FStar_UInt32.uint_to_t
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))))
                                                   uu___2 in
                                               FStar_UInt32.add pos uu___1 in
                                             match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper () () input uu___)
                                })))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              Prims.int_zero >
                                                (FStar_UInt32.v min)
                                            then Prims.int_zero
                                            else FStar_UInt32.v min));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (FStar_Pervasives_Native.Some
                                           ((if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))
                                              +
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   ((if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min))
                                               then
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min)
                                               else FStar_UInt32.v max)));
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserStrong);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        = FStar_Pervasives_Native.None
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let h1 =
                                               FStar_HyperStack_ST.get () in
                                             let h2 =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let uu___1 =
                                                 match if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))
                                                 with
                                                 | uu___2 when
                                                     uu___2 = Prims.int_one
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (2))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (3))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (4))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                        ()) () () input pos in
                                               FStar_UInt32.add
                                                 (FStar_UInt32.uint_to_t
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))))
                                                 uu___1 in
                                             FStar_UInt32.add pos uu___)
                                }))) () () () () ()
                        (fun b ->
                           fun len ->
                             fun pos ->
                               let h = FStar_HyperStack_ST.get () in
                               let sl =
                                 {
                                   LowParse_Slice.base = b;
                                   LowParse_Slice.len = len
                                 } in
                               let pos_last =
                                 let h1 = FStar_HyperStack_ST.get () in
                                 let h2 = FStar_HyperStack_ST.get () in
                                 let h3 = FStar_HyperStack_ST.get () in
                                 let uu___ =
                                   let uu___1 =
                                     (match if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))
                                      with
                                      | uu___2 when uu___2 = Prims.int_one ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_1
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (2)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_2
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (3)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_3
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (4)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_4
                                            ()) () () (Obj.magic sl)
                                       (FStar_UInt32.uint_to_t Prims.int_zero) in
                                   FStar_UInt32.add
                                     (FStar_UInt32.uint_to_t
                                        (if
                                           (FStar_UInt32.v max) <
                                             (Prims.of_int (256))
                                         then Prims.int_one
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "65536")
                                           then (Prims.of_int (2))
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "16777216")
                                             then (Prims.of_int (3))
                                             else (Prims.of_int (4)))) uu___1 in
                                 FStar_UInt32.add
                                   (FStar_UInt32.uint_to_t Prims.int_zero)
                                   uu___ in
                               let pos_pl =
                                 FStar_UInt32.uint_to_t
                                   (if
                                      (FStar_UInt32.v max) <
                                        (Prims.of_int (256))
                                    then Prims.int_one
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "65536")
                                      then (Prims.of_int (2))
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "16777216")
                                        then (Prims.of_int (3))
                                        else (Prims.of_int (4))) in
                               (let h1 = FStar_HyperStack_ST.get () in
                                let uu___1 =
                                  (match if
                                           (FStar_UInt32.v max) <
                                             (Prims.of_int (256))
                                         then Prims.int_one
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "65536")
                                           then (Prims.of_int (2))
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "16777216")
                                             then (Prims.of_int (3))
                                             else (Prims.of_int (4))
                                   with
                                   | uu___2 when uu___2 = Prims.int_one ->
                                       (fun x1 ->
                                          fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos1 ->
                                                  let h0 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let len1 =
                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                      () x1 () ()
                                                      (match input with
                                                       | {
                                                           LowParse_Slice.base
                                                             = base;
                                                           LowParse_Slice.len
                                                             = len2;_}
                                                           -> base) pos1 in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  FStar_UInt32.add pos1 len1)
                                   | uu___2 when uu___2 = (Prims.of_int (2))
                                       ->
                                       (fun x1 ->
                                          fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos1 ->
                                                  let h0 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let len1 =
                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                      () x1 () ()
                                                      (match input with
                                                       | {
                                                           LowParse_Slice.base
                                                             = base;
                                                           LowParse_Slice.len
                                                             = len2;_}
                                                           -> base) pos1 in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  FStar_UInt32.add pos1 len1)
                                   | uu___2 when uu___2 = (Prims.of_int (3))
                                       ->
                                       (fun x1 ->
                                          fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos1 ->
                                                  let h0 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let len1 =
                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                      () x1 () ()
                                                      (match input with
                                                       | {
                                                           LowParse_Slice.base
                                                             = base;
                                                           LowParse_Slice.len
                                                             = len2;_}
                                                           -> base) pos1 in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  FStar_UInt32.add pos1 len1)
                                   | uu___2 when uu___2 = (Prims.of_int (4))
                                       ->
                                       (fun x1 ->
                                          fun rrel ->
                                            fun rel ->
                                              fun input ->
                                                fun pos1 ->
                                                  let h0 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  let len1 =
                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                      () x1 () ()
                                                      (match input with
                                                       | {
                                                           LowParse_Slice.base
                                                             = base;
                                                           LowParse_Slice.len
                                                             = len2;_}
                                                           -> base) pos1 in
                                                  let h2 =
                                                    FStar_HyperStack_ST.get
                                                      () in
                                                  FStar_UInt32.add pos1 len1))
                                    (FStar_UInt32.sub pos
                                       (FStar_UInt32.add
                                          (FStar_UInt32.uint_to_t
                                             Prims.int_zero)
                                          (FStar_UInt32.uint_to_t
                                             (if
                                                (FStar_UInt32.v max) <
                                                  (Prims.of_int (256))
                                              then Prims.int_one
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "65536")
                                                then (Prims.of_int (2))
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "16777216")
                                                  then (Prims.of_int (3))
                                                  else (Prims.of_int (4))))))
                                    () () (Obj.magic sl)
                                    (FStar_UInt32.uint_to_t Prims.int_zero) in
                                let h2 = FStar_HyperStack_ST.get () in ());
                               LowParse_Writers_Effect.ICorrect ((), pos)))))

let (parse_vllist_snoc_weak_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit, unit, unit, Prims.l_True, Obj.t, Obj.t, unit, unit)
            LowParse_Writers_Effect.repr_impl)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun p ->
               fun min ->
                 fun max ->
                   Obj.magic
                     (LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        (((if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4)))
                                            +
                                            (if
                                               Prims.int_zero >
                                                 (FStar_UInt32.v min)
                                             then Prims.int_zero
                                             else FStar_UInt32.v min))
                                           +
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (if
                                           match match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_high
                                           with
                                           | FStar_Pervasives_Native.Some
                                               uu___ -> true
                                           | uu___ -> false
                                         then
                                           FStar_Pervasives_Native.Some
                                             (((if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4)))
                                                 +
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      ((if
                                                          Prims.int_zero >
                                                            (FStar_UInt32.v
                                                               min)
                                                        then Prims.int_zero
                                                        else
                                                          FStar_UInt32.v min))
                                                  then
                                                    (if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min)
                                                  else FStar_UInt32.v max))
                                                +
                                                (match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     y -> y))
                                         else FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_subkind)
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserConsumesAll)
                                         then
                                           FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserConsumesAll
                                         else
                                           if
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_subkind)
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong)
                                           then
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong
                                           else
                                             if
                                               (if
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_high)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       Prims.int_zero)
                                                then
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_subkind)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong)
                                                else false)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong
                                             else
                                               FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (match (FStar_Pervasives_Native.None,
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata))
                                         with
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail),
                                            uu___) ->
                                             FStar_Pervasives_Native.None
                                         | (uu___,
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail))
                                             ->
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_metadata)
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal),
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal))
                                             -> FStar_Pervasives_Native.None
                                         | uu___ ->
                                             FStar_Pervasives_Native.None)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               let h3 =
                                                 FStar_HyperStack_ST.get () in
                                               let uu___1 =
                                                 let uu___2 =
                                                   match if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))
                                                   with
                                                   | uu___3 when
                                                       uu___3 = Prims.int_one
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (2))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (3))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (4))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                          ()) () () input pos in
                                                 FStar_UInt32.add
                                                   (FStar_UInt32.uint_to_t
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))))
                                                   uu___2 in
                                               FStar_UInt32.add pos uu___1 in
                                             match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper () () input uu___)
                                })))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              Prims.int_zero >
                                                (FStar_UInt32.v min)
                                            then Prims.int_zero
                                            else FStar_UInt32.v min));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (FStar_Pervasives_Native.Some
                                           ((if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))
                                              +
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   ((if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min))
                                               then
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min)
                                               else FStar_UInt32.v max)));
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserStrong);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        = FStar_Pervasives_Native.None
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let h1 =
                                               FStar_HyperStack_ST.get () in
                                             let h2 =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let uu___1 =
                                                 match if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))
                                                 with
                                                 | uu___2 when
                                                     uu___2 = Prims.int_one
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (2))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (3))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (4))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                        ()) () () input pos in
                                               FStar_UInt32.add
                                                 (FStar_UInt32.uint_to_t
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))))
                                                 uu___1 in
                                             FStar_UInt32.add pos uu___)
                                }))) () () () () ()
                        (fun b ->
                           fun len ->
                             fun pos ->
                               let h = FStar_HyperStack_ST.get () in
                               let sl =
                                 {
                                   LowParse_Slice.base = b;
                                   LowParse_Slice.len = len
                                 } in
                               let pos_last =
                                 let h1 = FStar_HyperStack_ST.get () in
                                 let h2 = FStar_HyperStack_ST.get () in
                                 let h3 = FStar_HyperStack_ST.get () in
                                 let uu___ =
                                   let uu___1 =
                                     (match if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))
                                      with
                                      | uu___2 when uu___2 = Prims.int_one ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_1
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (2)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_2
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (3)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_3
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (4)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_4
                                            ()) () () (Obj.magic sl)
                                       (FStar_UInt32.uint_to_t Prims.int_zero) in
                                   FStar_UInt32.add
                                     (FStar_UInt32.uint_to_t
                                        (if
                                           (FStar_UInt32.v max) <
                                             (Prims.of_int (256))
                                         then Prims.int_one
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "65536")
                                           then (Prims.of_int (2))
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "16777216")
                                             then (Prims.of_int (3))
                                             else (Prims.of_int (4)))) uu___1 in
                                 FStar_UInt32.add
                                   (FStar_UInt32.uint_to_t Prims.int_zero)
                                   uu___ in
                               let pos_pl =
                                 FStar_UInt32.uint_to_t
                                   (if
                                      (FStar_UInt32.v max) <
                                        (Prims.of_int (256))
                                    then Prims.int_one
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "65536")
                                      then (Prims.of_int (2))
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "16777216")
                                        then (Prims.of_int (3))
                                        else (Prims.of_int (4))) in
                               let sz = FStar_UInt32.sub pos pos_pl in
                               if
                                 (FStar_UInt32.lte min sz) &&
                                   (FStar_UInt32.lte sz max)
                               then
                                 ((let h1 = FStar_HyperStack_ST.get () in
                                   let uu___1 =
                                     (match if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))
                                      with
                                      | uu___2 when uu___2 = Prims.int_one ->
                                          (fun x ->
                                             fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos1 ->
                                                     let h0 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let len1 =
                                                       LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                         () x () ()
                                                         (match input with
                                                          | {
                                                              LowParse_Slice.base
                                                                = base;
                                                              LowParse_Slice.len
                                                                = len2;_}
                                                              -> base) pos1 in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos1
                                                       len1)
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (2)) ->
                                          (fun x ->
                                             fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos1 ->
                                                     let h0 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let len1 =
                                                       LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                         () x () ()
                                                         (match input with
                                                          | {
                                                              LowParse_Slice.base
                                                                = base;
                                                              LowParse_Slice.len
                                                                = len2;_}
                                                              -> base) pos1 in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos1
                                                       len1)
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (3)) ->
                                          (fun x ->
                                             fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos1 ->
                                                     let h0 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let len1 =
                                                       LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                         () x () ()
                                                         (match input with
                                                          | {
                                                              LowParse_Slice.base
                                                                = base;
                                                              LowParse_Slice.len
                                                                = len2;_}
                                                              -> base) pos1 in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos1
                                                       len1)
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (4)) ->
                                          (fun x ->
                                             fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos1 ->
                                                     let h0 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let len1 =
                                                       LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                         () x () ()
                                                         (match input with
                                                          | {
                                                              LowParse_Slice.base
                                                                = base;
                                                              LowParse_Slice.len
                                                                = len2;_}
                                                              -> base) pos1 in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos1
                                                       len1))
                                       (FStar_UInt32.sub pos
                                          (FStar_UInt32.add
                                             (FStar_UInt32.uint_to_t
                                                Prims.int_zero)
                                             (FStar_UInt32.uint_to_t
                                                (if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4))))))
                                       () () (Obj.magic sl)
                                       (FStar_UInt32.uint_to_t Prims.int_zero) in
                                   let h2 = FStar_HyperStack_ST.get () in ());
                                  LowParse_Writers_Effect.ICorrect ((), pos))
                               else
                                 LowParse_Writers_Effect.IError
                                   "parse_vllist_snoc_weak: out of bounds")))
            uu___3 uu___2 uu___1 uu___
let (parse_vllist_snoc_weak :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit, unit, unit, unit, unit, unit, unit)
            LowParse_Writers_Effect.repr)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun p ->
               fun min ->
                 fun max ->
                   Obj.magic
                     (LowParse_Writers_Effect.Repr
                        ((),
                          (Obj.magic
                             (LowParse_Writers_Effect.mk_repr_impl
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                (((if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.of_int (256))
                                                   then Prims.int_one
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "65536")
                                                     then (Prims.of_int (2))
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "16777216")
                                                       then
                                                         (Prims.of_int (3))
                                                       else
                                                         (Prims.of_int (4)))
                                                    +
                                                    (if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min))
                                                   +
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        -> parser_kind_low));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (if
                                                   match match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_high
                                                   with
                                                   | FStar_Pervasives_Native.Some
                                                       uu___ -> true
                                                   | uu___ -> false
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     (((if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.of_int (256))
                                                        then Prims.int_one
                                                        else
                                                          if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.parse_int "65536")
                                                          then
                                                            (Prims.of_int (2))
                                                          else
                                                            if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.parse_int "16777216")
                                                            then
                                                              (Prims.of_int (3))
                                                            else
                                                              (Prims.of_int (4)))
                                                         +
                                                         (if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              ((if
                                                                  Prims.int_zero
                                                                    >
                                                                    (
                                                                    FStar_UInt32.v
                                                                    min)
                                                                then
                                                                  Prims.int_zero
                                                                else
                                                                  FStar_UInt32.v
                                                                    min))
                                                          then
                                                            (if
                                                               Prims.int_zero
                                                                 >
                                                                 (FStar_UInt32.v
                                                                    min)
                                                             then
                                                               Prims.int_zero
                                                             else
                                                               FStar_UInt32.v
                                                                 min)
                                                          else
                                                            FStar_UInt32.v
                                                              max))
                                                        +
                                                        (match match 
                                                                 match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                               with
                                                               | {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                   ->
                                                                   parser_kind_high
                                                         with
                                                         | FStar_Pervasives_Native.Some
                                                             y -> y))
                                                 else
                                                   FStar_Pervasives_Native.None);
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_subkind)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserConsumesAll)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserConsumesAll
                                                 else
                                                   if
                                                     (match match match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_subkind)
                                                       =
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong)
                                                   then
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong
                                                   else
                                                     if
                                                       (if
                                                          (match match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                           with
                                                           | {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 parser_kind_low;
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 parser_kind_high;
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 parser_kind_subkind;
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 parser_kind_metadata;_}
                                                               ->
                                                               parser_kind_high)
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               Prims.int_zero)
                                                        then
                                                          (match match 
                                                                   match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                 with
                                                                 | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                           with
                                                           | {
                                                               LowParse_Spec_Base.parser_kind_low
                                                                 =
                                                                 parser_kind_low;
                                                               LowParse_Spec_Base.parser_kind_high
                                                                 =
                                                                 parser_kind_high;
                                                               LowParse_Spec_Base.parser_kind_subkind
                                                                 =
                                                                 parser_kind_subkind;
                                                               LowParse_Spec_Base.parser_kind_metadata
                                                                 =
                                                                 parser_kind_metadata;_}
                                                               ->
                                                               parser_kind_subkind)
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserStrong)
                                                        else false)
                                                     then
                                                       FStar_Pervasives_Native.Some
                                                         LowParse_Spec_Base.ParserStrong
                                                     else
                                                       FStar_Pervasives_Native.None);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                (match (FStar_Pervasives_Native.None,
                                                         (match match 
                                                                  match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                with
                                                                | {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                          with
                                                          | {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                parser_kind_low;
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                parser_kind_high;
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                parser_kind_subkind;
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                parser_kind_metadata;_}
                                                              ->
                                                              parser_kind_metadata))
                                                 with
                                                 | (FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataFail),
                                                    uu___) ->
                                                     FStar_Pervasives_Native.None
                                                 | (uu___,
                                                    FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataFail))
                                                     ->
                                                     (match match match p
                                                                  with
                                                                  | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                            with
                                                            | {
                                                                LowParse_Writers_Parser.kind
                                                                  = kind;
                                                                LowParse_Writers_Parser.parser
                                                                  = parser;
                                                                LowParse_Writers_Parser.serializer
                                                                  =
                                                                  serializer;
                                                                LowParse_Writers_Parser.jumper
                                                                  = jumper;_}
                                                                -> kind
                                                      with
                                                      | {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = parser_kind_low;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            parser_kind_high;
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            parser_kind_subkind;
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            parser_kind_metadata;_}
                                                          ->
                                                          parser_kind_metadata)
                                                 | (FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                    FStar_Pervasives_Native.Some
                                                    (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                     ->
                                                     FStar_Pervasives_Native.None
                                                 | uu___ ->
                                                     FStar_Pervasives_Native.None)
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let h1 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       let h2 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       let h3 =
                                                         FStar_HyperStack_ST.get
                                                           () in
                                                       let uu___1 =
                                                         let uu___2 =
                                                           match if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                 then
                                                                   Prims.int_one
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                   then
                                                                    (Prims.of_int (2))
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                           with
                                                           | uu___3 when
                                                               uu___3 =
                                                                 Prims.int_one
                                                               ->
                                                               (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                  ()) () ()
                                                                 input pos
                                                           | uu___3 when
                                                               uu___3 =
                                                                 (Prims.of_int (2))
                                                               ->
                                                               (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                  ()) () ()
                                                                 input pos
                                                           | uu___3 when
                                                               uu___3 =
                                                                 (Prims.of_int (3))
                                                               ->
                                                               (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                  ()) () ()
                                                                 input pos
                                                           | uu___3 when
                                                               uu___3 =
                                                                 (Prims.of_int (4))
                                                               ->
                                                               (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                  ()) () ()
                                                                 input pos in
                                                         FStar_UInt32.add
                                                           (FStar_UInt32.uint_to_t
                                                              (if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))))
                                                           uu___2 in
                                                       FStar_UInt32.add pos
                                                         uu___1 in
                                                     match match p with
                                                           | LowParse_Writers_Parser.Parser
                                                               (t, p1) -> p1
                                                     with
                                                     | {
                                                         LowParse_Writers_Parser.kind
                                                           = kind;
                                                         LowParse_Writers_Parser.parser
                                                           = parser;
                                                         LowParse_Writers_Parser.serializer
                                                           = serializer;
                                                         LowParse_Writers_Parser.jumper
                                                           = jumper;_}
                                                         ->
                                                         jumper () () input
                                                           uu___)
                                        })))
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                ((if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      Prims.int_zero >
                                                        (FStar_UInt32.v min)
                                                    then Prims.int_zero
                                                    else FStar_UInt32.v min));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   ((if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4)))
                                                      +
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           ((if
                                                               Prims.int_zero
                                                                 >
                                                                 (FStar_UInt32.v
                                                                    min)
                                                             then
                                                               Prims.int_zero
                                                             else
                                                               FStar_UInt32.v
                                                                 min))
                                                       then
                                                         (if
                                                            Prims.int_zero >
                                                              (FStar_UInt32.v
                                                                 min)
                                                          then Prims.int_zero
                                                          else
                                                            FStar_UInt32.v
                                                              min)
                                                       else
                                                         FStar_UInt32.v max)));
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserStrong);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                FStar_Pervasives_Native.None
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h1 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let uu___1 =
                                                         match if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))
                                                         with
                                                         | uu___2 when
                                                             uu___2 =
                                                               Prims.int_one
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (2))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (3))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (4))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                ()) () ()
                                                               input pos in
                                                       FStar_UInt32.add
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))))
                                                         uu___1 in
                                                     FStar_UInt32.add pos
                                                       uu___)
                                        }))) () () () () ()
                                (fun b ->
                                   fun len ->
                                     fun pos ->
                                       let h = FStar_HyperStack_ST.get () in
                                       let sl =
                                         {
                                           LowParse_Slice.base = b;
                                           LowParse_Slice.len = len
                                         } in
                                       let pos_last =
                                         let h1 = FStar_HyperStack_ST.get () in
                                         let h2 = FStar_HyperStack_ST.get () in
                                         let h3 = FStar_HyperStack_ST.get () in
                                         let uu___ =
                                           let uu___1 =
                                             (match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  LowParse_Low_BoundedInt.read_bounded_integer_1
                                                    ()
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  LowParse_Low_BoundedInt.read_bounded_integer_2
                                                    ()
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  LowParse_Low_BoundedInt.read_bounded_integer_3
                                                    ()
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  LowParse_Low_BoundedInt.read_bounded_integer_4
                                                    ()) () () (Obj.magic sl)
                                               (FStar_UInt32.uint_to_t
                                                  Prims.int_zero) in
                                           FStar_UInt32.add
                                             (FStar_UInt32.uint_to_t
                                                (if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4))))
                                             uu___1 in
                                         FStar_UInt32.add
                                           (FStar_UInt32.uint_to_t
                                              Prims.int_zero) uu___ in
                                       let pos_pl =
                                         FStar_UInt32.uint_to_t
                                           (if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))) in
                                       let sz = FStar_UInt32.sub pos pos_pl in
                                       if
                                         (FStar_UInt32.lte min sz) &&
                                           (FStar_UInt32.lte sz max)
                                       then
                                         ((let h1 =
                                             FStar_HyperStack_ST.get () in
                                           let uu___1 =
                                             (match if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4))
                                              with
                                              | uu___2 when
                                                  uu___2 = Prims.int_one ->
                                                  (fun x ->
                                                     fun rrel ->
                                                       fun rel ->
                                                         fun input ->
                                                           fun pos1 ->
                                                             let h0 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let len1 =
                                                               LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                 () x () ()
                                                                 (match input
                                                                  with
                                                                  | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                 pos1 in
                                                             let h2 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             FStar_UInt32.add
                                                               pos1 len1)
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (2))
                                                  ->
                                                  (fun x ->
                                                     fun rrel ->
                                                       fun rel ->
                                                         fun input ->
                                                           fun pos1 ->
                                                             let h0 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let len1 =
                                                               LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                 () x () ()
                                                                 (match input
                                                                  with
                                                                  | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                 pos1 in
                                                             let h2 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             FStar_UInt32.add
                                                               pos1 len1)
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (3))
                                                  ->
                                                  (fun x ->
                                                     fun rrel ->
                                                       fun rel ->
                                                         fun input ->
                                                           fun pos1 ->
                                                             let h0 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let len1 =
                                                               LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                 () x () ()
                                                                 (match input
                                                                  with
                                                                  | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                 pos1 in
                                                             let h2 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             FStar_UInt32.add
                                                               pos1 len1)
                                              | uu___2 when
                                                  uu___2 = (Prims.of_int (4))
                                                  ->
                                                  (fun x ->
                                                     fun rrel ->
                                                       fun rel ->
                                                         fun input ->
                                                           fun pos1 ->
                                                             let h0 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             let len1 =
                                                               LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                 () x () ()
                                                                 (match input
                                                                  with
                                                                  | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                 pos1 in
                                                             let h2 =
                                                               FStar_HyperStack_ST.get
                                                                 () in
                                                             FStar_UInt32.add
                                                               pos1 len1))
                                               (FStar_UInt32.sub pos
                                                  (FStar_UInt32.add
                                                     (FStar_UInt32.uint_to_t
                                                        Prims.int_zero)
                                                     (FStar_UInt32.uint_to_t
                                                        (if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))))))
                                               () () (Obj.magic sl)
                                               (FStar_UInt32.uint_to_t
                                                  Prims.int_zero) in
                                           let h2 =
                                             FStar_HyperStack_ST.get () in
                                           ());
                                          LowParse_Writers_Effect.ICorrect
                                            ((), pos))
                                       else
                                         LowParse_Writers_Effect.IError
                                           "parse_vllist_snoc_weak: out of bounds"))))))
            uu___3 uu___2 uu___1 uu___
let (parse_vllist_snoc_weak_ho :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          unit ->
            unit ->
              unit ->
                (unit ->
                   (unit, unit, unit, unit, unit, unit, unit)
                     LowParse_Writers_Effect.repr)
                  ->
                  (unit, unit, unit, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun pre ->
            fun post ->
              fun post_err ->
                fun f ->
                  LowParse_Writers_Effect.Repr
                    ((),
                      (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                         (Obj.magic ()) () () () (Obj.magic ()) () () () ()
                         () ()
                         (LowParse_Writers_Effect.frame_impl
                            (LowParse_Writers_Parser.Parser
                               ((),
                                 (Obj.magic
                                    {
                                      LowParse_Writers_Parser.kind =
                                        {
                                          LowParse_Spec_Base.parser_kind_low
                                            =
                                            ((if
                                                (FStar_UInt32.v max) <
                                                  (Prims.of_int (256))
                                              then Prims.int_one
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "65536")
                                                then (Prims.of_int (2))
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "16777216")
                                                  then (Prims.of_int (3))
                                                  else (Prims.of_int (4)))
                                               +
                                               (if
                                                  Prims.int_zero >
                                                    (FStar_UInt32.v min)
                                                then Prims.int_zero
                                                else FStar_UInt32.v min));
                                          LowParse_Spec_Base.parser_kind_high
                                            =
                                            (FStar_Pervasives_Native.Some
                                               ((if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4)))
                                                  +
                                                  (if
                                                     (FStar_UInt32.v max) <
                                                       ((if
                                                           Prims.int_zero >
                                                             (FStar_UInt32.v
                                                                min)
                                                         then Prims.int_zero
                                                         else
                                                           FStar_UInt32.v min))
                                                   then
                                                     (if
                                                        Prims.int_zero >
                                                          (FStar_UInt32.v min)
                                                      then Prims.int_zero
                                                      else FStar_UInt32.v min)
                                                   else FStar_UInt32.v max)));
                                          LowParse_Spec_Base.parser_kind_subkind
                                            =
                                            (FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong);
                                          LowParse_Spec_Base.parser_kind_metadata
                                            = FStar_Pervasives_Native.None
                                        };
                                      LowParse_Writers_Parser.parser = ();
                                      LowParse_Writers_Parser.serializer = ();
                                      LowParse_Writers_Parser.jumper =
                                        (fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos ->
                                                 let h =
                                                   FStar_HyperStack_ST.get () in
                                                 let h1 =
                                                   FStar_HyperStack_ST.get () in
                                                 let h2 =
                                                   FStar_HyperStack_ST.get () in
                                                 let uu___ =
                                                   let uu___1 =
                                                     match if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.of_int (256))
                                                           then Prims.int_one
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "65536")
                                                             then
                                                               (Prims.of_int (2))
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "16777216")
                                                               then
                                                                 (Prims.of_int (3))
                                                               else
                                                                 (Prims.of_int (4))
                                                     with
                                                     | uu___2 when
                                                         uu___2 =
                                                           Prims.int_one
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (2))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (3))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (4))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                            ()) () () input
                                                           pos in
                                                   FStar_UInt32.add
                                                     (FStar_UInt32.uint_to_t
                                                        (if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))))
                                                     uu___1 in
                                                 FStar_UInt32.add pos uu___)
                                    }))) () p () () ()
                            (fun uu___ ->
                               (fun uu___ ->
                                  Obj.magic
                                    (LowParse_Writers_Effect.Repr
                                       ((),
                                         (LowParse_Writers_Effect.recast_writer_impl
                                            (LowParse_Writers_Parser.Parser
                                               ((),
                                                 (Obj.magic
                                                    {
                                                      LowParse_Writers_Parser.kind
                                                        =
                                                        {
                                                          LowParse_Spec_Base.parser_kind_low
                                                            = Prims.int_zero;
                                                          LowParse_Spec_Base.parser_kind_high
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               Prims.int_zero);
                                                          LowParse_Spec_Base.parser_kind_subkind
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserStrong);
                                                          LowParse_Spec_Base.parser_kind_metadata
                                                            =
                                                            (FStar_Pervasives_Native.Some
                                                               LowParse_Spec_Base.ParserKindMetadataTotal)
                                                        };
                                                      LowParse_Writers_Parser.parser
                                                        = ();
                                                      LowParse_Writers_Parser.serializer
                                                        = ();
                                                      LowParse_Writers_Parser.jumper
                                                        =
                                                        (fun rrel ->
                                                           fun rel ->
                                                             fun input ->
                                                               fun pos ->
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 FStar_UInt32.add
                                                                   pos
                                                                   (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero))
                                                    }))) p () () () () f))))
                                 uu___))
                         (fun x ->
                            LowParse_Writers_Effect.mk_repr_impl
                              (LowParse_Writers_Parser.Parser
                                 ((),
                                   (Obj.magic
                                      {
                                        LowParse_Writers_Parser.kind =
                                          {
                                            LowParse_Spec_Base.parser_kind_low
                                              =
                                              (((if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4)))
                                                  +
                                                  (if
                                                     Prims.int_zero >
                                                       (FStar_UInt32.v min)
                                                   then Prims.int_zero
                                                   else FStar_UInt32.v min))
                                                 +
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_low));
                                            LowParse_Spec_Base.parser_kind_high
                                              =
                                              (if
                                                 match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     uu___ -> true
                                                 | uu___ -> false
                                               then
                                                 FStar_Pervasives_Native.Some
                                                   (((if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.of_int (256))
                                                      then Prims.int_one
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "65536")
                                                        then
                                                          (Prims.of_int (2))
                                                        else
                                                          if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.parse_int "16777216")
                                                          then
                                                            (Prims.of_int (3))
                                                          else
                                                            (Prims.of_int (4)))
                                                       +
                                                       (if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            ((if
                                                                Prims.int_zero
                                                                  >
                                                                  (FStar_UInt32.v
                                                                    min)
                                                              then
                                                                Prims.int_zero
                                                              else
                                                                FStar_UInt32.v
                                                                  min))
                                                        then
                                                          (if
                                                             Prims.int_zero >
                                                               (FStar_UInt32.v
                                                                  min)
                                                           then
                                                             Prims.int_zero
                                                           else
                                                             FStar_UInt32.v
                                                               min)
                                                        else
                                                          FStar_UInt32.v max))
                                                      +
                                                      (match match match 
                                                                    match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                                   with
                                                                   | 
                                                                   {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                             with
                                                             | {
                                                                 LowParse_Spec_Base.parser_kind_low
                                                                   =
                                                                   parser_kind_low;
                                                                 LowParse_Spec_Base.parser_kind_high
                                                                   =
                                                                   parser_kind_high;
                                                                 LowParse_Spec_Base.parser_kind_subkind
                                                                   =
                                                                   parser_kind_subkind;
                                                                 LowParse_Spec_Base.parser_kind_metadata
                                                                   =
                                                                   parser_kind_metadata;_}
                                                                 ->
                                                                 parser_kind_high
                                                       with
                                                       | FStar_Pervasives_Native.Some
                                                           y -> y))
                                               else
                                                 FStar_Pervasives_Native.None);
                                            LowParse_Spec_Base.parser_kind_subkind
                                              =
                                              (if
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_subkind)
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserConsumesAll)
                                               then
                                                 FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserConsumesAll
                                               else
                                                 if
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_subkind)
                                                     =
                                                     (FStar_Pervasives_Native.Some
                                                        LowParse_Spec_Base.ParserStrong)
                                                 then
                                                   FStar_Pervasives_Native.Some
                                                     LowParse_Spec_Base.ParserStrong
                                                 else
                                                   if
                                                     (if
                                                        (match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_high)
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             Prims.int_zero)
                                                      then
                                                        (match match 
                                                                 match p with
                                                                 | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                               with
                                                               | {
                                                                   LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                   LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                   LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                   LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                   -> kind
                                                         with
                                                         | {
                                                             LowParse_Spec_Base.parser_kind_low
                                                               =
                                                               parser_kind_low;
                                                             LowParse_Spec_Base.parser_kind_high
                                                               =
                                                               parser_kind_high;
                                                             LowParse_Spec_Base.parser_kind_subkind
                                                               =
                                                               parser_kind_subkind;
                                                             LowParse_Spec_Base.parser_kind_metadata
                                                               =
                                                               parser_kind_metadata;_}
                                                             ->
                                                             parser_kind_subkind)
                                                          =
                                                          (FStar_Pervasives_Native.Some
                                                             LowParse_Spec_Base.ParserStrong)
                                                      else false)
                                                   then
                                                     FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong
                                                   else
                                                     FStar_Pervasives_Native.None);
                                            LowParse_Spec_Base.parser_kind_metadata
                                              =
                                              (match (FStar_Pervasives_Native.None,
                                                       (match match match p
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                              with
                                                              | {
                                                                  LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                  LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                  LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                  LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                  -> kind
                                                        with
                                                        | {
                                                            LowParse_Spec_Base.parser_kind_low
                                                              =
                                                              parser_kind_low;
                                                            LowParse_Spec_Base.parser_kind_high
                                                              =
                                                              parser_kind_high;
                                                            LowParse_Spec_Base.parser_kind_subkind
                                                              =
                                                              parser_kind_subkind;
                                                            LowParse_Spec_Base.parser_kind_metadata
                                                              =
                                                              parser_kind_metadata;_}
                                                            ->
                                                            parser_kind_metadata))
                                               with
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail),
                                                  uu___) ->
                                                   FStar_Pervasives_Native.None
                                               | (uu___,
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataFail))
                                                   ->
                                                   (match match match p with
                                                                | LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                          with
                                                          | {
                                                              LowParse_Writers_Parser.kind
                                                                = kind;
                                                              LowParse_Writers_Parser.parser
                                                                = parser;
                                                              LowParse_Writers_Parser.serializer
                                                                = serializer;
                                                              LowParse_Writers_Parser.jumper
                                                                = jumper;_}
                                                              -> kind
                                                    with
                                                    | {
                                                        LowParse_Spec_Base.parser_kind_low
                                                          = parser_kind_low;
                                                        LowParse_Spec_Base.parser_kind_high
                                                          = parser_kind_high;
                                                        LowParse_Spec_Base.parser_kind_subkind
                                                          =
                                                          parser_kind_subkind;
                                                        LowParse_Spec_Base.parser_kind_metadata
                                                          =
                                                          parser_kind_metadata;_}
                                                        ->
                                                        parser_kind_metadata)
                                               | (FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                  FStar_Pervasives_Native.Some
                                                  (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                   ->
                                                   FStar_Pervasives_Native.None
                                               | uu___ ->
                                                   FStar_Pervasives_Native.None)
                                          };
                                        LowParse_Writers_Parser.parser = ();
                                        LowParse_Writers_Parser.serializer =
                                          ();
                                        LowParse_Writers_Parser.jumper =
                                          (fun rrel ->
                                             fun rel ->
                                               fun input ->
                                                 fun pos ->
                                                   let h =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let uu___ =
                                                     let h1 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h3 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___1 =
                                                       let uu___2 =
                                                         match if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))
                                                         with
                                                         | uu___3 when
                                                             uu___3 =
                                                               Prims.int_one
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                ()) () ()
                                                               input pos
                                                         | uu___3 when
                                                             uu___3 =
                                                               (Prims.of_int (2))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                ()) () ()
                                                               input pos
                                                         | uu___3 when
                                                             uu___3 =
                                                               (Prims.of_int (3))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                ()) () ()
                                                               input pos
                                                         | uu___3 when
                                                             uu___3 =
                                                               (Prims.of_int (4))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                ()) () ()
                                                               input pos in
                                                       FStar_UInt32.add
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))))
                                                         uu___2 in
                                                     FStar_UInt32.add pos
                                                       uu___1 in
                                                   match match p with
                                                         | LowParse_Writers_Parser.Parser
                                                             (t, p1) -> p1
                                                   with
                                                   | {
                                                       LowParse_Writers_Parser.kind
                                                         = kind;
                                                       LowParse_Writers_Parser.parser
                                                         = parser;
                                                       LowParse_Writers_Parser.serializer
                                                         = serializer;
                                                       LowParse_Writers_Parser.jumper
                                                         = jumper;_}
                                                       ->
                                                       jumper () () input
                                                         uu___)
                                      })))
                              (LowParse_Writers_Parser.Parser
                                 ((),
                                   (Obj.magic
                                      {
                                        LowParse_Writers_Parser.kind =
                                          {
                                            LowParse_Spec_Base.parser_kind_low
                                              =
                                              ((if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4)))
                                                 +
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min));
                                            LowParse_Spec_Base.parser_kind_high
                                              =
                                              (FStar_Pervasives_Native.Some
                                                 ((if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.of_int (256))
                                                   then Prims.int_one
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "65536")
                                                     then (Prims.of_int (2))
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "16777216")
                                                       then
                                                         (Prims.of_int (3))
                                                       else
                                                         (Prims.of_int (4)))
                                                    +
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         ((if
                                                             Prims.int_zero >
                                                               (FStar_UInt32.v
                                                                  min)
                                                           then
                                                             Prims.int_zero
                                                           else
                                                             FStar_UInt32.v
                                                               min))
                                                     then
                                                       (if
                                                          Prims.int_zero >
                                                            (FStar_UInt32.v
                                                               min)
                                                        then Prims.int_zero
                                                        else
                                                          FStar_UInt32.v min)
                                                     else FStar_UInt32.v max)));
                                            LowParse_Spec_Base.parser_kind_subkind
                                              =
                                              (FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong);
                                            LowParse_Spec_Base.parser_kind_metadata
                                              = FStar_Pervasives_Native.None
                                          };
                                        LowParse_Writers_Parser.parser = ();
                                        LowParse_Writers_Parser.serializer =
                                          ();
                                        LowParse_Writers_Parser.jumper =
                                          (fun rrel ->
                                             fun rel ->
                                               fun input ->
                                                 fun pos ->
                                                   let h =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let h1 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let h2 =
                                                     FStar_HyperStack_ST.get
                                                       () in
                                                   let uu___ =
                                                     let uu___1 =
                                                       match if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))
                                                       with
                                                       | uu___2 when
                                                           uu___2 =
                                                             Prims.int_one
                                                           ->
                                                           (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                              ()) () () input
                                                             pos
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (2))
                                                           ->
                                                           (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                              ()) () () input
                                                             pos
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (3))
                                                           ->
                                                           (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                              ()) () () input
                                                             pos
                                                       | uu___2 when
                                                           uu___2 =
                                                             (Prims.of_int (4))
                                                           ->
                                                           (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                              ()) () () input
                                                             pos in
                                                     FStar_UInt32.add
                                                       (FStar_UInt32.uint_to_t
                                                          (if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.of_int (256))
                                                           then Prims.int_one
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "65536")
                                                             then
                                                               (Prims.of_int (2))
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "16777216")
                                                               then
                                                                 (Prims.of_int (3))
                                                               else
                                                                 (Prims.of_int (4))))
                                                       uu___1 in
                                                   FStar_UInt32.add pos uu___)
                                      }))) () () () () ()
                              (fun b ->
                                 fun len ->
                                   fun pos ->
                                     let h = FStar_HyperStack_ST.get () in
                                     let sl =
                                       {
                                         LowParse_Slice.base = b;
                                         LowParse_Slice.len = len
                                       } in
                                     let pos_last =
                                       let h1 = FStar_HyperStack_ST.get () in
                                       let h2 = FStar_HyperStack_ST.get () in
                                       let h3 = FStar_HyperStack_ST.get () in
                                       let uu___ =
                                         let uu___1 =
                                           (match if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))
                                            with
                                            | uu___2 when
                                                uu___2 = Prims.int_one ->
                                                LowParse_Low_BoundedInt.read_bounded_integer_1
                                                  ()
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (2))
                                                ->
                                                LowParse_Low_BoundedInt.read_bounded_integer_2
                                                  ()
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (3))
                                                ->
                                                LowParse_Low_BoundedInt.read_bounded_integer_3
                                                  ()
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (4))
                                                ->
                                                LowParse_Low_BoundedInt.read_bounded_integer_4
                                                  ()) () () (Obj.magic sl)
                                             (FStar_UInt32.uint_to_t
                                                Prims.int_zero) in
                                         FStar_UInt32.add
                                           (FStar_UInt32.uint_to_t
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4))))
                                           uu___1 in
                                       FStar_UInt32.add
                                         (FStar_UInt32.uint_to_t
                                            Prims.int_zero) uu___ in
                                     let pos_pl =
                                       FStar_UInt32.uint_to_t
                                         (if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4))) in
                                     let sz = FStar_UInt32.sub pos pos_pl in
                                     if
                                       (FStar_UInt32.lte min sz) &&
                                         (FStar_UInt32.lte sz max)
                                     then
                                       ((let h1 = FStar_HyperStack_ST.get () in
                                         let uu___1 =
                                           (match if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))
                                            with
                                            | uu___2 when
                                                uu___2 = Prims.int_one ->
                                                (fun x1 ->
                                                   fun rrel ->
                                                     fun rel ->
                                                       fun input ->
                                                         fun pos1 ->
                                                           let h0 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let len1 =
                                                             LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                               () x1 () ()
                                                               (match input
                                                                with
                                                                | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                               pos1 in
                                                           let h2 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           FStar_UInt32.add
                                                             pos1 len1)
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (2))
                                                ->
                                                (fun x1 ->
                                                   fun rrel ->
                                                     fun rel ->
                                                       fun input ->
                                                         fun pos1 ->
                                                           let h0 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let len1 =
                                                             LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                               () x1 () ()
                                                               (match input
                                                                with
                                                                | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                               pos1 in
                                                           let h2 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           FStar_UInt32.add
                                                             pos1 len1)
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (3))
                                                ->
                                                (fun x1 ->
                                                   fun rrel ->
                                                     fun rel ->
                                                       fun input ->
                                                         fun pos1 ->
                                                           let h0 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let len1 =
                                                             LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                               () x1 () ()
                                                               (match input
                                                                with
                                                                | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                               pos1 in
                                                           let h2 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           FStar_UInt32.add
                                                             pos1 len1)
                                            | uu___2 when
                                                uu___2 = (Prims.of_int (4))
                                                ->
                                                (fun x1 ->
                                                   fun rrel ->
                                                     fun rel ->
                                                       fun input ->
                                                         fun pos1 ->
                                                           let h0 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           let len1 =
                                                             LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                               () x1 () ()
                                                               (match input
                                                                with
                                                                | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                               pos1 in
                                                           let h2 =
                                                             FStar_HyperStack_ST.get
                                                               () in
                                                           FStar_UInt32.add
                                                             pos1 len1))
                                             (FStar_UInt32.sub pos
                                                (FStar_UInt32.add
                                                   (FStar_UInt32.uint_to_t
                                                      Prims.int_zero)
                                                   (FStar_UInt32.uint_to_t
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))))))
                                             () () (Obj.magic sl)
                                             (FStar_UInt32.uint_to_t
                                                Prims.int_zero) in
                                         let h2 = FStar_HyperStack_ST.get () in
                                         ());
                                        LowParse_Writers_Effect.ICorrect
                                          ((), pos))
                                     else
                                       LowParse_Writers_Effect.IError
                                         "parse_vllist_snoc_weak: out of bounds"))))
let (parse_vllist_snoc_weak_ho' :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          (unit ->
             (unit, unit, unit, unit, unit, unit, unit)
               LowParse_Writers_Effect.repr)
            ->
            (unit, unit, unit, unit, unit, unit, unit)
              LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun f ->
            LowParse_Writers_Effect.Repr
              ((),
                (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                   (Obj.magic ()) () () () (Obj.magic ()) () () () () () ()
                   (LowParse_Writers_Effect.frame_impl
                      (LowParse_Writers_Parser.Parser
                         ((),
                           (Obj.magic
                              {
                                LowParse_Writers_Parser.kind =
                                  {
                                    LowParse_Spec_Base.parser_kind_low =
                                      ((if
                                          (FStar_UInt32.v max) <
                                            (Prims.of_int (256))
                                        then Prims.int_one
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "65536")
                                          then (Prims.of_int (2))
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "16777216")
                                            then (Prims.of_int (3))
                                            else (Prims.of_int (4)))
                                         +
                                         (if
                                            Prims.int_zero >
                                              (FStar_UInt32.v min)
                                          then Prims.int_zero
                                          else FStar_UInt32.v min));
                                    LowParse_Spec_Base.parser_kind_high =
                                      (FStar_Pervasives_Native.Some
                                         ((if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4)))
                                            +
                                            (if
                                               (FStar_UInt32.v max) <
                                                 ((if
                                                     Prims.int_zero >
                                                       (FStar_UInt32.v min)
                                                   then Prims.int_zero
                                                   else FStar_UInt32.v min))
                                             then
                                               (if
                                                  Prims.int_zero >
                                                    (FStar_UInt32.v min)
                                                then Prims.int_zero
                                                else FStar_UInt32.v min)
                                             else FStar_UInt32.v max)));
                                    LowParse_Spec_Base.parser_kind_subkind =
                                      (FStar_Pervasives_Native.Some
                                         LowParse_Spec_Base.ParserStrong);
                                    LowParse_Spec_Base.parser_kind_metadata =
                                      FStar_Pervasives_Native.None
                                  };
                                LowParse_Writers_Parser.parser = ();
                                LowParse_Writers_Parser.serializer = ();
                                LowParse_Writers_Parser.jumper =
                                  (fun rrel ->
                                     fun rel ->
                                       fun input ->
                                         fun pos ->
                                           let h = FStar_HyperStack_ST.get () in
                                           let h1 =
                                             FStar_HyperStack_ST.get () in
                                           let h2 =
                                             FStar_HyperStack_ST.get () in
                                           let uu___ =
                                             let uu___1 =
                                               match if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))
                                               with
                                               | uu___2 when
                                                   uu___2 = Prims.int_one ->
                                                   (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                      ()) () () input pos
                                               | uu___2 when
                                                   uu___2 =
                                                     (Prims.of_int (2))
                                                   ->
                                                   (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                      ()) () () input pos
                                               | uu___2 when
                                                   uu___2 =
                                                     (Prims.of_int (3))
                                                   ->
                                                   (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                      ()) () () input pos
                                               | uu___2 when
                                                   uu___2 =
                                                     (Prims.of_int (4))
                                                   ->
                                                   (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                      ()) () () input pos in
                                             FStar_UInt32.add
                                               (FStar_UInt32.uint_to_t
                                                  (if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.of_int (256))
                                                   then Prims.int_one
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "65536")
                                                     then (Prims.of_int (2))
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "16777216")
                                                       then
                                                         (Prims.of_int (3))
                                                       else
                                                         (Prims.of_int (4))))
                                               uu___1 in
                                           FStar_UInt32.add pos uu___)
                              }))) () p () () ()
                      (fun uu___ ->
                         LowParse_Writers_Effect.Repr
                           ((),
                             (Obj.magic
                                (LowParse_Writers_Effect.recast_writer_impl
                                   (LowParse_Writers_Parser.Parser
                                      ((),
                                        (Obj.magic
                                           {
                                             LowParse_Writers_Parser.kind =
                                               {
                                                 LowParse_Spec_Base.parser_kind_low
                                                   = Prims.int_zero;
                                                 LowParse_Spec_Base.parser_kind_high
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      Prims.int_zero);
                                                 LowParse_Spec_Base.parser_kind_subkind
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserStrong);
                                                 LowParse_Spec_Base.parser_kind_metadata
                                                   =
                                                   (FStar_Pervasives_Native.Some
                                                      LowParse_Spec_Base.ParserKindMetadataTotal)
                                               };
                                             LowParse_Writers_Parser.parser =
                                               ();
                                             LowParse_Writers_Parser.serializer
                                               = ();
                                             LowParse_Writers_Parser.jumper =
                                               (fun rrel ->
                                                  fun rel ->
                                                    fun input ->
                                                      fun pos ->
                                                        let h =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        FStar_UInt32.add pos
                                                          (FStar_UInt32.uint_to_t
                                                             Prims.int_zero))
                                           }))) p () () () () f)))))
                   (fun x ->
                      LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        (((if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4)))
                                            +
                                            (if
                                               Prims.int_zero >
                                                 (FStar_UInt32.v min)
                                             then Prims.int_zero
                                             else FStar_UInt32.v min))
                                           +
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_low));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (if
                                           match match match match p with
                                                             | LowParse_Writers_Parser.Parser
                                                                 (t, p1) ->
                                                                 p1
                                                       with
                                                       | {
                                                           LowParse_Writers_Parser.kind
                                                             = kind;
                                                           LowParse_Writers_Parser.parser
                                                             = parser;
                                                           LowParse_Writers_Parser.serializer
                                                             = serializer;
                                                           LowParse_Writers_Parser.jumper
                                                             = jumper;_}
                                                           -> kind
                                                 with
                                                 | {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       = parser_kind_low;
                                                     LowParse_Spec_Base.parser_kind_high
                                                       = parser_kind_high;
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       = parser_kind_subkind;
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       = parser_kind_metadata;_}
                                                     -> parser_kind_high
                                           with
                                           | FStar_Pervasives_Native.Some
                                               uu___ -> true
                                           | uu___ -> false
                                         then
                                           FStar_Pervasives_Native.Some
                                             (((if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4)))
                                                 +
                                                 (if
                                                    (FStar_UInt32.v max) <
                                                      ((if
                                                          Prims.int_zero >
                                                            (FStar_UInt32.v
                                                               min)
                                                        then Prims.int_zero
                                                        else
                                                          FStar_UInt32.v min))
                                                  then
                                                    (if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min)
                                                  else FStar_UInt32.v max))
                                                +
                                                (match match match match p
                                                                   with
                                                                   | 
                                                                   LowParse_Writers_Parser.Parser
                                                                    (t, p1)
                                                                    -> p1
                                                             with
                                                             | {
                                                                 LowParse_Writers_Parser.kind
                                                                   = kind;
                                                                 LowParse_Writers_Parser.parser
                                                                   = parser;
                                                                 LowParse_Writers_Parser.serializer
                                                                   =
                                                                   serializer;
                                                                 LowParse_Writers_Parser.jumper
                                                                   = jumper;_}
                                                                 -> kind
                                                       with
                                                       | {
                                                           LowParse_Spec_Base.parser_kind_low
                                                             =
                                                             parser_kind_low;
                                                           LowParse_Spec_Base.parser_kind_high
                                                             =
                                                             parser_kind_high;
                                                           LowParse_Spec_Base.parser_kind_subkind
                                                             =
                                                             parser_kind_subkind;
                                                           LowParse_Spec_Base.parser_kind_metadata
                                                             =
                                                             parser_kind_metadata;_}
                                                           ->
                                                           parser_kind_high
                                                 with
                                                 | FStar_Pervasives_Native.Some
                                                     y -> y))
                                         else FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (if
                                           (match match match p with
                                                        | LowParse_Writers_Parser.Parser
                                                            (t, p1) -> p1
                                                  with
                                                  | {
                                                      LowParse_Writers_Parser.kind
                                                        = kind;
                                                      LowParse_Writers_Parser.parser
                                                        = parser;
                                                      LowParse_Writers_Parser.serializer
                                                        = serializer;
                                                      LowParse_Writers_Parser.jumper
                                                        = jumper;_}
                                                      -> kind
                                            with
                                            | {
                                                LowParse_Spec_Base.parser_kind_low
                                                  = parser_kind_low;
                                                LowParse_Spec_Base.parser_kind_high
                                                  = parser_kind_high;
                                                LowParse_Spec_Base.parser_kind_subkind
                                                  = parser_kind_subkind;
                                                LowParse_Spec_Base.parser_kind_metadata
                                                  = parser_kind_metadata;_}
                                                -> parser_kind_subkind)
                                             =
                                             (FStar_Pervasives_Native.Some
                                                LowParse_Spec_Base.ParserConsumesAll)
                                         then
                                           FStar_Pervasives_Native.Some
                                             LowParse_Spec_Base.ParserConsumesAll
                                         else
                                           if
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_subkind)
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong)
                                           then
                                             FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong
                                           else
                                             if
                                               (if
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_high)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       Prims.int_zero)
                                                then
                                                  (match match match p with
                                                               | LowParse_Writers_Parser.Parser
                                                                   (t, p1) ->
                                                                   p1
                                                         with
                                                         | {
                                                             LowParse_Writers_Parser.kind
                                                               = kind;
                                                             LowParse_Writers_Parser.parser
                                                               = parser;
                                                             LowParse_Writers_Parser.serializer
                                                               = serializer;
                                                             LowParse_Writers_Parser.jumper
                                                               = jumper;_}
                                                             -> kind
                                                   with
                                                   | {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         = parser_kind_low;
                                                       LowParse_Spec_Base.parser_kind_high
                                                         = parser_kind_high;
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         parser_kind_subkind;
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         parser_kind_metadata;_}
                                                       -> parser_kind_subkind)
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong)
                                                else false)
                                             then
                                               FStar_Pervasives_Native.Some
                                                 LowParse_Spec_Base.ParserStrong
                                             else
                                               FStar_Pervasives_Native.None);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (match (FStar_Pervasives_Native.None,
                                                 (match match match p with
                                                              | LowParse_Writers_Parser.Parser
                                                                  (t, p1) ->
                                                                  p1
                                                        with
                                                        | {
                                                            LowParse_Writers_Parser.kind
                                                              = kind;
                                                            LowParse_Writers_Parser.parser
                                                              = parser;
                                                            LowParse_Writers_Parser.serializer
                                                              = serializer;
                                                            LowParse_Writers_Parser.jumper
                                                              = jumper;_}
                                                            -> kind
                                                  with
                                                  | {
                                                      LowParse_Spec_Base.parser_kind_low
                                                        = parser_kind_low;
                                                      LowParse_Spec_Base.parser_kind_high
                                                        = parser_kind_high;
                                                      LowParse_Spec_Base.parser_kind_subkind
                                                        = parser_kind_subkind;
                                                      LowParse_Spec_Base.parser_kind_metadata
                                                        =
                                                        parser_kind_metadata;_}
                                                      -> parser_kind_metadata))
                                         with
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail),
                                            uu___) ->
                                             FStar_Pervasives_Native.None
                                         | (uu___,
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataFail))
                                             ->
                                             (match match match p with
                                                          | LowParse_Writers_Parser.Parser
                                                              (t, p1) -> p1
                                                    with
                                                    | {
                                                        LowParse_Writers_Parser.kind
                                                          = kind;
                                                        LowParse_Writers_Parser.parser
                                                          = parser;
                                                        LowParse_Writers_Parser.serializer
                                                          = serializer;
                                                        LowParse_Writers_Parser.jumper
                                                          = jumper;_}
                                                        -> kind
                                              with
                                              | {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    = parser_kind_low;
                                                  LowParse_Spec_Base.parser_kind_high
                                                    = parser_kind_high;
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    = parser_kind_subkind;
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    = parser_kind_metadata;_}
                                                  -> parser_kind_metadata)
                                         | (FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal),
                                            FStar_Pervasives_Native.Some
                                            (LowParse_Spec_Base.ParserKindMetadataTotal))
                                             -> FStar_Pervasives_Native.None
                                         | uu___ ->
                                             FStar_Pervasives_Native.None)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let h1 =
                                                 FStar_HyperStack_ST.get () in
                                               let h2 =
                                                 FStar_HyperStack_ST.get () in
                                               let h3 =
                                                 FStar_HyperStack_ST.get () in
                                               let uu___1 =
                                                 let uu___2 =
                                                   match if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))
                                                   with
                                                   | uu___3 when
                                                       uu___3 = Prims.int_one
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (2))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (3))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                          ()) () () input pos
                                                   | uu___3 when
                                                       uu___3 =
                                                         (Prims.of_int (4))
                                                       ->
                                                       (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                          ()) () () input pos in
                                                 FStar_UInt32.add
                                                   (FStar_UInt32.uint_to_t
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))))
                                                   uu___2 in
                                               FStar_UInt32.add pos uu___1 in
                                             match match p with
                                                   | LowParse_Writers_Parser.Parser
                                                       (t, p1) -> p1
                                             with
                                             | {
                                                 LowParse_Writers_Parser.kind
                                                   = kind;
                                                 LowParse_Writers_Parser.parser
                                                   = parser;
                                                 LowParse_Writers_Parser.serializer
                                                   = serializer;
                                                 LowParse_Writers_Parser.jumper
                                                   = jumper;_}
                                                 -> jumper () () input uu___)
                                })))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              Prims.int_zero >
                                                (FStar_UInt32.v min)
                                            then Prims.int_zero
                                            else FStar_UInt32.v min));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (FStar_Pervasives_Native.Some
                                           ((if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))
                                              +
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   ((if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min))
                                               then
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min)
                                               else FStar_UInt32.v max)));
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserStrong);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        = FStar_Pervasives_Native.None
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let h1 =
                                               FStar_HyperStack_ST.get () in
                                             let h2 =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let uu___1 =
                                                 match if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))
                                                 with
                                                 | uu___2 when
                                                     uu___2 = Prims.int_one
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (2))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (3))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (4))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                        ()) () () input pos in
                                               FStar_UInt32.add
                                                 (FStar_UInt32.uint_to_t
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))))
                                                 uu___1 in
                                             FStar_UInt32.add pos uu___)
                                }))) () () () () ()
                        (fun b ->
                           fun len ->
                             fun pos ->
                               let h = FStar_HyperStack_ST.get () in
                               let sl =
                                 {
                                   LowParse_Slice.base = b;
                                   LowParse_Slice.len = len
                                 } in
                               let pos_last =
                                 let h1 = FStar_HyperStack_ST.get () in
                                 let h2 = FStar_HyperStack_ST.get () in
                                 let h3 = FStar_HyperStack_ST.get () in
                                 let uu___ =
                                   let uu___1 =
                                     (match if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))
                                      with
                                      | uu___2 when uu___2 = Prims.int_one ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_1
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (2)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_2
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (3)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_3
                                            ()
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (4)) ->
                                          LowParse_Low_BoundedInt.read_bounded_integer_4
                                            ()) () () (Obj.magic sl)
                                       (FStar_UInt32.uint_to_t Prims.int_zero) in
                                   FStar_UInt32.add
                                     (FStar_UInt32.uint_to_t
                                        (if
                                           (FStar_UInt32.v max) <
                                             (Prims.of_int (256))
                                         then Prims.int_one
                                         else
                                           if
                                             (FStar_UInt32.v max) <
                                               (Prims.parse_int "65536")
                                           then (Prims.of_int (2))
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "16777216")
                                             then (Prims.of_int (3))
                                             else (Prims.of_int (4)))) uu___1 in
                                 FStar_UInt32.add
                                   (FStar_UInt32.uint_to_t Prims.int_zero)
                                   uu___ in
                               let pos_pl =
                                 FStar_UInt32.uint_to_t
                                   (if
                                      (FStar_UInt32.v max) <
                                        (Prims.of_int (256))
                                    then Prims.int_one
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "65536")
                                      then (Prims.of_int (2))
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "16777216")
                                        then (Prims.of_int (3))
                                        else (Prims.of_int (4))) in
                               let sz = FStar_UInt32.sub pos pos_pl in
                               if
                                 (FStar_UInt32.lte min sz) &&
                                   (FStar_UInt32.lte sz max)
                               then
                                 ((let h1 = FStar_HyperStack_ST.get () in
                                   let uu___1 =
                                     (match if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))
                                      with
                                      | uu___2 when uu___2 = Prims.int_one ->
                                          (fun x1 ->
                                             fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos1 ->
                                                     let h0 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let len1 =
                                                       LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                         () x1 () ()
                                                         (match input with
                                                          | {
                                                              LowParse_Slice.base
                                                                = base;
                                                              LowParse_Slice.len
                                                                = len2;_}
                                                              -> base) pos1 in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos1
                                                       len1)
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (2)) ->
                                          (fun x1 ->
                                             fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos1 ->
                                                     let h0 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let len1 =
                                                       LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                         () x1 () ()
                                                         (match input with
                                                          | {
                                                              LowParse_Slice.base
                                                                = base;
                                                              LowParse_Slice.len
                                                                = len2;_}
                                                              -> base) pos1 in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos1
                                                       len1)
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (3)) ->
                                          (fun x1 ->
                                             fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos1 ->
                                                     let h0 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let len1 =
                                                       LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                         () x1 () ()
                                                         (match input with
                                                          | {
                                                              LowParse_Slice.base
                                                                = base;
                                                              LowParse_Slice.len
                                                                = len2;_}
                                                              -> base) pos1 in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos1
                                                       len1)
                                      | uu___2 when
                                          uu___2 = (Prims.of_int (4)) ->
                                          (fun x1 ->
                                             fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos1 ->
                                                     let h0 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let len1 =
                                                       LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                         () x1 () ()
                                                         (match input with
                                                          | {
                                                              LowParse_Slice.base
                                                                = base;
                                                              LowParse_Slice.len
                                                                = len2;_}
                                                              -> base) pos1 in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos1
                                                       len1))
                                       (FStar_UInt32.sub pos
                                          (FStar_UInt32.add
                                             (FStar_UInt32.uint_to_t
                                                Prims.int_zero)
                                             (FStar_UInt32.uint_to_t
                                                (if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4))))))
                                       () () (Obj.magic sl)
                                       (FStar_UInt32.uint_to_t Prims.int_zero) in
                                   let h2 = FStar_HyperStack_ST.get () in ());
                                  LowParse_Writers_Effect.ICorrect ((), pos))
                               else
                                 LowParse_Writers_Effect.IError
                                   "parse_vllist_snoc_weak: out of bounds"))))


let (parse_vllist_recast_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          FStar_UInt32.t ->
            FStar_UInt32.t ->
              (unit, unit, unit, Prims.l_True, unit, unit, unit, unit)
                LowParse_Writers_Effect.repr_impl)
  =
  fun uu___5 ->
    fun uu___4 ->
      fun uu___3 ->
        fun uu___2 ->
          fun uu___1 ->
            fun uu___ ->
              (fun inv ->
                 fun p ->
                   fun min ->
                     fun max ->
                       fun min' ->
                         fun max' ->
                           Obj.magic
                             (LowParse_Writers_Effect.mk_repr_impl
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                ((if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      Prims.int_zero >
                                                        (FStar_UInt32.v min)
                                                    then Prims.int_zero
                                                    else FStar_UInt32.v min));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   ((if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4)))
                                                      +
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           ((if
                                                               Prims.int_zero
                                                                 >
                                                                 (FStar_UInt32.v
                                                                    min)
                                                             then
                                                               Prims.int_zero
                                                             else
                                                               FStar_UInt32.v
                                                                 min))
                                                       then
                                                         (if
                                                            Prims.int_zero >
                                                              (FStar_UInt32.v
                                                                 min)
                                                          then Prims.int_zero
                                                          else
                                                            FStar_UInt32.v
                                                              min)
                                                       else
                                                         FStar_UInt32.v max)));
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserStrong);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                FStar_Pervasives_Native.None
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h1 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let uu___1 =
                                                         match if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))
                                                         with
                                                         | uu___2 when
                                                             uu___2 =
                                                               Prims.int_one
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (2))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (3))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (4))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                ()) () ()
                                                               input pos in
                                                       FStar_UInt32.add
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))))
                                                         uu___1 in
                                                     FStar_UInt32.add pos
                                                       uu___)
                                        })))
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                ((if
                                                    (FStar_UInt32.v max') <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max') <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max')
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      Prims.int_zero >
                                                        (FStar_UInt32.v min')
                                                    then Prims.int_zero
                                                    else FStar_UInt32.v min'));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   ((if
                                                       (FStar_UInt32.v max')
                                                         <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max')
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max')
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4)))
                                                      +
                                                      (if
                                                         (FStar_UInt32.v max')
                                                           <
                                                           ((if
                                                               Prims.int_zero
                                                                 >
                                                                 (FStar_UInt32.v
                                                                    min')
                                                             then
                                                               Prims.int_zero
                                                             else
                                                               FStar_UInt32.v
                                                                 min'))
                                                       then
                                                         (if
                                                            Prims.int_zero >
                                                              (FStar_UInt32.v
                                                                 min')
                                                          then Prims.int_zero
                                                          else
                                                            FStar_UInt32.v
                                                              min')
                                                       else
                                                         FStar_UInt32.v max')));
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserStrong);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                FStar_Pervasives_Native.None
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h1 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let uu___1 =
                                                         match if
                                                                 (FStar_UInt32.v
                                                                    max')
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max') <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max') <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))
                                                         with
                                                         | uu___2 when
                                                             uu___2 =
                                                               Prims.int_one
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (2))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (3))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (4))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                ()) () ()
                                                               input pos in
                                                       FStar_UInt32.add
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max')
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max')
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max') <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))))
                                                         uu___1 in
                                                     FStar_UInt32.add pos
                                                       uu___)
                                        }))) () () () () ()
                                (fun b ->
                                   fun len ->
                                     fun pos ->
                                       let h = FStar_HyperStack_ST.get () in
                                       let sl =
                                         {
                                           LowParse_Slice.base = b;
                                           LowParse_Slice.len = len
                                         } in
                                       let sz =
                                         FStar_UInt32.sub pos
                                           (FStar_UInt32.uint_to_t
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))) in
                                       if
                                         (FStar_UInt32.lte min' sz) &&
                                           (FStar_UInt32.lte sz max')
                                       then
                                         LowParse_Writers_Effect.ICorrect
                                           ((), pos)
                                       else
                                         LowParse_Writers_Effect.IError
                                           "parse_vllist_recast: out of bounds")))
                uu___5 uu___4 uu___3 uu___2 uu___1 uu___
let (parse_vllist_recast :
  unit ->
    LowParse_Writers_Parser.parser ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          FStar_UInt32.t ->
            FStar_UInt32.t ->
              (unit, unit, unit, unit, unit, unit, unit)
                LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun p ->
      fun min ->
        fun max ->
          fun min' ->
            fun max' ->
              LowParse_Writers_Effect.Repr
                ((),
                  (Obj.magic
                     (LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              Prims.int_zero >
                                                (FStar_UInt32.v min)
                                            then Prims.int_zero
                                            else FStar_UInt32.v min));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (FStar_Pervasives_Native.Some
                                           ((if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))
                                              +
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   ((if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min))
                                               then
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min)
                                               else FStar_UInt32.v max)));
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserStrong);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        = FStar_Pervasives_Native.None
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let h1 =
                                               FStar_HyperStack_ST.get () in
                                             let h2 =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let uu___1 =
                                                 match if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))
                                                 with
                                                 | uu___2 when
                                                     uu___2 = Prims.int_one
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (2))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (3))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (4))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                        ()) () () input pos in
                                               FStar_UInt32.add
                                                 (FStar_UInt32.uint_to_t
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))))
                                                 uu___1 in
                                             FStar_UInt32.add pos uu___)
                                })))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((if
                                            (FStar_UInt32.v max') <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max') <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max') <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              Prims.int_zero >
                                                (FStar_UInt32.v min')
                                            then Prims.int_zero
                                            else FStar_UInt32.v min'));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (FStar_Pervasives_Native.Some
                                           ((if
                                               (FStar_UInt32.v max') <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max') <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max') <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))
                                              +
                                              (if
                                                 (FStar_UInt32.v max') <
                                                   ((if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min')
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min'))
                                               then
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min')
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min')
                                               else FStar_UInt32.v max')));
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserStrong);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        = FStar_Pervasives_Native.None
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let h1 =
                                               FStar_HyperStack_ST.get () in
                                             let h2 =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let uu___1 =
                                                 match if
                                                         (FStar_UInt32.v max')
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max')
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max')
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))
                                                 with
                                                 | uu___2 when
                                                     uu___2 = Prims.int_one
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (2))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (3))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (4))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                        ()) () () input pos in
                                               FStar_UInt32.add
                                                 (FStar_UInt32.uint_to_t
                                                    (if
                                                       (FStar_UInt32.v max')
                                                         <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max')
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max')
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))))
                                                 uu___1 in
                                             FStar_UInt32.add pos uu___)
                                }))) () () () () ()
                        (fun b ->
                           fun len ->
                             fun pos ->
                               let h = FStar_HyperStack_ST.get () in
                               if
                                 (FStar_UInt32.lte min'
                                    (FStar_UInt32.sub pos
                                       (FStar_UInt32.uint_to_t
                                          (if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4))))))
                                   &&
                                   (FStar_UInt32.lte
                                      (FStar_UInt32.sub pos
                                         (FStar_UInt32.uint_to_t
                                            (if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))))
                                      max')
                               then
                                 LowParse_Writers_Effect.ICorrect ((), pos)
                               else
                                 LowParse_Writers_Effect.IError
                                   "parse_vllist_recast: out of bounds"))))
type ('min, 'max, 'x) parse_vlbytes_pred = unit
type ('min, 'max) parse_vlbytes_t = FStar_Bytes.bytes

let (parse_vlbytes :
  FStar_UInt32.t -> FStar_UInt32.t -> LowParse_Writers_Parser.parser) =
  fun min ->
    fun max ->
      LowParse_Writers_Parser.Parser
        ((),
          (Obj.magic
             {
               LowParse_Writers_Parser.kind =
                 {
                   LowParse_Spec_Base.parser_kind_low =
                     ((if (FStar_UInt32.v max) < (Prims.of_int (256))
                       then Prims.int_one
                       else
                         if (FStar_UInt32.v max) < (Prims.parse_int "65536")
                         then (Prims.of_int (2))
                         else
                           if
                             (FStar_UInt32.v max) <
                               (Prims.parse_int "16777216")
                           then (Prims.of_int (3))
                           else (Prims.of_int (4)))
                        +
                        (if Prims.int_zero > (FStar_UInt32.v min)
                         then Prims.int_zero
                         else FStar_UInt32.v min));
                   LowParse_Spec_Base.parser_kind_high =
                     (FStar_Pervasives_Native.Some
                        ((if (FStar_UInt32.v max) < (Prims.of_int (256))
                          then Prims.int_one
                          else
                            if
                              (FStar_UInt32.v max) <
                                (Prims.parse_int "65536")
                            then (Prims.of_int (2))
                            else
                              if
                                (FStar_UInt32.v max) <
                                  (Prims.parse_int "16777216")
                              then (Prims.of_int (3))
                              else (Prims.of_int (4)))
                           +
                           (if
                              (FStar_UInt32.v max) <
                                ((if Prims.int_zero > (FStar_UInt32.v min)
                                  then Prims.int_zero
                                  else FStar_UInt32.v min))
                            then
                              (if Prims.int_zero > (FStar_UInt32.v min)
                               then Prims.int_zero
                               else FStar_UInt32.v min)
                            else FStar_UInt32.v max)));
                   LowParse_Spec_Base.parser_kind_subkind =
                     (FStar_Pervasives_Native.Some
                        LowParse_Spec_Base.ParserStrong);
                   LowParse_Spec_Base.parser_kind_metadata =
                     FStar_Pervasives_Native.None
                 };
               LowParse_Writers_Parser.parser = ();
               LowParse_Writers_Parser.serializer = ();
               LowParse_Writers_Parser.jumper =
                 (fun rrel ->
                    fun rel ->
                      fun input ->
                        fun pos ->
                          let h = FStar_HyperStack_ST.get () in
                          let h1 = FStar_HyperStack_ST.get () in
                          let h2 = FStar_HyperStack_ST.get () in
                          let h3 = FStar_HyperStack_ST.get () in
                          let uu___ =
                            let uu___1 =
                              match if
                                      (FStar_UInt32.v max) <
                                        (Prims.of_int (256))
                                    then Prims.int_one
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "65536")
                                      then (Prims.of_int (2))
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "16777216")
                                        then (Prims.of_int (3))
                                        else (Prims.of_int (4))
                              with
                              | uu___2 when uu___2 = Prims.int_one ->
                                  (LowParse_Low_BoundedInt.read_bounded_integer_1
                                     ()) () () input pos
                              | uu___2 when uu___2 = (Prims.of_int (2)) ->
                                  (LowParse_Low_BoundedInt.read_bounded_integer_2
                                     ()) () () input pos
                              | uu___2 when uu___2 = (Prims.of_int (3)) ->
                                  (LowParse_Low_BoundedInt.read_bounded_integer_3
                                     ()) () () input pos
                              | uu___2 when uu___2 = (Prims.of_int (4)) ->
                                  (LowParse_Low_BoundedInt.read_bounded_integer_4
                                     ()) () () input pos in
                            FStar_UInt32.add
                              (FStar_UInt32.uint_to_t
                                 (if
                                    (FStar_UInt32.v max) <
                                      (Prims.of_int (256))
                                  then Prims.int_one
                                  else
                                    if
                                      (FStar_UInt32.v max) <
                                        (Prims.parse_int "65536")
                                    then (Prims.of_int (2))
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "16777216")
                                      then (Prims.of_int (3))
                                      else (Prims.of_int (4)))) uu___1 in
                          FStar_UInt32.add pos uu___)
             }))

let (get_vlbytes_impl :
  unit ->
    FStar_UInt32.t ->
      FStar_UInt32.t ->
        LowParse_Writers_Effect.rptr ->
          ((LowParse_Bytes.byte LowStar_Buffer.buffer * FStar_UInt32.t),
            Prims.l_True, Obj.t, Prims.l_False, unit, unit)
            LowParse_Writers_Effect.read_repr_impl)
  =
  fun inv ->
    fun min ->
      fun max ->
        fun p ->
          LowParse_Writers_Effect.mk_read_repr_impl () ()
            (fun uu___ ->
               let uu___1 =
                 LowParse_Writers_Effect.buffer_of_ptr
                   (LowParse_Writers_Parser.Parser
                      ((),
                        (Obj.magic
                           {
                             LowParse_Writers_Parser.kind =
                               {
                                 LowParse_Spec_Base.parser_kind_low =
                                   ((if
                                       (FStar_UInt32.v max) <
                                         (Prims.of_int (256))
                                     then Prims.int_one
                                     else
                                       if
                                         (FStar_UInt32.v max) <
                                           (Prims.parse_int "65536")
                                       then (Prims.of_int (2))
                                       else
                                         if
                                           (FStar_UInt32.v max) <
                                             (Prims.parse_int "16777216")
                                         then (Prims.of_int (3))
                                         else (Prims.of_int (4)))
                                      +
                                      (if
                                         Prims.int_zero >
                                           (FStar_UInt32.v min)
                                       then Prims.int_zero
                                       else FStar_UInt32.v min));
                                 LowParse_Spec_Base.parser_kind_high =
                                   (FStar_Pervasives_Native.Some
                                      ((if
                                          (FStar_UInt32.v max) <
                                            (Prims.of_int (256))
                                        then Prims.int_one
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "65536")
                                          then (Prims.of_int (2))
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "16777216")
                                            then (Prims.of_int (3))
                                            else (Prims.of_int (4)))
                                         +
                                         (if
                                            (FStar_UInt32.v max) <
                                              ((if
                                                  Prims.int_zero >
                                                    (FStar_UInt32.v min)
                                                then Prims.int_zero
                                                else FStar_UInt32.v min))
                                          then
                                            (if
                                               Prims.int_zero >
                                                 (FStar_UInt32.v min)
                                             then Prims.int_zero
                                             else FStar_UInt32.v min)
                                          else FStar_UInt32.v max)));
                                 LowParse_Spec_Base.parser_kind_subkind =
                                   (FStar_Pervasives_Native.Some
                                      LowParse_Spec_Base.ParserStrong);
                                 LowParse_Spec_Base.parser_kind_metadata =
                                   FStar_Pervasives_Native.None
                               };
                             LowParse_Writers_Parser.parser = ();
                             LowParse_Writers_Parser.serializer = ();
                             LowParse_Writers_Parser.jumper =
                               (fun rrel ->
                                  fun rel ->
                                    fun input ->
                                      fun pos ->
                                        let h = FStar_HyperStack_ST.get () in
                                        let h1 = FStar_HyperStack_ST.get () in
                                        let h2 = FStar_HyperStack_ST.get () in
                                        let h3 = FStar_HyperStack_ST.get () in
                                        let uu___2 =
                                          let uu___3 =
                                            match if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4))
                                            with
                                            | uu___4 when
                                                uu___4 = Prims.int_one ->
                                                (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                   ()) () () input pos
                                            | uu___4 when
                                                uu___4 = (Prims.of_int (2))
                                                ->
                                                (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                   ()) () () input pos
                                            | uu___4 when
                                                uu___4 = (Prims.of_int (3))
                                                ->
                                                (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                   ()) () () input pos
                                            | uu___4 when
                                                uu___4 = (Prims.of_int (4))
                                                ->
                                                (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                   ()) () () input pos in
                                          FStar_UInt32.add
                                            (FStar_UInt32.uint_to_t
                                               (if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4))))
                                            uu___3 in
                                        FStar_UInt32.add pos uu___2)
                           }))) () p in
               match uu___1 with
               | (base, len) ->
                   let input =
                     { LowParse_Slice.base = base; LowParse_Slice.len = len } in
                   let blen =
                     let h = FStar_HyperStack_ST.get () in
                     let len1 =
                       (match if (FStar_UInt32.v max) < (Prims.of_int (256))
                              then Prims.int_one
                              else
                                if
                                  (FStar_UInt32.v max) <
                                    (Prims.parse_int "65536")
                                then (Prims.of_int (2))
                                else
                                  if
                                    (FStar_UInt32.v max) <
                                      (Prims.parse_int "16777216")
                                  then (Prims.of_int (3))
                                  else (Prims.of_int (4))
                        with
                        | uu___2 when uu___2 = Prims.int_one ->
                            LowParse_Low_BoundedInt.read_bounded_integer_1 ()
                        | uu___2 when uu___2 = (Prims.of_int (2)) ->
                            LowParse_Low_BoundedInt.read_bounded_integer_2 ()
                        | uu___2 when uu___2 = (Prims.of_int (3)) ->
                            LowParse_Low_BoundedInt.read_bounded_integer_3 ()
                        | uu___2 when uu___2 = (Prims.of_int (4)) ->
                            LowParse_Low_BoundedInt.read_bounded_integer_4 ())
                         () () (Obj.magic input)
                         (FStar_UInt32.uint_to_t Prims.int_zero) in
                     len1 in
                   let b =
                     let h = FStar_HyperStack_ST.get () in
                     let len1 =
                       (match if (FStar_UInt32.v max) < (Prims.of_int (256))
                              then Prims.int_one
                              else
                                if
                                  (FStar_UInt32.v max) <
                                    (Prims.parse_int "65536")
                                then (Prims.of_int (2))
                                else
                                  if
                                    (FStar_UInt32.v max) <
                                      (Prims.parse_int "16777216")
                                  then (Prims.of_int (3))
                                  else (Prims.of_int (4))
                        with
                        | uu___2 when uu___2 = Prims.int_one ->
                            LowParse_Low_BoundedInt.read_bounded_integer_1 ()
                        | uu___2 when uu___2 = (Prims.of_int (2)) ->
                            LowParse_Low_BoundedInt.read_bounded_integer_2 ()
                        | uu___2 when uu___2 = (Prims.of_int (3)) ->
                            LowParse_Low_BoundedInt.read_bounded_integer_3 ()
                        | uu___2 when uu___2 = (Prims.of_int (4)) ->
                            LowParse_Low_BoundedInt.read_bounded_integer_4 ())
                         () () (Obj.magic input)
                         (FStar_UInt32.uint_to_t Prims.int_zero) in
                     LowStar_Monotonic_Buffer.msub
                       (match input with
                        | { LowParse_Slice.base = base1;
                            LowParse_Slice.len = len2;_} -> base1)
                       (FStar_UInt32.add
                          (FStar_UInt32.uint_to_t Prims.int_zero)
                          (FStar_UInt32.uint_to_t
                             (if (FStar_UInt32.v max) < (Prims.of_int (256))
                              then Prims.int_one
                              else
                                if
                                  (FStar_UInt32.v max) <
                                    (Prims.parse_int "65536")
                                then (Prims.of_int (2))
                                else
                                  if
                                    (FStar_UInt32.v max) <
                                      (Prims.parse_int "16777216")
                                  then (Prims.of_int (3))
                                  else (Prims.of_int (4))))) () in
                   LowParse_Writers_Effect.Correct (b, blen))
let (get_vlbytes :
  unit ->
    FStar_UInt32.t ->
      FStar_UInt32.t ->
        LowParse_Writers_Effect.rptr ->
          ((LowParse_Bytes.byte LowStar_Buffer.buffer * FStar_UInt32.t),
            unit, unit, Prims.l_False, unit)
            LowParse_Writers_Effect.read_repr)
  =
  fun uu___3 ->
    fun uu___2 ->
      fun uu___1 ->
        fun uu___ ->
          (fun inv ->
             fun min ->
               fun max ->
                 fun p ->
                   Obj.magic
                     (LowParse_Writers_Effect.ReadRepr
                        ((),
                          (LowParse_Writers_Effect.mk_read_repr_impl () ()
                             (fun uu___ ->
                                let uu___1 =
                                  LowParse_Writers_Effect.buffer_of_ptr
                                    (LowParse_Writers_Parser.Parser
                                       ((),
                                         (Obj.magic
                                            {
                                              LowParse_Writers_Parser.kind =
                                                {
                                                  LowParse_Spec_Base.parser_kind_low
                                                    =
                                                    ((if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.of_int (256))
                                                      then Prims.int_one
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "65536")
                                                        then
                                                          (Prims.of_int (2))
                                                        else
                                                          if
                                                            (FStar_UInt32.v
                                                               max)
                                                              <
                                                              (Prims.parse_int "16777216")
                                                          then
                                                            (Prims.of_int (3))
                                                          else
                                                            (Prims.of_int (4)))
                                                       +
                                                       (if
                                                          Prims.int_zero >
                                                            (FStar_UInt32.v
                                                               min)
                                                        then Prims.int_zero
                                                        else
                                                          FStar_UInt32.v min));
                                                  LowParse_Spec_Base.parser_kind_high
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       ((if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4)))
                                                          +
                                                          (if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               ((if
                                                                   Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                 then
                                                                   Prims.int_zero
                                                                 else
                                                                   FStar_UInt32.v
                                                                    min))
                                                           then
                                                             (if
                                                                Prims.int_zero
                                                                  >
                                                                  (FStar_UInt32.v
                                                                    min)
                                                              then
                                                                Prims.int_zero
                                                              else
                                                                FStar_UInt32.v
                                                                  min)
                                                           else
                                                             FStar_UInt32.v
                                                               max)));
                                                  LowParse_Spec_Base.parser_kind_subkind
                                                    =
                                                    (FStar_Pervasives_Native.Some
                                                       LowParse_Spec_Base.ParserStrong);
                                                  LowParse_Spec_Base.parser_kind_metadata
                                                    =
                                                    FStar_Pervasives_Native.None
                                                };
                                              LowParse_Writers_Parser.parser
                                                = ();
                                              LowParse_Writers_Parser.serializer
                                                = ();
                                              LowParse_Writers_Parser.jumper
                                                =
                                                (fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos ->
                                                         let h =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let h1 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let h2 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let h3 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let uu___2 =
                                                           let uu___3 =
                                                             match if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                   then
                                                                    Prims.int_one
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                             with
                                                             | uu___4 when
                                                                 uu___4 =
                                                                   Prims.int_one
                                                                 ->
                                                                 (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                   input pos
                                                             | uu___4 when
                                                                 uu___4 =
                                                                   (Prims.of_int (2))
                                                                 ->
                                                                 (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                   input pos
                                                             | uu___4 when
                                                                 uu___4 =
                                                                   (Prims.of_int (3))
                                                                 ->
                                                                 (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                   input pos
                                                             | uu___4 when
                                                                 uu___4 =
                                                                   (Prims.of_int (4))
                                                                 ->
                                                                 (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                   input pos in
                                                           FStar_UInt32.add
                                                             (FStar_UInt32.uint_to_t
                                                                (if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                 then
                                                                   Prims.int_one
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                   then
                                                                    (Prims.of_int (2))
                                                                   else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                             uu___3 in
                                                         FStar_UInt32.add pos
                                                           uu___2)
                                            }))) () p in
                                match uu___1 with
                                | (base, len) ->
                                    let input =
                                      {
                                        LowParse_Slice.base = base;
                                        LowParse_Slice.len = len
                                      } in
                                    let blen =
                                      let h = FStar_HyperStack_ST.get () in
                                      let len1 =
                                        (match if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4))
                                         with
                                         | uu___2 when uu___2 = Prims.int_one
                                             ->
                                             LowParse_Low_BoundedInt.read_bounded_integer_1
                                               ()
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (2)) ->
                                             LowParse_Low_BoundedInt.read_bounded_integer_2
                                               ()
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (3)) ->
                                             LowParse_Low_BoundedInt.read_bounded_integer_3
                                               ()
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (4)) ->
                                             LowParse_Low_BoundedInt.read_bounded_integer_4
                                               ()) () () (Obj.magic input)
                                          (FStar_UInt32.uint_to_t
                                             Prims.int_zero) in
                                      len1 in
                                    let b =
                                      let h = FStar_HyperStack_ST.get () in
                                      let len1 =
                                        (match if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4))
                                         with
                                         | uu___2 when uu___2 = Prims.int_one
                                             ->
                                             LowParse_Low_BoundedInt.read_bounded_integer_1
                                               ()
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (2)) ->
                                             LowParse_Low_BoundedInt.read_bounded_integer_2
                                               ()
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (3)) ->
                                             LowParse_Low_BoundedInt.read_bounded_integer_3
                                               ()
                                         | uu___2 when
                                             uu___2 = (Prims.of_int (4)) ->
                                             LowParse_Low_BoundedInt.read_bounded_integer_4
                                               ()) () () (Obj.magic input)
                                          (FStar_UInt32.uint_to_t
                                             Prims.int_zero) in
                                      LowStar_Monotonic_Buffer.msub
                                        (match input with
                                         | { LowParse_Slice.base = base1;
                                             LowParse_Slice.len = len2;_} ->
                                             base1)
                                        (FStar_UInt32.add
                                           (FStar_UInt32.uint_to_t
                                              Prims.int_zero)
                                           (FStar_UInt32.uint_to_t
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.of_int (256))
                                               then Prims.int_one
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "65536")
                                                 then (Prims.of_int (2))
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "16777216")
                                                   then (Prims.of_int (3))
                                                   else (Prims.of_int (4)))))
                                        () in
                                    LowParse_Writers_Effect.Correct (b, blen))))))
            uu___3 uu___2 uu___1 uu___

type ('inv, 'min, 'max, 'len, 'l) put_vlbytes_impl_t =
  LowParse_Bytes.byte LowStar_Buffer.buffer -> unit
let (put_vlbytes_impl :
  unit ->
    FStar_UInt32.t ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          unit ->
            (LowParse_Bytes.byte LowStar_Buffer.buffer -> unit) ->
              (unit, unit, unit, Prims.l_True, unit, Prims.l_False, unit,
                unit) LowParse_Writers_Effect.repr_impl)
  =
  fun uu___5 ->
    fun uu___4 ->
      fun uu___3 ->
        fun uu___2 ->
          fun uu___1 ->
            fun uu___ ->
              (fun inv ->
                 fun min ->
                   fun max ->
                     fun len ->
                       fun l ->
                         fun f ->
                           Obj.magic
                             (LowParse_Writers_Effect.mk_repr_impl
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                = Prims.int_zero;
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   Prims.int_zero);
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserStrong);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserKindMetadataTotal)
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     FStar_UInt32.add pos
                                                       (FStar_UInt32.uint_to_t
                                                          Prims.int_zero))
                                        })))
                                (LowParse_Writers_Parser.Parser
                                   ((),
                                     (Obj.magic
                                        {
                                          LowParse_Writers_Parser.kind =
                                            {
                                              LowParse_Spec_Base.parser_kind_low
                                                =
                                                ((if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.of_int (256))
                                                  then Prims.int_one
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "65536")
                                                    then (Prims.of_int (2))
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "16777216")
                                                      then (Prims.of_int (3))
                                                      else (Prims.of_int (4)))
                                                   +
                                                   (if
                                                      Prims.int_zero >
                                                        (FStar_UInt32.v min)
                                                    then Prims.int_zero
                                                    else FStar_UInt32.v min));
                                              LowParse_Spec_Base.parser_kind_high
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   ((if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4)))
                                                      +
                                                      (if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           ((if
                                                               Prims.int_zero
                                                                 >
                                                                 (FStar_UInt32.v
                                                                    min)
                                                             then
                                                               Prims.int_zero
                                                             else
                                                               FStar_UInt32.v
                                                                 min))
                                                       then
                                                         (if
                                                            Prims.int_zero >
                                                              (FStar_UInt32.v
                                                                 min)
                                                          then Prims.int_zero
                                                          else
                                                            FStar_UInt32.v
                                                              min)
                                                       else
                                                         FStar_UInt32.v max)));
                                              LowParse_Spec_Base.parser_kind_subkind
                                                =
                                                (FStar_Pervasives_Native.Some
                                                   LowParse_Spec_Base.ParserStrong);
                                              LowParse_Spec_Base.parser_kind_metadata
                                                =
                                                FStar_Pervasives_Native.None
                                            };
                                          LowParse_Writers_Parser.parser = ();
                                          LowParse_Writers_Parser.serializer
                                            = ();
                                          LowParse_Writers_Parser.jumper =
                                            (fun rrel ->
                                               fun rel ->
                                                 fun input ->
                                                   fun pos ->
                                                     let h =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h1 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h2 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let h3 =
                                                       FStar_HyperStack_ST.get
                                                         () in
                                                     let uu___ =
                                                       let uu___1 =
                                                         match if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.of_int (256))
                                                               then
                                                                 Prims.int_one
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                 then
                                                                   (Prims.of_int (2))
                                                                 else
                                                                   if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                   then
                                                                    (Prims.of_int (3))
                                                                   else
                                                                    (Prims.of_int (4))
                                                         with
                                                         | uu___2 when
                                                             uu___2 =
                                                               Prims.int_one
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (2))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (3))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                ()) () ()
                                                               input pos
                                                         | uu___2 when
                                                             uu___2 =
                                                               (Prims.of_int (4))
                                                             ->
                                                             (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                ()) () ()
                                                               input pos in
                                                       FStar_UInt32.add
                                                         (FStar_UInt32.uint_to_t
                                                            (if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.of_int (256))
                                                             then
                                                               Prims.int_one
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "65536")
                                                               then
                                                                 (Prims.of_int (2))
                                                               else
                                                                 if
                                                                   (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                 then
                                                                   (Prims.of_int (3))
                                                                 else
                                                                   (Prims.of_int (4))))
                                                         uu___1 in
                                                     FStar_UInt32.add pos
                                                       uu___)
                                        }))) () () () () ()
                                (fun b ->
                                   fun blen ->
                                     fun uu___ ->
                                       let ilen =
                                         FStar_UInt32.uint_to_t
                                           (if
                                              (FStar_UInt32.v max) <
                                                (Prims.of_int (256))
                                            then Prims.int_one
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "65536")
                                              then (Prims.of_int (2))
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "16777216")
                                                then (Prims.of_int (3))
                                                else (Prims.of_int (4))) in
                                       if
                                         (FStar_UInt32.lt blen ilen) ||
                                           (FStar_UInt32.lt
                                              (FStar_UInt32.sub blen ilen)
                                              len)
                                       then LowParse_Writers_Effect.IOverflow
                                       else
                                         (let sl =
                                            {
                                              LowParse_Slice.base = b;
                                              LowParse_Slice.len = blen
                                            } in
                                          let uu___2 =
                                            (match if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.of_int (256))
                                                   then Prims.int_one
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "65536")
                                                     then (Prims.of_int (2))
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "16777216")
                                                       then
                                                         (Prims.of_int (3))
                                                       else
                                                         (Prims.of_int (4))
                                             with
                                             | uu___3 when
                                                 uu___3 = Prims.int_one ->
                                                 (fun x ->
                                                    fun rrel ->
                                                      fun rel ->
                                                        fun input ->
                                                          fun pos ->
                                                            let h0 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let len1 =
                                                              LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                () x () ()
                                                                (match input
                                                                 with
                                                                 | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                pos in
                                                            let h =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            FStar_UInt32.add
                                                              pos len1)
                                             | uu___3 when
                                                 uu___3 = (Prims.of_int (2))
                                                 ->
                                                 (fun x ->
                                                    fun rrel ->
                                                      fun rel ->
                                                        fun input ->
                                                          fun pos ->
                                                            let h0 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let len1 =
                                                              LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                () x () ()
                                                                (match input
                                                                 with
                                                                 | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                pos in
                                                            let h =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            FStar_UInt32.add
                                                              pos len1)
                                             | uu___3 when
                                                 uu___3 = (Prims.of_int (3))
                                                 ->
                                                 (fun x ->
                                                    fun rrel ->
                                                      fun rel ->
                                                        fun input ->
                                                          fun pos ->
                                                            let h0 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let len1 =
                                                              LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                () x () ()
                                                                (match input
                                                                 with
                                                                 | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                pos in
                                                            let h =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            FStar_UInt32.add
                                                              pos len1)
                                             | uu___3 when
                                                 uu___3 = (Prims.of_int (4))
                                                 ->
                                                 (fun x ->
                                                    fun rrel ->
                                                      fun rel ->
                                                        fun input ->
                                                          fun pos ->
                                                            let h0 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let len1 =
                                                              LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                () x () ()
                                                                (match input
                                                                 with
                                                                 | {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                pos in
                                                            let h =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            FStar_UInt32.add
                                                              pos len1)) len
                                              () () (Obj.magic sl)
                                              (FStar_UInt32.uint_to_t
                                                 Prims.int_zero) in
                                          let b_pl =
                                            LowStar_Monotonic_Buffer.msub b
                                              ilen () in
                                          f b_pl;
                                          (let h = FStar_HyperStack_ST.get () in
                                           LowParse_Writers_Effect.ICorrect
                                             ((),
                                               (FStar_UInt32.add ilen len)))))))
                uu___5 uu___4 uu___3 uu___2 uu___1 uu___
let (put_vlbytes :
  unit ->
    FStar_UInt32.t ->
      FStar_UInt32.t ->
        FStar_UInt32.t ->
          unit ->
            (LowParse_Bytes.byte LowStar_Buffer.buffer -> unit) ->
              (unit, unit, unit, unit, unit, Prims.l_False, unit)
                LowParse_Writers_Effect.repr)
  =
  fun inv ->
    fun min ->
      fun max ->
        fun len ->
          fun l ->
            fun f ->
              LowParse_Writers_Effect.Repr
                ((),
                  (Obj.magic
                     (LowParse_Writers_Effect.mk_repr_impl
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        Prims.int_zero;
                                      LowParse_Spec_Base.parser_kind_high =
                                        (FStar_Pervasives_Native.Some
                                           Prims.int_zero);
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserStrong);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserKindMetadataTotal)
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             FStar_UInt32.add pos
                                               (FStar_UInt32.uint_to_t
                                                  Prims.int_zero))
                                })))
                        (LowParse_Writers_Parser.Parser
                           ((),
                             (Obj.magic
                                {
                                  LowParse_Writers_Parser.kind =
                                    {
                                      LowParse_Spec_Base.parser_kind_low =
                                        ((if
                                            (FStar_UInt32.v max) <
                                              (Prims.of_int (256))
                                          then Prims.int_one
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "65536")
                                            then (Prims.of_int (2))
                                            else
                                              if
                                                (FStar_UInt32.v max) <
                                                  (Prims.parse_int "16777216")
                                              then (Prims.of_int (3))
                                              else (Prims.of_int (4)))
                                           +
                                           (if
                                              Prims.int_zero >
                                                (FStar_UInt32.v min)
                                            then Prims.int_zero
                                            else FStar_UInt32.v min));
                                      LowParse_Spec_Base.parser_kind_high =
                                        (FStar_Pervasives_Native.Some
                                           ((if
                                               (FStar_UInt32.v max) <
                                                 (Prims.of_int (256))
                                             then Prims.int_one
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "65536")
                                               then (Prims.of_int (2))
                                               else
                                                 if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.parse_int "16777216")
                                                 then (Prims.of_int (3))
                                                 else (Prims.of_int (4)))
                                              +
                                              (if
                                                 (FStar_UInt32.v max) <
                                                   ((if
                                                       Prims.int_zero >
                                                         (FStar_UInt32.v min)
                                                     then Prims.int_zero
                                                     else FStar_UInt32.v min))
                                               then
                                                 (if
                                                    Prims.int_zero >
                                                      (FStar_UInt32.v min)
                                                  then Prims.int_zero
                                                  else FStar_UInt32.v min)
                                               else FStar_UInt32.v max)));
                                      LowParse_Spec_Base.parser_kind_subkind
                                        =
                                        (FStar_Pervasives_Native.Some
                                           LowParse_Spec_Base.ParserStrong);
                                      LowParse_Spec_Base.parser_kind_metadata
                                        = FStar_Pervasives_Native.None
                                    };
                                  LowParse_Writers_Parser.parser = ();
                                  LowParse_Writers_Parser.serializer = ();
                                  LowParse_Writers_Parser.jumper =
                                    (fun rrel ->
                                       fun rel ->
                                         fun input ->
                                           fun pos ->
                                             let h =
                                               FStar_HyperStack_ST.get () in
                                             let h1 =
                                               FStar_HyperStack_ST.get () in
                                             let h2 =
                                               FStar_HyperStack_ST.get () in
                                             let h3 =
                                               FStar_HyperStack_ST.get () in
                                             let uu___ =
                                               let uu___1 =
                                                 match if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.of_int (256))
                                                       then Prims.int_one
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "65536")
                                                         then
                                                           (Prims.of_int (2))
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "16777216")
                                                           then
                                                             (Prims.of_int (3))
                                                           else
                                                             (Prims.of_int (4))
                                                 with
                                                 | uu___2 when
                                                     uu___2 = Prims.int_one
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (2))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (3))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                        ()) () () input pos
                                                 | uu___2 when
                                                     uu___2 =
                                                       (Prims.of_int (4))
                                                     ->
                                                     (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                        ()) () () input pos in
                                               FStar_UInt32.add
                                                 (FStar_UInt32.uint_to_t
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))))
                                                 uu___1 in
                                             FStar_UInt32.add pos uu___)
                                }))) () () () () ()
                        (fun b ->
                           fun blen ->
                             fun uu___ ->
                               let ilen =
                                 FStar_UInt32.uint_to_t
                                   (if
                                      (FStar_UInt32.v max) <
                                        (Prims.of_int (256))
                                    then Prims.int_one
                                    else
                                      if
                                        (FStar_UInt32.v max) <
                                          (Prims.parse_int "65536")
                                      then (Prims.of_int (2))
                                      else
                                        if
                                          (FStar_UInt32.v max) <
                                            (Prims.parse_int "16777216")
                                        then (Prims.of_int (3))
                                        else (Prims.of_int (4))) in
                               if
                                 (FStar_UInt32.lt blen ilen) ||
                                   (FStar_UInt32.lt
                                      (FStar_UInt32.sub blen ilen) len)
                               then LowParse_Writers_Effect.IOverflow
                               else
                                 (let sl =
                                    {
                                      LowParse_Slice.base = b;
                                      LowParse_Slice.len = blen
                                    } in
                                  let uu___2 =
                                    (match if
                                             (FStar_UInt32.v max) <
                                               (Prims.of_int (256))
                                           then Prims.int_one
                                           else
                                             if
                                               (FStar_UInt32.v max) <
                                                 (Prims.parse_int "65536")
                                             then (Prims.of_int (2))
                                             else
                                               if
                                                 (FStar_UInt32.v max) <
                                                   (Prims.parse_int "16777216")
                                               then (Prims.of_int (3))
                                               else (Prims.of_int (4))
                                     with
                                     | uu___3 when uu___3 = Prims.int_one ->
                                         (fun x ->
                                            fun rrel ->
                                              fun rel ->
                                                fun input ->
                                                  fun pos ->
                                                    let h0 =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    let len1 =
                                                      LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                        () x () ()
                                                        (match input with
                                                         | {
                                                             LowParse_Slice.base
                                                               = base;
                                                             LowParse_Slice.len
                                                               = len2;_}
                                                             -> base) pos in
                                                    let h =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    FStar_UInt32.add pos len1)
                                     | uu___3 when
                                         uu___3 = (Prims.of_int (2)) ->
                                         (fun x ->
                                            fun rrel ->
                                              fun rel ->
                                                fun input ->
                                                  fun pos ->
                                                    let h0 =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    let len1 =
                                                      LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                        () x () ()
                                                        (match input with
                                                         | {
                                                             LowParse_Slice.base
                                                               = base;
                                                             LowParse_Slice.len
                                                               = len2;_}
                                                             -> base) pos in
                                                    let h =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    FStar_UInt32.add pos len1)
                                     | uu___3 when
                                         uu___3 = (Prims.of_int (3)) ->
                                         (fun x ->
                                            fun rrel ->
                                              fun rel ->
                                                fun input ->
                                                  fun pos ->
                                                    let h0 =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    let len1 =
                                                      LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                        () x () ()
                                                        (match input with
                                                         | {
                                                             LowParse_Slice.base
                                                               = base;
                                                             LowParse_Slice.len
                                                               = len2;_}
                                                             -> base) pos in
                                                    let h =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    FStar_UInt32.add pos len1)
                                     | uu___3 when
                                         uu___3 = (Prims.of_int (4)) ->
                                         (fun x ->
                                            fun rrel ->
                                              fun rel ->
                                                fun input ->
                                                  fun pos ->
                                                    let h0 =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    let len1 =
                                                      LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                        () x () ()
                                                        (match input with
                                                         | {
                                                             LowParse_Slice.base
                                                               = base;
                                                             LowParse_Slice.len
                                                               = len2;_}
                                                             -> base) pos in
                                                    let h =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    FStar_UInt32.add pos len1))
                                      len () () (Obj.magic sl)
                                      (FStar_UInt32.uint_to_t Prims.int_zero) in
                                  let b_pl =
                                    LowStar_Monotonic_Buffer.msub b ilen () in
                                  f b_pl;
                                  (let h = FStar_HyperStack_ST.get () in
                                   LowParse_Writers_Effect.ICorrect
                                     ((), (FStar_UInt32.add ilen len))))))))


type ('p, 't) do_while_result =
  | DWCorrect of 't * FStar_UInt32.t 
  | DWError of 't * unit * Prims.string 
  | DWOverflow of 't * unit 
let (uu___is_DWCorrect :
  LowParse_Writers_Parser.parser ->
    unit -> (unit, Obj.t) do_while_result -> Prims.bool)
  =
  fun p ->
    fun t ->
      fun projectee ->
        match projectee with | DWCorrect (x, pos) -> true | uu___ -> false
let (__proj__DWCorrect__item__x :
  LowParse_Writers_Parser.parser ->
    unit -> (unit, Obj.t) do_while_result -> Obj.t)
  =
  fun p ->
    fun t -> fun projectee -> match projectee with | DWCorrect (x, pos) -> x
let (__proj__DWCorrect__item__pos :
  LowParse_Writers_Parser.parser ->
    unit -> (unit, Obj.t) do_while_result -> FStar_UInt32.t)
  =
  fun p ->
    fun t ->
      fun projectee -> match projectee with | DWCorrect (x, pos) -> pos
let (uu___is_DWError :
  LowParse_Writers_Parser.parser ->
    unit -> (unit, Obj.t) do_while_result -> Prims.bool)
  =
  fun p ->
    fun t ->
      fun projectee ->
        match projectee with | DWError (x, vin, s) -> true | uu___ -> false
let (__proj__DWError__item__x :
  LowParse_Writers_Parser.parser ->
    unit -> (unit, Obj.t) do_while_result -> Obj.t)
  =
  fun p ->
    fun t -> fun projectee -> match projectee with | DWError (x, vin, s) -> x

let (__proj__DWError__item__s :
  LowParse_Writers_Parser.parser ->
    unit -> (unit, Obj.t) do_while_result -> Prims.string)
  =
  fun p ->
    fun t -> fun projectee -> match projectee with | DWError (x, vin, s) -> s
let (uu___is_DWOverflow :
  LowParse_Writers_Parser.parser ->
    unit -> (unit, Obj.t) do_while_result -> Prims.bool)
  =
  fun p ->
    fun t ->
      fun projectee ->
        match projectee with | DWOverflow (x, vin) -> true | uu___ -> false
let (__proj__DWOverflow__item__x :
  LowParse_Writers_Parser.parser ->
    unit -> (unit, Obj.t) do_while_result -> Obj.t)
  =
  fun p ->
    fun t -> fun projectee -> match projectee with | DWOverflow (x, vin) -> x

let (do_while_impl :
  unit ->
    LowParse_Writers_Parser.parser ->
      unit ->
        unit ->
          unit ->
            unit ->
              (Obj.t ->
                 unit ->
                   ((Obj.t * Prims.bool), unit, unit, unit, unit, unit, 
                     unit) LowParse_Writers_Effect.repr)
                ->
                Obj.t ->
                  (Obj.t, unit, unit, Obj.t, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr_impl)
  =
  fun uu___7 ->
    fun uu___6 ->
      fun uu___5 ->
        fun uu___4 ->
          fun uu___3 ->
            fun uu___2 ->
              fun uu___1 ->
                fun uu___ ->
                  (fun inv ->
                     fun p ->
                       fun t ->
                         fun invariant ->
                           fun measure ->
                             fun error ->
                               fun body ->
                                 fun x0 ->
                                   Obj.magic
                                     (LowParse_Writers_Effect.mk_repr_impl p
                                        p () () () () ()
                                        (fun b ->
                                           fun blen ->
                                             fun pos0 ->
                                               FStar_HyperStack_ST.push_frame
                                                 ();
                                               (let btemp =
                                                  LowStar_Monotonic_Buffer.malloca
                                                    (LowParse_Writers_Effect.ICorrect
                                                       (x0, pos0))
                                                    (FStar_UInt32.uint_to_t
                                                       Prims.int_one) in
                                                let h0 =
                                                  FStar_HyperStack_ST.get () in
                                                C_Loops.do_while
                                                  (fun uu___2 ->
                                                     let uu___3 =
                                                       LowStar_Monotonic_Buffer.index
                                                         btemp
                                                         (FStar_UInt32.uint_to_t
                                                            Prims.int_zero) in
                                                     match uu___3 with
                                                     | LowParse_Writers_Effect.ICorrect
                                                         (x, pos) ->
                                                         let h =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let uu___4 =
                                                           LowParse_Writers_Effect.extract_repr_impl
                                                             p p () () () ()
                                                             ()
                                                             (match Obj.magic
                                                                    (body x
                                                                    ())
                                                              with
                                                              | LowParse_Writers_Effect.Repr
                                                                  (spec,
                                                                   impl)
                                                                  ->
                                                                  Obj.magic
                                                                    impl) b
                                                             blen pos in
                                                         (match uu___4 with
                                                          | LowParse_Writers_Effect.ICorrect
                                                              ((x', cont),
                                                               pos')
                                                              ->
                                                              ((let h1 =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                LowStar_Monotonic_Buffer.upd'
                                                                  btemp
                                                                  (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                  (LowParse_Writers_Effect.ICorrect
                                                                    (x',
                                                                    pos')));
                                                               (let h' =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                Prims.op_Negation
                                                                  cont))
                                                          | LowParse_Writers_Effect.IError
                                                              s ->
                                                              ((let h1 =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                LowStar_Monotonic_Buffer.upd'
                                                                  btemp
                                                                  (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                  (LowParse_Writers_Effect.IError
                                                                    s));
                                                               true)
                                                          | LowParse_Writers_Effect.IOverflow
                                                              ->
                                                              ((let h1 =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                LowStar_Monotonic_Buffer.upd'
                                                                  btemp
                                                                  (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                  LowParse_Writers_Effect.IOverflow);
                                                               true)));
                                                (let res =
                                                   LowStar_Monotonic_Buffer.index
                                                     btemp
                                                     (FStar_UInt32.uint_to_t
                                                        Prims.int_zero) in
                                                 FStar_HyperStack_ST.pop_frame
                                                   ();
                                                 res))))) uu___7 uu___6
                    uu___5 uu___4 uu___3 uu___2 uu___1 uu___
let (do_while' :
  unit ->
    LowParse_Writers_Parser.parser ->
      unit ->
        unit ->
          unit ->
            unit ->
              (Obj.t ->
                 unit ->
                   ((Obj.t * Prims.bool), unit, unit, unit, unit, unit, 
                     unit) LowParse_Writers_Effect.repr)
                ->
                Obj.t ->
                  (Obj.t, unit, unit, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr)
  =
  fun uu___7 ->
    fun uu___6 ->
      fun uu___5 ->
        fun uu___4 ->
          fun uu___3 ->
            fun uu___2 ->
              fun uu___1 ->
                fun uu___ ->
                  (fun inv ->
                     fun p ->
                       fun t ->
                         fun invariant ->
                           fun measure ->
                             fun error ->
                               fun body ->
                                 fun x ->
                                   Obj.magic
                                     (LowParse_Writers_Effect.Repr
                                        ((),
                                          (Obj.magic
                                             (LowParse_Writers_Effect.mk_repr_impl
                                                p p () () () () ()
                                                (fun b ->
                                                   fun blen ->
                                                     fun pos0 ->
                                                       FStar_HyperStack_ST.push_frame
                                                         ();
                                                       (let btemp =
                                                          LowStar_Monotonic_Buffer.malloca
                                                            (LowParse_Writers_Effect.ICorrect
                                                               (x, pos0))
                                                            (FStar_UInt32.uint_to_t
                                                               Prims.int_one) in
                                                        let h0 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        C_Loops.do_while
                                                          (fun uu___2 ->
                                                             let uu___3 =
                                                               LowStar_Monotonic_Buffer.index
                                                                 btemp
                                                                 (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                             match uu___3
                                                             with
                                                             | LowParse_Writers_Effect.ICorrect
                                                                 (x1, pos) ->
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 let uu___4 =
                                                                   LowParse_Writers_Effect.extract_repr_impl
                                                                    p p () ()
                                                                    () () ()
                                                                    (match 
                                                                    Obj.magic
                                                                    (body x1
                                                                    ())
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Effect.Repr
                                                                    (spec,
                                                                    impl) ->
                                                                    Obj.magic
                                                                    impl) b
                                                                    blen pos in
                                                                 (match uu___4
                                                                  with
                                                                  | LowParse_Writers_Effect.ICorrect
                                                                    ((x',
                                                                    cont),
                                                                    pos') ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    (LowParse_Writers_Effect.ICorrect
                                                                    (x',
                                                                    pos')));
                                                                    (let h' =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    Prims.op_Negation
                                                                    cont))
                                                                  | LowParse_Writers_Effect.IError
                                                                    s ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    (LowParse_Writers_Effect.IError
                                                                    s));
                                                                    true)
                                                                  | LowParse_Writers_Effect.IOverflow
                                                                    ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    LowParse_Writers_Effect.IOverflow);
                                                                    true)));
                                                        (let res =
                                                           LowStar_Monotonic_Buffer.index
                                                             btemp
                                                             (FStar_UInt32.uint_to_t
                                                                Prims.int_zero) in
                                                         FStar_HyperStack_ST.pop_frame
                                                           ();
                                                         res)))))))) uu___7
                    uu___6 uu___5 uu___4 uu___3 uu___2 uu___1 uu___
let (do_while :
  unit ->
    LowParse_Writers_Parser.parser ->
      unit ->
        unit ->
          unit ->
            unit ->
              (Obj.t ->
                 ((Obj.t * Prims.bool), unit, unit, unit, unit, unit, 
                   unit) LowParse_Writers_Effect.repr)
                ->
                Obj.t ->
                  (Obj.t, unit, unit, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr)
  =
  fun uu___7 ->
    fun uu___6 ->
      fun uu___5 ->
        fun uu___4 ->
          fun uu___3 ->
            fun uu___2 ->
              fun uu___1 ->
                fun uu___ ->
                  (fun inv ->
                     fun p ->
                       fun t ->
                         fun invariant ->
                           fun measure ->
                             fun error ->
                               fun body ->
                                 fun x ->
                                   Obj.magic
                                     (LowParse_Writers_Effect.Repr
                                        ((),
                                          (Obj.magic
                                             (LowParse_Writers_Effect.mk_repr_impl
                                                p p () () () () ()
                                                (fun b ->
                                                   fun blen ->
                                                     fun pos0 ->
                                                       FStar_HyperStack_ST.push_frame
                                                         ();
                                                       (let btemp =
                                                          LowStar_Monotonic_Buffer.malloca
                                                            (LowParse_Writers_Effect.ICorrect
                                                               (x, pos0))
                                                            (FStar_UInt32.uint_to_t
                                                               Prims.int_one) in
                                                        let h0 =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        C_Loops.do_while
                                                          (fun uu___2 ->
                                                             let uu___3 =
                                                               LowStar_Monotonic_Buffer.index
                                                                 btemp
                                                                 (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                             match uu___3
                                                             with
                                                             | LowParse_Writers_Effect.ICorrect
                                                                 (x1, pos) ->
                                                                 let h =
                                                                   FStar_HyperStack_ST.get
                                                                    () in
                                                                 let uu___4 =
                                                                   LowParse_Writers_Effect.extract_repr_impl
                                                                    p p () ()
                                                                    () () ()
                                                                    (match 
                                                                    Obj.magic
                                                                    (body x1)
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Effect.Repr
                                                                    (spec,
                                                                    impl) ->
                                                                    Obj.magic
                                                                    impl) b
                                                                    blen pos in
                                                                 (match uu___4
                                                                  with
                                                                  | LowParse_Writers_Effect.ICorrect
                                                                    ((x',
                                                                    cont),
                                                                    pos') ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    (LowParse_Writers_Effect.ICorrect
                                                                    (x',
                                                                    pos')));
                                                                    (let h' =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    Prims.op_Negation
                                                                    cont))
                                                                  | LowParse_Writers_Effect.IError
                                                                    s ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    (LowParse_Writers_Effect.IError
                                                                    s));
                                                                    true)
                                                                  | LowParse_Writers_Effect.IOverflow
                                                                    ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    LowParse_Writers_Effect.IOverflow);
                                                                    true)));
                                                        (let res =
                                                           LowStar_Monotonic_Buffer.index
                                                             btemp
                                                             (FStar_UInt32.uint_to_t
                                                                Prims.int_zero) in
                                                         FStar_HyperStack_ST.pop_frame
                                                           ();
                                                         res)))))))) uu___7
                    uu___6 uu___5 uu___4 uu___3 uu___2 uu___1 uu___
let (list_map' :
  LowParse_Writers_Parser.parser ->
    LowParse_Writers_Parser.parser ->
      unit ->
        unit ->
          (LowParse_Writers_Effect.rptr ->
             (unit, unit, unit, unit, unit, Prims.l_False, unit)
               LowParse_Writers_Effect.repr)
            ->
            FStar_UInt32.t ->
              FStar_UInt32.t ->
                (unit, unit) lptr ->
                  (unit, unit, unit, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr)
  =
  fun p1 ->
    fun p2 ->
      fun inv ->
        fun f ->
          fun f' ->
            fun min ->
              fun max ->
                fun l ->
                  LowParse_Writers_Effect.Repr
                    ((),
                      (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                         (Obj.magic ()) () () () (Obj.magic ()) () () () ()
                         () ()
                         (Obj.magic
                            (LowParse_Writers_Effect.get_state_impl ()
                               (LowParse_Writers_Parser.Parser
                                  ((),
                                    (Obj.magic
                                       {
                                         LowParse_Writers_Parser.kind =
                                           {
                                             LowParse_Spec_Base.parser_kind_low
                                               =
                                               ((if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4)))
                                                  +
                                                  (if
                                                     Prims.int_zero >
                                                       (FStar_UInt32.v min)
                                                   then Prims.int_zero
                                                   else FStar_UInt32.v min));
                                             LowParse_Spec_Base.parser_kind_high
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  ((if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.of_int (256))
                                                    then Prims.int_one
                                                    else
                                                      if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          (Prims.parse_int "65536")
                                                      then (Prims.of_int (2))
                                                      else
                                                        if
                                                          (FStar_UInt32.v max)
                                                            <
                                                            (Prims.parse_int "16777216")
                                                        then
                                                          (Prims.of_int (3))
                                                        else
                                                          (Prims.of_int (4)))
                                                     +
                                                     (if
                                                        (FStar_UInt32.v max)
                                                          <
                                                          ((if
                                                              Prims.int_zero
                                                                >
                                                                (FStar_UInt32.v
                                                                   min)
                                                            then
                                                              Prims.int_zero
                                                            else
                                                              FStar_UInt32.v
                                                                min))
                                                      then
                                                        (if
                                                           Prims.int_zero >
                                                             (FStar_UInt32.v
                                                                min)
                                                         then Prims.int_zero
                                                         else
                                                           FStar_UInt32.v min)
                                                      else FStar_UInt32.v max)));
                                             LowParse_Spec_Base.parser_kind_subkind
                                               =
                                               (FStar_Pervasives_Native.Some
                                                  LowParse_Spec_Base.ParserStrong);
                                             LowParse_Spec_Base.parser_kind_metadata
                                               = FStar_Pervasives_Native.None
                                           };
                                         LowParse_Writers_Parser.parser = ();
                                         LowParse_Writers_Parser.serializer =
                                           ();
                                         LowParse_Writers_Parser.jumper =
                                           (fun rrel ->
                                              fun rel ->
                                                fun input ->
                                                  fun pos ->
                                                    let h =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    let h1 =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    let h2 =
                                                      FStar_HyperStack_ST.get
                                                        () in
                                                    let uu___ =
                                                      let uu___1 =
                                                        match if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.of_int (256))
                                                              then
                                                                Prims.int_one
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                then
                                                                  (Prims.of_int (2))
                                                                else
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                  then
                                                                    (Prims.of_int (3))
                                                                  else
                                                                    (Prims.of_int (4))
                                                        with
                                                        | uu___2 when
                                                            uu___2 =
                                                              Prims.int_one
                                                            ->
                                                            (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                               ()) () ()
                                                              input pos
                                                        | uu___2 when
                                                            uu___2 =
                                                              (Prims.of_int (2))
                                                            ->
                                                            (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                               ()) () ()
                                                              input pos
                                                        | uu___2 when
                                                            uu___2 =
                                                              (Prims.of_int (3))
                                                            ->
                                                            (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                               ()) () ()
                                                              input pos
                                                        | uu___2 when
                                                            uu___2 =
                                                              (Prims.of_int (4))
                                                            ->
                                                            (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                               ()) () ()
                                                              input pos in
                                                      FStar_UInt32.add
                                                        (FStar_UInt32.uint_to_t
                                                           (if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.of_int (256))
                                                            then
                                                              Prims.int_one
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "65536")
                                                              then
                                                                (Prims.of_int (2))
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                then
                                                                  (Prims.of_int (3))
                                                                else
                                                                  (Prims.of_int (4))))
                                                        uu___1 in
                                                    FStar_UInt32.add pos
                                                      uu___)
                                       })))))
                         (fun uu___ ->
                            (fun x ->
                               Obj.magic
                                 (LowParse_Writers_Effect.bind_impl
                                    (Obj.magic ()) (Obj.magic ()) () () ()
                                    (Obj.magic ()) () () () () () ()
                                    (LowParse_Writers_Effect.mk_repr_impl
                                       (LowParse_Writers_Parser.Parser
                                          ((),
                                            (Obj.magic
                                               {
                                                 LowParse_Writers_Parser.kind
                                                   =
                                                   {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       =
                                                       ((if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4)))
                                                          +
                                                          (if
                                                             Prims.int_zero >
                                                               (FStar_UInt32.v
                                                                  min)
                                                           then
                                                             Prims.int_zero
                                                           else
                                                             FStar_UInt32.v
                                                               min));
                                                     LowParse_Spec_Base.parser_kind_high
                                                       =
                                                       (FStar_Pervasives_Native.Some
                                                          ((if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.of_int (256))
                                                            then
                                                              Prims.int_one
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "65536")
                                                              then
                                                                (Prims.of_int (2))
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                then
                                                                  (Prims.of_int (3))
                                                                else
                                                                  (Prims.of_int (4)))
                                                             +
                                                             (if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                              then
                                                                (if
                                                                   Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                 then
                                                                   Prims.int_zero
                                                                 else
                                                                   FStar_UInt32.v
                                                                    min)
                                                              else
                                                                FStar_UInt32.v
                                                                  max)));
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       =
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong);
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       =
                                                       FStar_Pervasives_Native.None
                                                   };
                                                 LowParse_Writers_Parser.parser
                                                   = ();
                                                 LowParse_Writers_Parser.serializer
                                                   = ();
                                                 LowParse_Writers_Parser.jumper
                                                   =
                                                   (fun rrel ->
                                                      fun rel ->
                                                        fun input ->
                                                          fun pos ->
                                                            let h =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let h1 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let h2 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let uu___ =
                                                              let uu___1 =
                                                                match 
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                  then
                                                                    Prims.int_one
                                                                  else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                with
                                                                | uu___2 when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                | uu___2 when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                | uu___2 when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                | uu___2 when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                              FStar_UInt32.add
                                                                (FStar_UInt32.uint_to_t
                                                                   (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                uu___1 in
                                                            FStar_UInt32.add
                                                              pos uu___)
                                               })))
                                       (LowParse_Writers_Parser.Parser
                                          ((),
                                            (Obj.magic
                                               {
                                                 LowParse_Writers_Parser.kind
                                                   =
                                                   {
                                                     LowParse_Spec_Base.parser_kind_low
                                                       =
                                                       ((if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4)))
                                                          +
                                                          (if
                                                             Prims.int_zero >
                                                               (FStar_UInt32.v
                                                                  min)
                                                           then
                                                             Prims.int_zero
                                                           else
                                                             FStar_UInt32.v
                                                               min));
                                                     LowParse_Spec_Base.parser_kind_high
                                                       =
                                                       (FStar_Pervasives_Native.Some
                                                          ((if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.of_int (256))
                                                            then
                                                              Prims.int_one
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "65536")
                                                              then
                                                                (Prims.of_int (2))
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                then
                                                                  (Prims.of_int (3))
                                                                else
                                                                  (Prims.of_int (4)))
                                                             +
                                                             (if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                              then
                                                                (if
                                                                   Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                 then
                                                                   Prims.int_zero
                                                                 else
                                                                   FStar_UInt32.v
                                                                    min)
                                                              else
                                                                FStar_UInt32.v
                                                                  max)));
                                                     LowParse_Spec_Base.parser_kind_subkind
                                                       =
                                                       (FStar_Pervasives_Native.Some
                                                          LowParse_Spec_Base.ParserStrong);
                                                     LowParse_Spec_Base.parser_kind_metadata
                                                       =
                                                       FStar_Pervasives_Native.None
                                                   };
                                                 LowParse_Writers_Parser.parser
                                                   = ();
                                                 LowParse_Writers_Parser.serializer
                                                   = ();
                                                 LowParse_Writers_Parser.jumper
                                                   =
                                                   (fun rrel ->
                                                      fun rel ->
                                                        fun input ->
                                                          fun pos ->
                                                            let h =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let h1 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let h2 =
                                                              FStar_HyperStack_ST.get
                                                                () in
                                                            let uu___ =
                                                              let uu___1 =
                                                                match 
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                  then
                                                                    Prims.int_one
                                                                  else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                with
                                                                | uu___2 when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                | uu___2 when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                | uu___2 when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                | uu___2 when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                              FStar_UInt32.add
                                                                (FStar_UInt32.uint_to_t
                                                                   (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                uu___1 in
                                                            FStar_UInt32.add
                                                              pos uu___)
                                               }))) () () () () ()
                                       (fun b ->
                                          fun blen ->
                                            fun pos0 ->
                                              FStar_HyperStack_ST.push_frame
                                                ();
                                              (let btemp =
                                                 LowStar_Monotonic_Buffer.malloca
                                                   (LowParse_Writers_Effect.ICorrect
                                                      (l, pos0))
                                                   (FStar_UInt32.uint_to_t
                                                      Prims.int_one) in
                                               let h0 =
                                                 FStar_HyperStack_ST.get () in
                                               C_Loops.do_while
                                                 (fun uu___2 ->
                                                    let uu___3 =
                                                      LowStar_Monotonic_Buffer.index
                                                        btemp
                                                        (FStar_UInt32.uint_to_t
                                                           Prims.int_zero) in
                                                    match uu___3 with
                                                    | LowParse_Writers_Effect.ICorrect
                                                        (x1, pos) ->
                                                        let h =
                                                          FStar_HyperStack_ST.get
                                                            () in
                                                        let uu___4 =
                                                          LowParse_Writers_Effect.extract_repr_impl
                                                            (LowParse_Writers_Parser.Parser
                                                               ((),
                                                                 (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min));
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    })))
                                                            (LowParse_Writers_Parser.Parser
                                                               ((),
                                                                 (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min));
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    }))) ()
                                                            () () () ()
                                                            (Obj.magic
                                                               (LowParse_Writers_Effect.bind_impl
                                                                  (Obj.magic
                                                                    ())
                                                                  (Obj.magic
                                                                    ()) () ()
                                                                  ()
                                                                  (Obj.magic
                                                                    ()) () ()
                                                                  () () () ()
                                                                  (Obj.magic
                                                                    (LowParse_Writers_Effect.get_state_impl
                                                                    ()
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min));
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    })))))
                                                                  (fun uu___5
                                                                    ->
                                                                    (fun x2
                                                                    ->
                                                                    Obj.magic
                                                                    (LowParse_Writers_Effect.bind_impl
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    () () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.lift_read_impl
                                                                    ()
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.ReadRepr
                                                                    ((),
                                                                    (LowParse_Writers_Effect.mk_read_repr_impl
                                                                    () ()
                                                                    (fun
                                                                    uu___5 ->
                                                                    let base
                                                                    =
                                                                    x1.rlptr_base in
                                                                    let len =
                                                                    x1.rlptr_len in
                                                                    let sl =
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len
                                                                    } in
                                                                    if
                                                                    x1.rlptr_len
                                                                    =
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    then
                                                                    LowParse_Writers_Effect.Correct
                                                                    FStar_Pervasives_Native.None
                                                                    else
                                                                    (let pos1
                                                                    =
                                                                    (match 
                                                                    match p1
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> jumper)
                                                                    () ()
                                                                    (Obj.magic
                                                                    sl)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let b_hd
                                                                    =
                                                                    LowStar_Monotonic_Buffer.msub
                                                                    base
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    () in
                                                                    let len_tl
                                                                    =
                                                                    FStar_UInt32.sub
                                                                    len pos1 in
                                                                    let b_tl
                                                                    =
                                                                    LowStar_Monotonic_Buffer.msub
                                                                    base pos1
                                                                    () in
                                                                    LowParse_Writers_Effect.Correct
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((LowParse_Writers_Effect.mk_ptr
                                                                    p1 ()
                                                                    b_hd pos1),
                                                                    {
                                                                    rlptr_base
                                                                    = b_tl;
                                                                    rlptr_len
                                                                    = len_tl
                                                                    }))))))))))
                                                                    (fun
                                                                    uu___5 ->
                                                                    (fun x3
                                                                    ->
                                                                    match x3
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    Obj.magic
                                                                    (Obj.repr
                                                                    (LowParse_Writers_Effect.lift_read_impl
                                                                    ()
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.ReadRepr
                                                                    ((),
                                                                    (LowParse_Writers_Effect.lift_pure_read_impl
                                                                    (fun
                                                                    uu___5 ->
                                                                    (x1,
                                                                    false))
                                                                    ()))))))
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    (hd, tl)
                                                                    ->
                                                                    Obj.magic
                                                                    (Obj.repr
                                                                    (LowParse_Writers_Effect.bind_impl
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    () () ()
                                                                    ()
                                                                    (LowParse_Writers_Effect.frame_impl
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min));
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    }))) ()
                                                                    p2 () ()
                                                                    ()
                                                                    (fun
                                                                    uu___5 ->
                                                                    f' hd))
                                                                    (fun
                                                                    uu___5 ->
                                                                    (fun x4
                                                                    ->
                                                                    Obj.magic
                                                                    (LowParse_Writers_Effect.bind_impl
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    () () ()
                                                                    ()
                                                                    (LowParse_Writers_Effect.mk_repr_impl
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    (((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)) +
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low));
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (if
                                                                    match 
                                                                    match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    uu___5 ->
                                                                    true
                                                                    | 
                                                                    uu___5 ->
                                                                    false
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    (((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)) +
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                                    else
                                                                    FStar_Pervasives_Native.None);
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll
                                                                    else
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                    else
                                                                    if
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero)
                                                                    then
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    else
                                                                    false)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                    else
                                                                    FStar_Pervasives_Native.None);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    (match 
                                                                    (FStar_Pervasives_Native.None,
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata))
                                                                    with
                                                                    | 
                                                                    (FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail),
                                                                    uu___5)
                                                                    ->
                                                                    FStar_Pervasives_Native.None
                                                                    | 
                                                                    (uu___5,
                                                                    FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail))
                                                                    ->
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata)
                                                                    | 
                                                                    (FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                    FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                                    ->
                                                                    FStar_Pervasives_Native.None
                                                                    | 
                                                                    uu___5 ->
                                                                    FStar_Pervasives_Native.None)
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h4 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___6
                                                                    =
                                                                    let uu___7
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___8
                                                                    when
                                                                    uu___8 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___8
                                                                    when
                                                                    uu___8 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___8
                                                                    when
                                                                    uu___8 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___8
                                                                    when
                                                                    uu___8 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___7 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___6 in
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    ->
                                                                    jumper ()
                                                                    () input
                                                                    uu___5)
                                                                    })))
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min));
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    }))) ()
                                                                    () () ()
                                                                    ()
                                                                    (fun b1
                                                                    ->
                                                                    fun len
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let sl =
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = b1;
                                                                    LowParse_Slice.len
                                                                    = len
                                                                    } in
                                                                    let pos_last
                                                                    =
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h4 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    (match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    (Obj.magic
                                                                    sl)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    uu___5 in
                                                                    let pos_pl
                                                                    =
                                                                    FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))) in
                                                                    let sz =
                                                                    FStar_UInt32.sub
                                                                    pos1
                                                                    pos_pl in
                                                                    if
                                                                    (FStar_UInt32.lte
                                                                    min sz)
                                                                    &&
                                                                    (FStar_UInt32.lte
                                                                    sz max)
                                                                    then
                                                                    ((
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___6
                                                                    =
                                                                    (match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (fun x5
                                                                    ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos2
                                                                    ->
                                                                    let h01 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x5 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos2 in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos2 len1)
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (fun x5
                                                                    ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos2
                                                                    ->
                                                                    let h01 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x5 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos2 in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos2 len1)
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (fun x5
                                                                    ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos2
                                                                    ->
                                                                    let h01 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x5 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos2 in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos2 len1)
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (fun x5
                                                                    ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos2
                                                                    ->
                                                                    let h01 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x5 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos2 in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos2 len1))
                                                                    (FStar_UInt32.sub
                                                                    pos1
                                                                    (FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))))
                                                                    () ()
                                                                    (Obj.magic
                                                                    sl)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in ());
                                                                    LowParse_Writers_Effect.ICorrect
                                                                    ((),
                                                                    pos1))
                                                                    else
                                                                    LowParse_Writers_Effect.IError
                                                                    "parse_vllist_snoc_weak: out of bounds"))
                                                                    (fun
                                                                    uu___5 ->
                                                                    (fun x5
                                                                    ->
                                                                    Obj.magic
                                                                    (LowParse_Writers_Effect.lift_read_impl
                                                                    ()
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.ReadRepr
                                                                    ((),
                                                                    (LowParse_Writers_Effect.lift_pure_read_impl
                                                                    (fun
                                                                    uu___5 ->
                                                                    (tl,
                                                                    true)) ()))))))
                                                                    uu___5)))
                                                                    uu___5))))
                                                                    uu___5)))
                                                                    uu___5)))
                                                            b blen pos in
                                                        (match uu___4 with
                                                         | LowParse_Writers_Effect.ICorrect
                                                             ((x', cont),
                                                              pos')
                                                             ->
                                                             ((let h1 =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               LowStar_Monotonic_Buffer.upd'
                                                                 btemp
                                                                 (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                 (LowParse_Writers_Effect.ICorrect
                                                                    (x',
                                                                    pos')));
                                                              (let h' =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               Prims.op_Negation
                                                                 cont))
                                                         | LowParse_Writers_Effect.IError
                                                             s ->
                                                             ((let h1 =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               LowStar_Monotonic_Buffer.upd'
                                                                 btemp
                                                                 (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                 (LowParse_Writers_Effect.IError
                                                                    s));
                                                              true)
                                                         | LowParse_Writers_Effect.IOverflow
                                                             ->
                                                             ((let h1 =
                                                                 FStar_HyperStack_ST.get
                                                                   () in
                                                               LowStar_Monotonic_Buffer.upd'
                                                                 btemp
                                                                 (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                 LowParse_Writers_Effect.IOverflow);
                                                              true)));
                                               (let res =
                                                  LowStar_Monotonic_Buffer.index
                                                    btemp
                                                    (FStar_UInt32.uint_to_t
                                                       Prims.int_zero) in
                                                FStar_HyperStack_ST.pop_frame
                                                  ();
                                                res))))
                                    (fun uu___ ->
                                       (fun x1 ->
                                          Obj.magic
                                            (LowParse_Writers_Effect.bind_impl
                                               (Obj.magic ()) (Obj.magic ())
                                               () () () (Obj.magic ()) () ()
                                               () () () ()
                                               (Obj.magic
                                                  (LowParse_Writers_Effect.get_state_impl
                                                     ()
                                                     (LowParse_Writers_Parser.Parser
                                                        ((),
                                                          (Obj.magic
                                                             {
                                                               LowParse_Writers_Parser.kind
                                                                 =
                                                                 {
                                                                   LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min));
                                                                   LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    ((if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                    then
                                                                    (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                   LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                   LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                 };
                                                               LowParse_Writers_Parser.parser
                                                                 = ();
                                                               LowParse_Writers_Parser.serializer
                                                                 = ();
                                                               LowParse_Writers_Parser.jumper
                                                                 =
                                                                 (fun rrel ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                    FStar_UInt32.add
                                                                    pos uu___)
                                                             })))))
                                               (fun uu___ ->
                                                  (fun x2 ->
                                                     Obj.magic
                                                       (LowParse_Writers_Effect.lift_read_impl
                                                          () (Obj.magic ())
                                                          (Obj.magic
                                                             (LowParse_Writers_Effect.ReadRepr
                                                                ((),
                                                                  (LowParse_Writers_Effect.lift_pure_read_impl
                                                                    (fun
                                                                    uu___ ->
                                                                    ()) ()))))))
                                                    uu___))) uu___))) uu___)))
let (list_map :
  LowParse_Writers_Parser.parser ->
    LowParse_Writers_Parser.parser ->
      unit ->
        unit ->
          (LowParse_Writers_Effect.rptr ->
             (unit, unit, unit, unit, unit, Prims.l_False, unit)
               LowParse_Writers_Effect.repr)
            ->
            FStar_UInt32.t ->
              FStar_UInt32.t ->
                (unit, unit) lptr ->
                  (unit, unit, unit, unit, unit, unit, unit)
                    LowParse_Writers_Effect.repr)
  =
  fun p1 ->
    fun p2 ->
      fun inv ->
        fun f ->
          fun f' ->
            fun min ->
              fun max ->
                fun l ->
                  LowParse_Writers_Effect.Repr
                    ((),
                      (LowParse_Writers_Effect.bind_impl (Obj.magic ())
                         (Obj.magic ()) () () () (Obj.magic ()) () () () ()
                         () ()
                         (LowParse_Writers_Effect.mk_repr_impl
                            (LowParse_Writers_Parser.Parser
                               ((),
                                 (Obj.magic
                                    {
                                      LowParse_Writers_Parser.kind =
                                        {
                                          LowParse_Spec_Base.parser_kind_low
                                            = Prims.int_zero;
                                          LowParse_Spec_Base.parser_kind_high
                                            =
                                            (FStar_Pervasives_Native.Some
                                               Prims.int_zero);
                                          LowParse_Spec_Base.parser_kind_subkind
                                            =
                                            (FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong);
                                          LowParse_Spec_Base.parser_kind_metadata
                                            =
                                            (FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserKindMetadataTotal)
                                        };
                                      LowParse_Writers_Parser.parser = ();
                                      LowParse_Writers_Parser.serializer = ();
                                      LowParse_Writers_Parser.jumper =
                                        (fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos ->
                                                 let h =
                                                   FStar_HyperStack_ST.get () in
                                                 FStar_UInt32.add pos
                                                   (FStar_UInt32.uint_to_t
                                                      Prims.int_zero))
                                    })))
                            (LowParse_Writers_Parser.Parser
                               ((),
                                 (Obj.magic
                                    {
                                      LowParse_Writers_Parser.kind =
                                        {
                                          LowParse_Spec_Base.parser_kind_low
                                            =
                                            ((if
                                                (FStar_UInt32.v max) <
                                                  (Prims.of_int (256))
                                              then Prims.int_one
                                              else
                                                if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.parse_int "65536")
                                                then (Prims.of_int (2))
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "16777216")
                                                  then (Prims.of_int (3))
                                                  else (Prims.of_int (4)))
                                               + Prims.int_zero);
                                          LowParse_Spec_Base.parser_kind_high
                                            =
                                            (FStar_Pervasives_Native.Some
                                               ((if
                                                   (FStar_UInt32.v max) <
                                                     (Prims.of_int (256))
                                                 then Prims.int_one
                                                 else
                                                   if
                                                     (FStar_UInt32.v max) <
                                                       (Prims.parse_int "65536")
                                                   then (Prims.of_int (2))
                                                   else
                                                     if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.parse_int "16777216")
                                                     then (Prims.of_int (3))
                                                     else (Prims.of_int (4)))
                                                  +
                                                  (if
                                                     (FStar_UInt32.v max) <
                                                       Prims.int_zero
                                                   then Prims.int_zero
                                                   else FStar_UInt32.v max)));
                                          LowParse_Spec_Base.parser_kind_subkind
                                            =
                                            (FStar_Pervasives_Native.Some
                                               LowParse_Spec_Base.ParserStrong);
                                          LowParse_Spec_Base.parser_kind_metadata
                                            = FStar_Pervasives_Native.None
                                        };
                                      LowParse_Writers_Parser.parser = ();
                                      LowParse_Writers_Parser.serializer = ();
                                      LowParse_Writers_Parser.jumper =
                                        (fun rrel ->
                                           fun rel ->
                                             fun input ->
                                               fun pos ->
                                                 let h =
                                                   FStar_HyperStack_ST.get () in
                                                 let h1 =
                                                   FStar_HyperStack_ST.get () in
                                                 let h2 =
                                                   FStar_HyperStack_ST.get () in
                                                 let uu___ =
                                                   let uu___1 =
                                                     match if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.of_int (256))
                                                           then Prims.int_one
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "65536")
                                                             then
                                                               (Prims.of_int (2))
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "16777216")
                                                               then
                                                                 (Prims.of_int (3))
                                                               else
                                                                 (Prims.of_int (4))
                                                     with
                                                     | uu___2 when
                                                         uu___2 =
                                                           Prims.int_one
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (2))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (3))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                            ()) () () input
                                                           pos
                                                     | uu___2 when
                                                         uu___2 =
                                                           (Prims.of_int (4))
                                                         ->
                                                         (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                            ()) () () input
                                                           pos in
                                                   FStar_UInt32.add
                                                     (FStar_UInt32.uint_to_t
                                                        (if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.of_int (256))
                                                         then Prims.int_one
                                                         else
                                                           if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.parse_int "65536")
                                                           then
                                                             (Prims.of_int (2))
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "16777216")
                                                             then
                                                               (Prims.of_int (3))
                                                             else
                                                               (Prims.of_int (4))))
                                                     uu___1 in
                                                 FStar_UInt32.add pos uu___)
                                    }))) () () () () ()
                            (fun b ->
                               fun len ->
                                 fun uu___ ->
                                   let pos_pl =
                                     FStar_UInt32.uint_to_t
                                       (if
                                          (FStar_UInt32.v max) <
                                            (Prims.of_int (256))
                                        then Prims.int_one
                                        else
                                          if
                                            (FStar_UInt32.v max) <
                                              (Prims.parse_int "65536")
                                          then (Prims.of_int (2))
                                          else
                                            if
                                              (FStar_UInt32.v max) <
                                                (Prims.parse_int "16777216")
                                            then (Prims.of_int (3))
                                            else (Prims.of_int (4))) in
                                   if FStar_UInt32.lt len pos_pl
                                   then LowParse_Writers_Effect.IOverflow
                                   else
                                     (let h = FStar_HyperStack_ST.get () in
                                      let sl =
                                        {
                                          LowParse_Slice.base = b;
                                          LowParse_Slice.len = len
                                        } in
                                      (let h1 = FStar_HyperStack_ST.get () in
                                       let uu___3 =
                                         (match if
                                                  (FStar_UInt32.v max) <
                                                    (Prims.of_int (256))
                                                then Prims.int_one
                                                else
                                                  if
                                                    (FStar_UInt32.v max) <
                                                      (Prims.parse_int "65536")
                                                  then (Prims.of_int (2))
                                                  else
                                                    if
                                                      (FStar_UInt32.v max) <
                                                        (Prims.parse_int "16777216")
                                                    then (Prims.of_int (3))
                                                    else (Prims.of_int (4))
                                          with
                                          | uu___4 when
                                              uu___4 = Prims.int_one ->
                                              (fun x ->
                                                 fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos ->
                                                         let h0 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let len1 =
                                                           LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                             () x () ()
                                                             (match input
                                                              with
                                                              | {
                                                                  LowParse_Slice.base
                                                                    = base;
                                                                  LowParse_Slice.len
                                                                    = len2;_}
                                                                  -> base)
                                                             pos in
                                                         let h2 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add pos
                                                           len1)
                                          | uu___4 when
                                              uu___4 = (Prims.of_int (2)) ->
                                              (fun x ->
                                                 fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos ->
                                                         let h0 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let len1 =
                                                           LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                             () x () ()
                                                             (match input
                                                              with
                                                              | {
                                                                  LowParse_Slice.base
                                                                    = base;
                                                                  LowParse_Slice.len
                                                                    = len2;_}
                                                                  -> base)
                                                             pos in
                                                         let h2 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add pos
                                                           len1)
                                          | uu___4 when
                                              uu___4 = (Prims.of_int (3)) ->
                                              (fun x ->
                                                 fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos ->
                                                         let h0 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let len1 =
                                                           LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                             () x () ()
                                                             (match input
                                                              with
                                                              | {
                                                                  LowParse_Slice.base
                                                                    = base;
                                                                  LowParse_Slice.len
                                                                    = len2;_}
                                                                  -> base)
                                                             pos in
                                                         let h2 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add pos
                                                           len1)
                                          | uu___4 when
                                              uu___4 = (Prims.of_int (4)) ->
                                              (fun x ->
                                                 fun rrel ->
                                                   fun rel ->
                                                     fun input ->
                                                       fun pos ->
                                                         let h0 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         let len1 =
                                                           LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                             () x () ()
                                                             (match input
                                                              with
                                                              | {
                                                                  LowParse_Slice.base
                                                                    = base;
                                                                  LowParse_Slice.len
                                                                    = len2;_}
                                                                  -> base)
                                                             pos in
                                                         let h2 =
                                                           FStar_HyperStack_ST.get
                                                             () in
                                                         FStar_UInt32.add pos
                                                           len1))
                                           (FStar_UInt32.sub pos_pl
                                              (FStar_UInt32.add
                                                 (FStar_UInt32.uint_to_t
                                                    Prims.int_zero)
                                                 (FStar_UInt32.uint_to_t
                                                    (if
                                                       (FStar_UInt32.v max) <
                                                         (Prims.of_int (256))
                                                     then Prims.int_one
                                                     else
                                                       if
                                                         (FStar_UInt32.v max)
                                                           <
                                                           (Prims.parse_int "65536")
                                                       then
                                                         (Prims.of_int (2))
                                                       else
                                                         if
                                                           (FStar_UInt32.v
                                                              max)
                                                             <
                                                             (Prims.parse_int "16777216")
                                                         then
                                                           (Prims.of_int (3))
                                                         else
                                                           (Prims.of_int (4))))))
                                           () () (Obj.magic sl)
                                           (FStar_UInt32.uint_to_t
                                              Prims.int_zero) in
                                       let h2 = FStar_HyperStack_ST.get () in
                                       ());
                                      LowParse_Writers_Effect.ICorrect
                                        ((), pos_pl))))
                         (fun uu___ ->
                            (fun x ->
                               Obj.magic
                                 (LowParse_Writers_Effect.bind_impl
                                    (Obj.magic ()) (Obj.magic ()) () () ()
                                    (Obj.magic ()) () () () () () ()
                                    (Obj.magic
                                       (LowParse_Writers_Effect.bind_impl
                                          (Obj.magic ()) (Obj.magic ()) () ()
                                          () (Obj.magic ()) () () () () () ()
                                          (Obj.magic
                                             (LowParse_Writers_Effect.get_state_impl
                                                ()
                                                (LowParse_Writers_Parser.Parser
                                                   ((),
                                                     (Obj.magic
                                                        {
                                                          LowParse_Writers_Parser.kind
                                                            =
                                                            {
                                                              LowParse_Spec_Base.parser_kind_low
                                                                =
                                                                ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                  then
                                                                    Prims.int_one
                                                                  else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                   +
                                                                   Prims.int_zero);
                                                              LowParse_Spec_Base.parser_kind_high
                                                                =
                                                                (FStar_Pervasives_Native.Some
                                                                   ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                              LowParse_Spec_Base.parser_kind_subkind
                                                                =
                                                                (FStar_Pervasives_Native.Some
                                                                   LowParse_Spec_Base.ParserStrong);
                                                              LowParse_Spec_Base.parser_kind_metadata
                                                                =
                                                                FStar_Pervasives_Native.None
                                                            };
                                                          LowParse_Writers_Parser.parser
                                                            = ();
                                                          LowParse_Writers_Parser.serializer
                                                            = ();
                                                          LowParse_Writers_Parser.jumper
                                                            =
                                                            (fun rrel ->
                                                               fun rel ->
                                                                 fun input ->
                                                                   fun pos ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                    FStar_UInt32.add
                                                                    pos uu___)
                                                        })))))
                                          (fun uu___ ->
                                             (fun x1 ->
                                                Obj.magic
                                                  (LowParse_Writers_Effect.bind_impl
                                                     (Obj.magic ())
                                                     (Obj.magic ()) () () ()
                                                     (Obj.magic ()) () () ()
                                                     () () ()
                                                     (LowParse_Writers_Effect.mk_repr_impl
                                                        (LowParse_Writers_Parser.Parser
                                                           ((),
                                                             (Obj.magic
                                                                {
                                                                  LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                  LowParse_Writers_Parser.parser
                                                                    = ();
                                                                  LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                  LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                    FStar_UInt32.add
                                                                    pos uu___)
                                                                })))
                                                        (LowParse_Writers_Parser.Parser
                                                           ((),
                                                             (Obj.magic
                                                                {
                                                                  LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                  LowParse_Writers_Parser.parser
                                                                    = ();
                                                                  LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                  LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                    FStar_UInt32.add
                                                                    pos uu___)
                                                                }))) () () ()
                                                        () ()
                                                        (fun b ->
                                                           fun blen ->
                                                             fun pos0 ->
                                                               FStar_HyperStack_ST.push_frame
                                                                 ();
                                                               (let btemp =
                                                                  LowStar_Monotonic_Buffer.malloca
                                                                    (
                                                                    LowParse_Writers_Effect.ICorrect
                                                                    (l, pos0))
                                                                    (
                                                                    FStar_UInt32.uint_to_t
                                                                    Prims.int_one) in
                                                                let h0 =
                                                                  FStar_HyperStack_ST.get
                                                                    () in
                                                                C_Loops.do_while
                                                                  (fun uu___2
                                                                    ->
                                                                    let uu___3
                                                                    =
                                                                    LowStar_Monotonic_Buffer.index
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    match uu___3
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Effect.ICorrect
                                                                    (x2, pos)
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___4
                                                                    =
                                                                    LowParse_Writers_Effect.extract_repr_impl
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    })))
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    }))) ()
                                                                    () () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.bind_impl
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    () () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.get_state_impl
                                                                    ()
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    })))))
                                                                    (fun
                                                                    uu___5 ->
                                                                    (fun x3
                                                                    ->
                                                                    Obj.magic
                                                                    (LowParse_Writers_Effect.bind_impl
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    () () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.lift_read_impl
                                                                    ()
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.ReadRepr
                                                                    ((),
                                                                    (LowParse_Writers_Effect.mk_read_repr_impl
                                                                    () ()
                                                                    (fun
                                                                    uu___5 ->
                                                                    let base
                                                                    =
                                                                    x2.rlptr_base in
                                                                    let len =
                                                                    x2.rlptr_len in
                                                                    let sl =
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len
                                                                    } in
                                                                    if
                                                                    x2.rlptr_len
                                                                    =
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    then
                                                                    LowParse_Writers_Effect.Correct
                                                                    FStar_Pervasives_Native.None
                                                                    else
                                                                    (let pos1
                                                                    =
                                                                    (match 
                                                                    match p1
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> jumper)
                                                                    () ()
                                                                    (Obj.magic
                                                                    sl)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let b_hd
                                                                    =
                                                                    LowStar_Monotonic_Buffer.msub
                                                                    base
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    () in
                                                                    let len_tl
                                                                    =
                                                                    FStar_UInt32.sub
                                                                    len pos1 in
                                                                    let b_tl
                                                                    =
                                                                    LowStar_Monotonic_Buffer.msub
                                                                    base pos1
                                                                    () in
                                                                    LowParse_Writers_Effect.Correct
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((LowParse_Writers_Effect.mk_ptr
                                                                    p1 ()
                                                                    b_hd pos1),
                                                                    {
                                                                    rlptr_base
                                                                    = b_tl;
                                                                    rlptr_len
                                                                    = len_tl
                                                                    }))))))))))
                                                                    (fun
                                                                    uu___5 ->
                                                                    (fun x4
                                                                    ->
                                                                    match x4
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.None
                                                                    ->
                                                                    Obj.magic
                                                                    (Obj.repr
                                                                    (LowParse_Writers_Effect.lift_read_impl
                                                                    ()
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.ReadRepr
                                                                    ((),
                                                                    (LowParse_Writers_Effect.lift_pure_read_impl
                                                                    (fun
                                                                    uu___5 ->
                                                                    (x2,
                                                                    false))
                                                                    ()))))))
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    (hd, tl)
                                                                    ->
                                                                    Obj.magic
                                                                    (Obj.repr
                                                                    (LowParse_Writers_Effect.bind_impl
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    () () ()
                                                                    ()
                                                                    (LowParse_Writers_Effect.frame_impl
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    }))) ()
                                                                    p2 () ()
                                                                    ()
                                                                    (fun
                                                                    uu___5 ->
                                                                    f' hd))
                                                                    (fun
                                                                    uu___5 ->
                                                                    (fun x5
                                                                    ->
                                                                    Obj.magic
                                                                    (LowParse_Writers_Effect.bind_impl
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    ()
                                                                    (Obj.magic
                                                                    ()) () ()
                                                                    () () ()
                                                                    ()
                                                                    (LowParse_Writers_Effect.mk_repr_impl
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    (((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero)
                                                                    +
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_low));
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (if
                                                                    match 
                                                                    match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    uu___5 ->
                                                                    true
                                                                    | 
                                                                    uu___5 ->
                                                                    false
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    (((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)) +
                                                                    (match 
                                                                    match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high
                                                                    with
                                                                    | 
                                                                    FStar_Pervasives_Native.Some
                                                                    y -> y))
                                                                    else
                                                                    FStar_Pervasives_Native.None);
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserConsumesAll
                                                                    else
                                                                    if
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                    else
                                                                    if
                                                                    (if
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_high)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    Prims.int_zero)
                                                                    then
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_subkind)
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong)
                                                                    else
                                                                    false)
                                                                    then
                                                                    FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong
                                                                    else
                                                                    FStar_Pervasives_Native.None);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    (match 
                                                                    (FStar_Pervasives_Native.None,
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata))
                                                                    with
                                                                    | 
                                                                    (FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail),
                                                                    uu___5)
                                                                    ->
                                                                    FStar_Pervasives_Native.None
                                                                    | 
                                                                    (uu___5,
                                                                    FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataFail))
                                                                    ->
                                                                    (match 
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    -> kind
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    parser_kind_low;
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    parser_kind_high;
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    parser_kind_subkind;
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    parser_kind_metadata;_}
                                                                    ->
                                                                    parser_kind_metadata)
                                                                    | 
                                                                    (FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataTotal),
                                                                    FStar_Pervasives_Native.Some
                                                                    (LowParse_Spec_Base.ParserKindMetadataTotal))
                                                                    ->
                                                                    FStar_Pervasives_Native.None
                                                                    | 
                                                                    uu___5 ->
                                                                    FStar_Pervasives_Native.None)
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h4 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___6
                                                                    =
                                                                    let uu___7
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___8
                                                                    when
                                                                    uu___8 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___8
                                                                    when
                                                                    uu___8 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___8
                                                                    when
                                                                    uu___8 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___8
                                                                    when
                                                                    uu___8 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___7 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___6 in
                                                                    match 
                                                                    match p2
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Parser.Parser
                                                                    (t, p) ->
                                                                    p
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    = kind;
                                                                    LowParse_Writers_Parser.parser
                                                                    = parser;
                                                                    LowParse_Writers_Parser.serializer
                                                                    =
                                                                    serializer;
                                                                    LowParse_Writers_Parser.jumper
                                                                    = jumper;_}
                                                                    ->
                                                                    jumper ()
                                                                    () input
                                                                    uu___5)
                                                                    })))
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input
                                                                    pos1
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input
                                                                    pos1 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    pos1
                                                                    uu___5)
                                                                    }))) ()
                                                                    () () ()
                                                                    ()
                                                                    (fun b1
                                                                    ->
                                                                    fun len
                                                                    ->
                                                                    fun pos1
                                                                    ->
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let sl =
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = b1;
                                                                    LowParse_Slice.len
                                                                    = len
                                                                    } in
                                                                    let pos_last
                                                                    =
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h4 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___5
                                                                    =
                                                                    let uu___6
                                                                    =
                                                                    (match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    (Obj.magic
                                                                    sl)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___6 in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    uu___5 in
                                                                    let pos_pl
                                                                    =
                                                                    FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))) in
                                                                    let sz =
                                                                    FStar_UInt32.sub
                                                                    pos1
                                                                    pos_pl in
                                                                    if
                                                                    (FStar_UInt32.lte
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    sz) &&
                                                                    (FStar_UInt32.lte
                                                                    sz max)
                                                                    then
                                                                    ((
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___6
                                                                    =
                                                                    (match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (fun x6
                                                                    ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos2
                                                                    ->
                                                                    let h01 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_1
                                                                    () x6 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos2 in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos2 len1)
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (fun x6
                                                                    ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos2
                                                                    ->
                                                                    let h01 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_2
                                                                    () x6 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos2 in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos2 len1)
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (fun x6
                                                                    ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos2
                                                                    ->
                                                                    let h01 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_3
                                                                    () x6 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos2 in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos2 len1)
                                                                    | 
                                                                    uu___7
                                                                    when
                                                                    uu___7 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (fun x6
                                                                    ->
                                                                    fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos2
                                                                    ->
                                                                    let h01 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let len1
                                                                    =
                                                                    LowParse_Low_BoundedInt.serialize32_bounded_integer_4
                                                                    () x6 ()
                                                                    ()
                                                                    (match input
                                                                    with
                                                                    | 
                                                                    {
                                                                    LowParse_Slice.base
                                                                    = base;
                                                                    LowParse_Slice.len
                                                                    = len2;_}
                                                                    -> base)
                                                                    pos2 in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    FStar_UInt32.add
                                                                    pos2 len1))
                                                                    (FStar_UInt32.sub
                                                                    pos1
                                                                    (FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))))
                                                                    () ()
                                                                    (Obj.magic
                                                                    sl)
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                    let h3 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in ());
                                                                    LowParse_Writers_Effect.ICorrect
                                                                    ((),
                                                                    pos1))
                                                                    else
                                                                    LowParse_Writers_Effect.IError
                                                                    "parse_vllist_snoc_weak: out of bounds"))
                                                                    (fun
                                                                    uu___5 ->
                                                                    (fun x6
                                                                    ->
                                                                    Obj.magic
                                                                    (LowParse_Writers_Effect.lift_read_impl
                                                                    ()
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.ReadRepr
                                                                    ((),
                                                                    (LowParse_Writers_Effect.lift_pure_read_impl
                                                                    (fun
                                                                    uu___5 ->
                                                                    (tl,
                                                                    true)) ()))))))
                                                                    uu___5)))
                                                                    uu___5))))
                                                                    uu___5)))
                                                                    uu___5)))
                                                                    b blen
                                                                    pos in
                                                                    (match uu___4
                                                                    with
                                                                    | 
                                                                    LowParse_Writers_Effect.ICorrect
                                                                    ((x',
                                                                    cont),
                                                                    pos') ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    (LowParse_Writers_Effect.ICorrect
                                                                    (x',
                                                                    pos')));
                                                                    (let h' =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    Prims.op_Negation
                                                                    cont))
                                                                    | 
                                                                    LowParse_Writers_Effect.IError
                                                                    s ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    (LowParse_Writers_Effect.IError
                                                                    s));
                                                                    true)
                                                                    | 
                                                                    LowParse_Writers_Effect.IOverflow
                                                                    ->
                                                                    ((
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    LowStar_Monotonic_Buffer.upd'
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero)
                                                                    LowParse_Writers_Effect.IOverflow);
                                                                    true)));
                                                                (let res =
                                                                   LowStar_Monotonic_Buffer.index
                                                                    btemp
                                                                    (FStar_UInt32.uint_to_t
                                                                    Prims.int_zero) in
                                                                 FStar_HyperStack_ST.pop_frame
                                                                   ();
                                                                 res))))
                                                     (fun uu___ ->
                                                        (fun x2 ->
                                                           Obj.magic
                                                             (LowParse_Writers_Effect.bind_impl
                                                                (Obj.magic ())
                                                                (Obj.magic ())
                                                                () () ()
                                                                (Obj.magic ())
                                                                () () () ()
                                                                () ()
                                                                (Obj.magic
                                                                   (LowParse_Writers_Effect.get_state_impl
                                                                    ()
                                                                    (LowParse_Writers_Parser.Parser
                                                                    ((),
                                                                    (Obj.magic
                                                                    {
                                                                    LowParse_Writers_Parser.kind
                                                                    =
                                                                    {
                                                                    LowParse_Spec_Base.parser_kind_low
                                                                    =
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    Prims.int_zero);
                                                                    LowParse_Spec_Base.parser_kind_high
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    ((if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4)))
                                                                    +
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    max)));
                                                                    LowParse_Spec_Base.parser_kind_subkind
                                                                    =
                                                                    (FStar_Pervasives_Native.Some
                                                                    LowParse_Spec_Base.ParserStrong);
                                                                    LowParse_Spec_Base.parser_kind_metadata
                                                                    =
                                                                    FStar_Pervasives_Native.None
                                                                    };
                                                                    LowParse_Writers_Parser.parser
                                                                    = ();
                                                                    LowParse_Writers_Parser.serializer
                                                                    = ();
                                                                    LowParse_Writers_Parser.jumper
                                                                    =
                                                                    (fun rrel
                                                                    ->
                                                                    fun rel
                                                                    ->
                                                                    fun input
                                                                    ->
                                                                    fun pos
                                                                    ->
                                                                    let h =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h1 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let h2 =
                                                                    FStar_HyperStack_ST.get
                                                                    () in
                                                                    let uu___
                                                                    =
                                                                    let uu___1
                                                                    =
                                                                    match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                    with
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                    | 
                                                                    uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                    FStar_UInt32.add
                                                                    (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                    uu___1 in
                                                                    FStar_UInt32.add
                                                                    pos uu___)
                                                                    })))))
                                                                (fun uu___ ->
                                                                   (fun x3 ->
                                                                    Obj.magic
                                                                    (LowParse_Writers_Effect.lift_read_impl
                                                                    ()
                                                                    (Obj.magic
                                                                    ())
                                                                    (Obj.magic
                                                                    (LowParse_Writers_Effect.ReadRepr
                                                                    ((),
                                                                    (LowParse_Writers_Effect.lift_pure_read_impl
                                                                    (fun
                                                                    uu___ ->
                                                                    ()) ()))))))
                                                                    uu___)))
                                                          uu___))) uu___)))
                                    (fun x1 ->
                                       LowParse_Writers_Effect.mk_repr_impl
                                         (LowParse_Writers_Parser.Parser
                                            ((),
                                              (Obj.magic
                                                 {
                                                   LowParse_Writers_Parser.kind
                                                     =
                                                     {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         =
                                                         ((if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.of_int (256))
                                                           then Prims.int_one
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "65536")
                                                             then
                                                               (Prims.of_int (2))
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "16777216")
                                                               then
                                                                 (Prims.of_int (3))
                                                               else
                                                                 (Prims.of_int (4)))
                                                            + Prims.int_zero);
                                                       LowParse_Spec_Base.parser_kind_high
                                                         =
                                                         (FStar_Pervasives_Native.Some
                                                            ((if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.of_int (256))
                                                              then
                                                                Prims.int_one
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                then
                                                                  (Prims.of_int (2))
                                                                else
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                  then
                                                                    (Prims.of_int (3))
                                                                  else
                                                                    (Prims.of_int (4)))
                                                               +
                                                               (if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    Prims.int_zero
                                                                then
                                                                  Prims.int_zero
                                                                else
                                                                  FStar_UInt32.v
                                                                    max)));
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         (FStar_Pervasives_Native.Some
                                                            LowParse_Spec_Base.ParserStrong);
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         FStar_Pervasives_Native.None
                                                     };
                                                   LowParse_Writers_Parser.parser
                                                     = ();
                                                   LowParse_Writers_Parser.serializer
                                                     = ();
                                                   LowParse_Writers_Parser.jumper
                                                     =
                                                     (fun rrel ->
                                                        fun rel ->
                                                          fun input ->
                                                            fun pos ->
                                                              let h =
                                                                FStar_HyperStack_ST.get
                                                                  () in
                                                              let h1 =
                                                                FStar_HyperStack_ST.get
                                                                  () in
                                                              let h2 =
                                                                FStar_HyperStack_ST.get
                                                                  () in
                                                              let uu___ =
                                                                let uu___1 =
                                                                  match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                  with
                                                                  | uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                  | uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                  | uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                  | uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                FStar_UInt32.add
                                                                  (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                  uu___1 in
                                                              FStar_UInt32.add
                                                                pos uu___)
                                                 })))
                                         (LowParse_Writers_Parser.Parser
                                            ((),
                                              (Obj.magic
                                                 {
                                                   LowParse_Writers_Parser.kind
                                                     =
                                                     {
                                                       LowParse_Spec_Base.parser_kind_low
                                                         =
                                                         ((if
                                                             (FStar_UInt32.v
                                                                max)
                                                               <
                                                               (Prims.of_int (256))
                                                           then Prims.int_one
                                                           else
                                                             if
                                                               (FStar_UInt32.v
                                                                  max)
                                                                 <
                                                                 (Prims.parse_int "65536")
                                                             then
                                                               (Prims.of_int (2))
                                                             else
                                                               if
                                                                 (FStar_UInt32.v
                                                                    max)
                                                                   <
                                                                   (Prims.parse_int "16777216")
                                                               then
                                                                 (Prims.of_int (3))
                                                               else
                                                                 (Prims.of_int (4)))
                                                            +
                                                            (if
                                                               Prims.int_zero
                                                                 >
                                                                 (FStar_UInt32.v
                                                                    min)
                                                             then
                                                               Prims.int_zero
                                                             else
                                                               FStar_UInt32.v
                                                                 min));
                                                       LowParse_Spec_Base.parser_kind_high
                                                         =
                                                         (FStar_Pervasives_Native.Some
                                                            ((if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.of_int (256))
                                                              then
                                                                Prims.int_one
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                then
                                                                  (Prims.of_int (2))
                                                                else
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                  then
                                                                    (Prims.of_int (3))
                                                                  else
                                                                    (Prims.of_int (4)))
                                                               +
                                                               (if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    ((
                                                                    if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                    then
                                                                    Prims.int_zero
                                                                    else
                                                                    FStar_UInt32.v
                                                                    min))
                                                                then
                                                                  (if
                                                                    Prims.int_zero
                                                                    >
                                                                    (FStar_UInt32.v
                                                                    min)
                                                                   then
                                                                    Prims.int_zero
                                                                   else
                                                                    FStar_UInt32.v
                                                                    min)
                                                                else
                                                                  FStar_UInt32.v
                                                                    max)));
                                                       LowParse_Spec_Base.parser_kind_subkind
                                                         =
                                                         (FStar_Pervasives_Native.Some
                                                            LowParse_Spec_Base.ParserStrong);
                                                       LowParse_Spec_Base.parser_kind_metadata
                                                         =
                                                         FStar_Pervasives_Native.None
                                                     };
                                                   LowParse_Writers_Parser.parser
                                                     = ();
                                                   LowParse_Writers_Parser.serializer
                                                     = ();
                                                   LowParse_Writers_Parser.jumper
                                                     =
                                                     (fun rrel ->
                                                        fun rel ->
                                                          fun input ->
                                                            fun pos ->
                                                              let h =
                                                                FStar_HyperStack_ST.get
                                                                  () in
                                                              let h1 =
                                                                FStar_HyperStack_ST.get
                                                                  () in
                                                              let h2 =
                                                                FStar_HyperStack_ST.get
                                                                  () in
                                                              let uu___ =
                                                                let uu___1 =
                                                                  match 
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))
                                                                  with
                                                                  | uu___2
                                                                    when
                                                                    uu___2 =
                                                                    Prims.int_one
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_1
                                                                    ()) () ()
                                                                    input pos
                                                                  | uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (2))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_2
                                                                    ()) () ()
                                                                    input pos
                                                                  | uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (3))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_3
                                                                    ()) () ()
                                                                    input pos
                                                                  | uu___2
                                                                    when
                                                                    uu___2 =
                                                                    (Prims.of_int (4))
                                                                    ->
                                                                    (LowParse_Low_BoundedInt.read_bounded_integer_4
                                                                    ()) () ()
                                                                    input pos in
                                                                FStar_UInt32.add
                                                                  (FStar_UInt32.uint_to_t
                                                                    (if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.of_int (256))
                                                                    then
                                                                    Prims.int_one
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                    then
                                                                    (Prims.of_int (2))
                                                                    else
                                                                    if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                    then
                                                                    (Prims.of_int (3))
                                                                    else
                                                                    (Prims.of_int (4))))
                                                                  uu___1 in
                                                              FStar_UInt32.add
                                                                pos uu___)
                                                 }))) () () () () ()
                                         (fun b ->
                                            fun len ->
                                              fun pos ->
                                                let h =
                                                  FStar_HyperStack_ST.get () in
                                                if
                                                  (FStar_UInt32.lte min
                                                     (FStar_UInt32.sub pos
                                                        (FStar_UInt32.uint_to_t
                                                           (if
                                                              (FStar_UInt32.v
                                                                 max)
                                                                <
                                                                (Prims.of_int (256))
                                                            then
                                                              Prims.int_one
                                                            else
                                                              if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.parse_int "65536")
                                                              then
                                                                (Prims.of_int (2))
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                then
                                                                  (Prims.of_int (3))
                                                                else
                                                                  (Prims.of_int (4))))))
                                                    &&
                                                    (FStar_UInt32.lte
                                                       (FStar_UInt32.sub pos
                                                          (FStar_UInt32.uint_to_t
                                                             (if
                                                                (FStar_UInt32.v
                                                                   max)
                                                                  <
                                                                  (Prims.of_int (256))
                                                              then
                                                                Prims.int_one
                                                              else
                                                                if
                                                                  (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "65536")
                                                                then
                                                                  (Prims.of_int (2))
                                                                else
                                                                  if
                                                                    (FStar_UInt32.v
                                                                    max) <
                                                                    (Prims.parse_int "16777216")
                                                                  then
                                                                    (Prims.of_int (3))
                                                                  else
                                                                    (Prims.of_int (4)))))
                                                       max)
                                                then
                                                  LowParse_Writers_Effect.ICorrect
                                                    ((), pos)
                                                else
                                                  LowParse_Writers_Effect.IError
                                                    "parse_vllist_recast: out of bounds"))))
                              uu___)))